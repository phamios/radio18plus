android.support.v4.app.ActionBarDrawerToggle -> android.support.v4.app.ActionBarDrawerToggle:
    android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl IMPL -> IMPL
    int ID_HOME -> ID_HOME
    android.app.Activity mActivity -> mActivity
    android.support.v4.app.ActionBarDrawerToggle$Delegate mActivityImpl -> mActivityImpl
    android.support.v4.widget.DrawerLayout mDrawerLayout -> mDrawerLayout
    boolean mDrawerIndicatorEnabled -> mDrawerIndicatorEnabled
    android.graphics.drawable.Drawable mThemeImage -> mThemeImage
    android.graphics.drawable.Drawable mDrawerImage -> mDrawerImage
    android.support.v4.app.ActionBarDrawerToggle$SlideDrawable mSlider -> mSlider
    int mDrawerImageResource -> mDrawerImageResource
    int mOpenDrawerContentDescRes -> mOpenDrawerContentDescRes
    int mCloseDrawerContentDescRes -> mCloseDrawerContentDescRes
    java.lang.Object mSetIndicatorInfo -> mSetIndicatorInfo
    void syncState() -> syncState
    void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$1 -> android.support.v4.app.ActionBarDrawerToggle$1:
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImpl:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplBase:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC -> android.support.v4.app.ActionBarDrawerToggle$ActionBarDrawerToggleImplHC:
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$Delegate -> android.support.v4.app.ActionBarDrawerToggle$Delegate:
    android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    void setActionBarDescription(int) -> setActionBarDescription
android.support.v4.app.ActionBarDrawerToggle$DelegateProvider -> android.support.v4.app.ActionBarDrawerToggle$DelegateProvider:
    android.support.v4.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
android.support.v4.app.ActionBarDrawerToggle$SlideDrawable -> android.support.v4.app.ActionBarDrawerToggle$SlideDrawable:
    android.graphics.drawable.Drawable mWrapped -> mWrapped
    float mOffset -> mOffset
    float mOffsetBy -> mOffsetBy
    android.graphics.Rect mTmpRect -> mTmpRect
    void setOffset(float) -> setOffset
    float getOffset() -> getOffset
    void setOffsetBy(float) -> setOffsetBy
    void draw(android.graphics.Canvas) -> draw
    void setChangingConfigurations(int) -> setChangingConfigurations
    int getChangingConfigurations() -> getChangingConfigurations
    void setDither(boolean) -> setDither
    void setFilterBitmap(boolean) -> setFilterBitmap
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    void clearColorFilter() -> clearColorFilter
    boolean isStateful() -> isStateful
    boolean setState(int[]) -> setState
    int[] getState() -> getState
    android.graphics.drawable.Drawable getCurrent() -> getCurrent
    boolean setVisible(boolean,boolean) -> setVisible
    int getOpacity() -> getOpacity
    android.graphics.Region getTransparentRegion() -> getTransparentRegion
    boolean onStateChange(int[]) -> onStateChange
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    int getIntrinsicWidth() -> getIntrinsicWidth
    int getIntrinsicHeight() -> getIntrinsicHeight
    int getMinimumWidth() -> getMinimumWidth
    int getMinimumHeight() -> getMinimumHeight
    boolean getPadding(android.graphics.Rect) -> getPadding
    android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
android.support.v4.app.ActionBarDrawerToggleHoneycomb -> android.support.v4.app.ActionBarDrawerToggleHoneycomb:
    java.lang.String TAG -> TAG
    int[] THEME_ATTRS -> THEME_ATTRS
    java.lang.Object setActionBarUpIndicator(java.lang.Object,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    java.lang.Object setActionBarDescription(java.lang.Object,android.app.Activity,int) -> setActionBarDescription
    android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> android.support.v4.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    java.lang.reflect.Method setHomeAsUpIndicator -> setHomeAsUpIndicator
    java.lang.reflect.Method setHomeActionContentDescription -> setHomeActionContentDescription
    android.widget.ImageView upIndicatorView -> upIndicatorView
android.support.v4.app.ActivityCompat -> android.support.v4.app.ActivityCompat:
    boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void startActivity(android.app.Activity,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.ActivityCompatHoneycomb:
    void invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    void dump(android.app.Activity,java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.ActivityCompatJB -> android.support.v4.app.ActivityCompatJB:
    void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    void finishAffinity(android.app.Activity) -> finishAffinity
android.support.v4.app.ActivityOptionsCompat -> android.support.v4.app.ActivityOptionsCompat:
    android.support.v4.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB -> android.support.v4.app.ActivityOptionsCompat$ActivityOptionsImplJB:
    android.support.v4.app.ActivityOptionsCompatJB mImpl -> mImpl
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompat) -> update
android.support.v4.app.ActivityOptionsCompatJB -> android.support.v4.app.ActivityOptionsCompatJB:
    android.app.ActivityOptions mActivityOptions -> mActivityOptions
    android.support.v4.app.ActivityOptionsCompatJB makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    android.support.v4.app.ActivityOptionsCompatJB makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    android.os.Bundle toBundle() -> toBundle
    void update(android.support.v4.app.ActivityOptionsCompatJB) -> update
android.support.v4.app.BackStackRecord -> android.support.v4.app.BackStackRecord:
    java.lang.String TAG -> TAG
    android.support.v4.app.FragmentManagerImpl mManager -> mManager
    int OP_NULL -> OP_NULL
    int OP_ADD -> OP_ADD
    int OP_REPLACE -> OP_REPLACE
    int OP_REMOVE -> OP_REMOVE
    int OP_HIDE -> OP_HIDE
    int OP_SHOW -> OP_SHOW
    int OP_DETACH -> OP_DETACH
    int OP_ATTACH -> OP_ATTACH
    android.support.v4.app.BackStackRecord$Op mHead -> mHead
    android.support.v4.app.BackStackRecord$Op mTail -> mTail
    int mNumOp -> mNumOp
    int mEnterAnim -> mEnterAnim
    int mExitAnim -> mExitAnim
    int mPopEnterAnim -> mPopEnterAnim
    int mPopExitAnim -> mPopExitAnim
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    boolean mAddToBackStack -> mAddToBackStack
    boolean mAllowAddToBackStack -> mAllowAddToBackStack
    java.lang.String mName -> mName
    boolean mCommitted -> mCommitted
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    int getId() -> getId
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    void addOp(android.support.v4.app.BackStackRecord$Op) -> addOp
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> doAddOp
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    void bumpBackStackNesting(int) -> bumpBackStackNesting
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
    int commitInternal(boolean) -> commitInternal
    void run() -> run
    void popFromBackStack(boolean) -> popFromBackStack
    java.lang.String getName() -> getName
    int getTransition() -> getTransition
    int getTransitionStyle() -> getTransitionStyle
    boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.BackStackRecord$Op:
    android.support.v4.app.BackStackRecord$Op next -> next
    android.support.v4.app.BackStackRecord$Op prev -> prev
    int cmd -> cmd
    android.support.v4.app.Fragment fragment -> fragment
    int enterAnim -> enterAnim
    int exitAnim -> exitAnim
    int popEnterAnim -> popEnterAnim
    int popExitAnim -> popExitAnim
    java.util.ArrayList removed -> removed
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> mOps
    int mTransition -> mTransition
    int mTransitionStyle -> mTransitionStyle
    java.lang.String mName -> mName
    int mIndex -> mIndex
    int mBreadCrumbTitleRes -> mBreadCrumbTitleRes
    java.lang.CharSequence mBreadCrumbTitleText -> mBreadCrumbTitleText
    int mBreadCrumbShortTitleRes -> mBreadCrumbShortTitleRes
    java.lang.CharSequence mBreadCrumbShortTitleText -> mBreadCrumbShortTitleText
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.BackStackState$1:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.BackStackState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    void setStyle(int,int) -> setStyle
    void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    void dismiss() -> dismiss
    void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    void dismissInternal(boolean) -> dismissInternal
    android.app.Dialog getDialog() -> getDialog
    int getTheme() -> getTheme
    void setCancelable(boolean) -> setCancelable
    boolean isCancelable() -> isCancelable
    void setShowsDialog(boolean) -> setShowsDialog
    boolean getShowsDialog() -> getShowsDialog
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreate(android.os.Bundle) -> onCreate
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    void onCancel(android.content.DialogInterface) -> onCancel
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onStart() -> onStart
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStop() -> onStop
    void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    void restoreViewState(android.os.Bundle) -> restoreViewState
    void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    boolean isInBackStack() -> isInBackStack
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int getId() -> getId
    java.lang.String getTag() -> getTag
    void setArguments(android.os.Bundle) -> setArguments
    android.os.Bundle getArguments() -> getArguments
    void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    int getTargetRequestCode() -> getTargetRequestCode
    android.support.v4.app.FragmentActivity getActivity() -> getActivity
    android.content.res.Resources getResources() -> getResources
    java.lang.CharSequence getText(int) -> getText
    java.lang.String getString(int) -> getString
    java.lang.String getString(int,java.lang.Object[]) -> getString
    android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    boolean isAdded() -> isAdded
    boolean isDetached() -> isDetached
    boolean isRemoving() -> isRemoving
    boolean isInLayout() -> isInLayout
    boolean isResumed() -> isResumed
    boolean isVisible() -> isVisible
    boolean isHidden() -> isHidden
    boolean hasOptionsMenu() -> hasOptionsMenu
    boolean isMenuVisible() -> isMenuVisible
    void onHiddenChanged(boolean) -> onHiddenChanged
    void setRetainInstance(boolean) -> setRetainInstance
    boolean getRetainInstance() -> getRetainInstance
    void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    void setMenuVisibility(boolean) -> setMenuVisibility
    void setUserVisibleHint(boolean) -> setUserVisibleHint
    boolean getUserVisibleHint() -> getUserVisibleHint
    android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    void startActivity(android.content.Intent) -> startActivity
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    void onAttach(android.app.Activity) -> onAttach
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    android.view.View getView() -> getView
    void onActivityCreated(android.os.Bundle) -> onActivityCreated
    void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    void onStart() -> onStart
    void onResume() -> onResume
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> onPause
    void onStop() -> onStop
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> onDestroyView
    void onDestroy() -> onDestroy
    void initState() -> initState
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    void registerForContextMenu(android.view.View) -> registerForContextMenu
    void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    void performCreate(android.os.Bundle) -> performCreate
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    void performActivityCreated(android.os.Bundle) -> performActivityCreated
    void performStart() -> performStart
    void performResume() -> performResume
    void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    void performLowMemory() -> performLowMemory
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    void performPause() -> performPause
    void performStop() -> performStop
    void performReallyStop() -> performReallyStop
    void performDestroyView() -> performDestroyView
    void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.Fragment$1:
    android.support.v4.app.Fragment this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.Fragment$InstantiationException:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> mState
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.Fragment$SavedState$1:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    java.util.HashMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> onResumeFragments
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> viewToString
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    void doReallyStop(boolean) -> doReallyStop
    void onReallyStop() -> onReallyStop
    void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.FragmentActivity$1:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.FragmentActivity$2:
    android.support.v4.app.FragmentActivity this$0 -> this$0
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.FragmentActivity$FragmentTag:
    int[] Fragment -> Fragment
    int Fragment_id -> Fragment_id
    int Fragment_name -> Fragment_name
    int Fragment_tag -> Fragment_tag
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.FragmentActivity$NonConfigurationInstances:
    java.lang.Object activity -> activity
    java.lang.Object custom -> custom
    java.util.HashMap children -> children
    java.util.ArrayList fragments -> fragments
    java.util.HashMap loaders -> loaders
android.support.v4.app.FragmentContainer -> android.support.v4.app.FragmentContainer:
    android.view.View findViewById(int) -> findViewById
android.support.v4.app.FragmentManager -> android.support.v4.app.FragmentManager:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.FragmentManager$BackStackEntry:
    int getId() -> getId
    java.lang.String getName() -> getName
    int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.FragmentManager$OnBackStackChangedListener:
    void onBackStackChanged() -> onBackStackChanged
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.FragmentManagerImpl:
    boolean DEBUG -> DEBUG
    java.lang.String TAG -> TAG
    boolean HONEYCOMB -> HONEYCOMB
    java.lang.String TARGET_REQUEST_CODE_STATE_TAG -> TARGET_REQUEST_CODE_STATE_TAG
    java.lang.String TARGET_STATE_TAG -> TARGET_STATE_TAG
    java.lang.String VIEW_STATE_TAG -> VIEW_STATE_TAG
    java.lang.String USER_VISIBLE_HINT_TAG -> USER_VISIBLE_HINT_TAG
    java.util.ArrayList mPendingActions -> mPendingActions
    java.lang.Runnable[] mTmpActions -> mTmpActions
    boolean mExecutingActions -> mExecutingActions
    java.util.ArrayList mActive -> mActive
    java.util.ArrayList mAdded -> mAdded
    java.util.ArrayList mAvailIndices -> mAvailIndices
    java.util.ArrayList mBackStack -> mBackStack
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    java.util.ArrayList mBackStackIndices -> mBackStackIndices
    java.util.ArrayList mAvailBackStackIndices -> mAvailBackStackIndices
    java.util.ArrayList mBackStackChangeListeners -> mBackStackChangeListeners
    int mCurState -> mCurState
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    android.support.v4.app.Fragment mParent -> mParent
    boolean mNeedMenuInvalidate -> mNeedMenuInvalidate
    boolean mStateSaved -> mStateSaved
    boolean mDestroyed -> mDestroyed
    java.lang.String mNoTransactionsBecause -> mNoTransactionsBecause
    boolean mHavePendingDeferredStart -> mHavePendingDeferredStart
    android.os.Bundle mStateBundle -> mStateBundle
    android.util.SparseArray mStateArray -> mStateArray
    java.lang.Runnable mExecCommit -> mExecCommit
    android.view.animation.Interpolator DECELERATE_QUINT -> DECELERATE_QUINT
    android.view.animation.Interpolator DECELERATE_CUBIC -> DECELERATE_CUBIC
    android.view.animation.Interpolator ACCELERATE_QUINT -> ACCELERATE_QUINT
    android.view.animation.Interpolator ACCELERATE_CUBIC -> ACCELERATE_CUBIC
    int ANIM_DUR -> ANIM_DUR
    int ANIM_STYLE_OPEN_ENTER -> ANIM_STYLE_OPEN_ENTER
    int ANIM_STYLE_OPEN_EXIT -> ANIM_STYLE_OPEN_EXIT
    int ANIM_STYLE_CLOSE_ENTER -> ANIM_STYLE_CLOSE_ENTER
    int ANIM_STYLE_CLOSE_EXIT -> ANIM_STYLE_CLOSE_EXIT
    int ANIM_STYLE_FADE_ENTER -> ANIM_STYLE_FADE_ENTER
    int ANIM_STYLE_FADE_EXIT -> ANIM_STYLE_FADE_EXIT
    void throwException(java.lang.RuntimeException) -> throwException
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    java.util.List getFragments() -> getFragments
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> loadAnimation
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> performPendingDeferredStart
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> moveToState
    void moveToState(android.support.v4.app.Fragment) -> moveToState
    void moveToState(int,boolean) -> moveToState
    void moveToState(int,int,int,boolean) -> moveToState
    void startPendingDeferredFragments() -> startPendingDeferredFragments
    void makeActive(android.support.v4.app.Fragment) -> makeActive
    void makeInactive(android.support.v4.app.Fragment) -> makeInactive
    void addFragment(android.support.v4.app.Fragment,boolean) -> addFragment
    void removeFragment(android.support.v4.app.Fragment,int,int) -> removeFragment
    void hideFragment(android.support.v4.app.Fragment,int,int) -> hideFragment
    void showFragment(android.support.v4.app.Fragment,int,int) -> showFragment
    void detachFragment(android.support.v4.app.Fragment,int,int) -> detachFragment
    void attachFragment(android.support.v4.app.Fragment,int,int) -> attachFragment
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    void checkStateLoss() -> checkStateLoss
    void enqueueAction(java.lang.Runnable,boolean) -> enqueueAction
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> allocBackStackIndex
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> setBackStackIndex
    void freeBackStackIndex(int) -> freeBackStackIndex
    boolean execPendingActions() -> execPendingActions
    void reportBackStackChanged() -> reportBackStackChanged
    void addBackStackState(android.support.v4.app.BackStackRecord) -> addBackStackState
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> popBackStackState
    java.util.ArrayList retainNonConfig() -> retainNonConfig
    void saveFragmentViewState(android.support.v4.app.Fragment) -> saveFragmentViewState
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> saveFragmentBasicState
    android.os.Parcelable saveAllState() -> saveAllState
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> restoreAllState
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> attachActivity
    void noteStateNotSaved() -> noteStateNotSaved
    void dispatchCreate() -> dispatchCreate
    void dispatchActivityCreated() -> dispatchActivityCreated
    void dispatchStart() -> dispatchStart
    void dispatchResume() -> dispatchResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchReallyStop() -> dispatchReallyStop
    void dispatchDestroyView() -> dispatchDestroyView
    void dispatchDestroy() -> dispatchDestroy
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchLowMemory() -> dispatchLowMemory
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    int reverseTransit(int) -> reverseTransit
    int transitToStyleIndex(int,boolean) -> transitToStyleIndex
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.FragmentManagerImpl$1:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.FragmentManagerImpl$2:
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.FragmentManagerImpl$3:
    java.lang.String val$name -> val$name
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.FragmentManagerImpl$4:
    int val$id -> val$id
    int val$flags -> val$flags
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.FragmentManagerImpl$5:
    android.support.v4.app.Fragment val$fragment -> val$fragment
    android.support.v4.app.FragmentManagerImpl this$0 -> this$0
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> mActive
    int[] mAdded -> mAdded
    android.support.v4.app.BackStackState[] mBackStack -> mBackStack
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.FragmentManagerState$1:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentManagerState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentPagerAdapter -> android.support.v4.app.FragmentPagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    long getItemId(int) -> getItemId
    java.lang.String makeFragmentName(int,long) -> makeFragmentName
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> mClassName
    int mIndex -> mIndex
    boolean mFromLayout -> mFromLayout
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mRetainInstance -> mRetainInstance
    boolean mDetached -> mDetached
    android.os.Bundle mArguments -> mArguments
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.support.v4.app.Fragment mInstance -> mInstance
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> instantiate
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.FragmentState$1:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentStatePagerAdapter -> android.support.v4.app.FragmentStatePagerAdapter:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentTransaction mCurTransaction -> mCurTransaction
    java.util.ArrayList mSavedState -> mSavedState
    java.util.ArrayList mFragments -> mFragments
    android.support.v4.app.Fragment mCurrentPrimaryItem -> mCurrentPrimaryItem
    android.support.v4.app.Fragment getItem(int) -> getItem
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> mTabs
    android.widget.FrameLayout mRealTabContent -> mRealTabContent
    android.content.Context mContext -> mContext
    android.support.v4.app.FragmentManager mFragmentManager -> mFragmentManager
    int mContainerId -> mContainerId
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> mOnTabChangeListener
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> mLastTab
    boolean mAttached -> mAttached
    void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    void setup() -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager) -> setup
    void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> setup
    void ensureContent() -> ensureContent
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> doTabChanged
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.FragmentTabHost$1:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.FragmentTabHost$DummyTabFactory:
    android.content.Context mContext -> mContext
    android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> curTab
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.FragmentTabHost$SavedState$1:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.FragmentTabHost$TabInfo:
    java.lang.String tag -> tag
    java.lang.Class clss -> clss
    android.os.Bundle args -> args
    android.support.v4.app.Fragment fragment -> fragment
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> access$102
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> access$100
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> access$200
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> access$300
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> access$400
android.support.v4.app.FragmentTransaction -> android.support.v4.app.FragmentTransaction:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    void onDestroyView() -> onDestroyView
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    void setSelection(int) -> setSelection
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.widget.ListView getListView() -> getListView
    void setEmptyText(java.lang.CharSequence) -> setEmptyText
    void setListShown(boolean) -> setListShown
    void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    void setListShown(boolean,boolean) -> setListShown
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ListFragment$1:
    android.support.v4.app.ListFragment this$0 -> this$0
    void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ListFragment$2:
    android.support.v4.app.ListFragment this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.LoaderManager:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    void enableDebugLogging(boolean) -> enableDebugLogging
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.LoaderManager$LoaderCallbacks:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> onLoadFinished
    void onLoaderReset(android.support.v4.content.Loader) -> onLoaderReset
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.LoaderManagerImpl:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.util.SparseArrayCompat mLoaders -> mLoaders
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> mInactiveLoaders
    java.lang.String mWho -> mWho
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mCreatingLoader -> mCreatingLoader
    void updateActivity(android.support.v4.app.FragmentActivity) -> updateActivity
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createLoader
    android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> createAndInstallLoader
    void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> installLoader
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> initLoader
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> restartLoader
    void destroyLoader(int) -> destroyLoader
    android.support.v4.content.Loader getLoader(int) -> getLoader
    void doStart() -> doStart
    void doStop() -> doStop
    void doRetain() -> doRetain
    void finishRetain() -> finishRetain
    void doReportNextStart() -> doReportNextStart
    void doReportStart() -> doReportStart
    void doDestroy() -> doDestroy
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    boolean hasRunningLoaders() -> hasRunningLoaders
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.LoaderManagerImpl$LoaderInfo:
    int mId -> mId
    android.os.Bundle mArgs -> mArgs
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> mCallbacks
    android.support.v4.content.Loader mLoader -> mLoader
    boolean mHaveData -> mHaveData
    boolean mDeliveredData -> mDeliveredData
    java.lang.Object mData -> mData
    boolean mStarted -> mStarted
    boolean mRetaining -> mRetaining
    boolean mRetainingStarted -> mRetainingStarted
    boolean mReportNextStart -> mReportNextStart
    boolean mDestroyed -> mDestroyed
    boolean mListenerRegistered -> mListenerRegistered
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> mPendingLoader
    android.support.v4.app.LoaderManagerImpl this$0 -> this$0
    void start() -> start
    void retain() -> retain
    void finishRetain() -> finishRetain
    void reportStart() -> reportStart
    void stop() -> stop
    void destroy() -> destroy
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> onLoadComplete
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> callOnLoadFinished
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.app.NavUtils -> android.support.v4.app.NavUtils:
    java.lang.String TAG -> TAG
    java.lang.String PARENT_ACTIVITY -> PARENT_ACTIVITY
    android.support.v4.app.NavUtils$NavUtilsImpl IMPL -> IMPL
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImpl -> android.support.v4.app.NavUtils$NavUtilsImpl:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplBase -> android.support.v4.app.NavUtils$NavUtilsImplBase:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtils$NavUtilsImplJB -> android.support.v4.app.NavUtils$NavUtilsImplJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    android.content.Intent superGetParentActivityIntent(android.app.Activity) -> superGetParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.Context,android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NavUtilsJB -> android.support.v4.app.NavUtilsJB:
    android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
    void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    java.lang.String getParentActivityName(android.content.pm.ActivityInfo) -> getParentActivityName
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.NoSaveStateFrameLayout:
    android.view.ViewGroup wrap(android.view.View) -> wrap
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.NotificationCompat -> android.support.v4.app.NotificationCompat:
    int FLAG_HIGH_PRIORITY -> FLAG_HIGH_PRIORITY
    int PRIORITY_DEFAULT -> PRIORITY_DEFAULT
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_MIN -> PRIORITY_MIN
    int PRIORITY_HIGH -> PRIORITY_HIGH
    int PRIORITY_MAX -> PRIORITY_MAX
    android.support.v4.app.NotificationCompat$NotificationCompatImpl IMPL -> IMPL
    android.support.v4.app.NotificationCompat$NotificationCompatImpl access$000() -> access$000
android.support.v4.app.NotificationCompat$Action -> android.support.v4.app.NotificationCompat$Action:
    int icon -> icon
    java.lang.CharSequence title -> title
    android.app.PendingIntent actionIntent -> actionIntent
android.support.v4.app.NotificationCompat$BigPictureStyle -> android.support.v4.app.NotificationCompat$BigPictureStyle:
    android.graphics.Bitmap mPicture -> mPicture
    android.graphics.Bitmap mBigLargeIcon -> mBigLargeIcon
    boolean mBigLargeIconSet -> mBigLargeIconSet
    android.support.v4.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    android.support.v4.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
android.support.v4.app.NotificationCompat$BigTextStyle -> android.support.v4.app.NotificationCompat$BigTextStyle:
    java.lang.CharSequence mBigText -> mBigText
    android.support.v4.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
android.support.v4.app.NotificationCompat$Builder -> android.support.v4.app.NotificationCompat$Builder:
    android.content.Context mContext -> mContext
    java.lang.CharSequence mContentTitle -> mContentTitle
    java.lang.CharSequence mContentText -> mContentText
    android.app.PendingIntent mContentIntent -> mContentIntent
    android.app.PendingIntent mFullScreenIntent -> mFullScreenIntent
    android.widget.RemoteViews mTickerView -> mTickerView
    android.graphics.Bitmap mLargeIcon -> mLargeIcon
    java.lang.CharSequence mContentInfo -> mContentInfo
    int mNumber -> mNumber
    int mPriority -> mPriority
    boolean mUseChronometer -> mUseChronometer
    android.support.v4.app.NotificationCompat$Style mStyle -> mStyle
    java.lang.CharSequence mSubText -> mSubText
    int mProgressMax -> mProgressMax
    int mProgress -> mProgress
    boolean mProgressIndeterminate -> mProgressIndeterminate
    java.util.ArrayList mActions -> mActions
    android.app.Notification mNotification -> mNotification
    android.support.v4.app.NotificationCompat$Builder setWhen(long) -> setWhen
    android.support.v4.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    android.support.v4.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    android.support.v4.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    android.support.v4.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    android.support.v4.app.NotificationCompat$Builder setNumber(int) -> setNumber
    android.support.v4.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    android.support.v4.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    android.support.v4.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    android.support.v4.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    android.support.v4.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    android.support.v4.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    android.support.v4.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    android.support.v4.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    android.support.v4.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    android.support.v4.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    android.support.v4.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    android.support.v4.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    android.support.v4.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    android.support.v4.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    void setFlag(int,boolean) -> setFlag
    android.support.v4.app.NotificationCompat$Builder setPriority(int) -> setPriority
    android.support.v4.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    android.support.v4.app.NotificationCompat$Builder setStyle(android.support.v4.app.NotificationCompat$Style) -> setStyle
    android.app.Notification getNotification() -> getNotification
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompat$InboxStyle -> android.support.v4.app.NotificationCompat$InboxStyle:
    java.util.ArrayList mTexts -> mTexts
    android.support.v4.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    android.support.v4.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
    android.support.v4.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
android.support.v4.app.NotificationCompat$NotificationCompatImpl -> android.support.v4.app.NotificationCompat$NotificationCompatImpl:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplBase -> android.support.v4.app.NotificationCompat$NotificationCompatImplBase:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb -> android.support.v4.app.NotificationCompat$NotificationCompatImplHoneycomb:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich -> android.support.v4.app.NotificationCompat$NotificationCompatImplIceCreamSandwich:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean -> android.support.v4.app.NotificationCompat$NotificationCompatImplJellybean:
    android.app.Notification build(android.support.v4.app.NotificationCompat$Builder) -> build
android.support.v4.app.NotificationCompat$Style -> android.support.v4.app.NotificationCompat$Style:
    android.support.v4.app.NotificationCompat$Builder mBuilder -> mBuilder
    java.lang.CharSequence mBigContentTitle -> mBigContentTitle
    java.lang.CharSequence mSummaryText -> mSummaryText
    boolean mSummaryTextSet -> mSummaryTextSet
    void setBuilder(android.support.v4.app.NotificationCompat$Builder) -> setBuilder
    android.app.Notification build() -> build
android.support.v4.app.NotificationCompatHoneycomb -> android.support.v4.app.NotificationCompatHoneycomb:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap) -> add
android.support.v4.app.NotificationCompatIceCreamSandwich -> android.support.v4.app.NotificationCompatIceCreamSandwich:
    android.app.Notification add(android.content.Context,android.app.Notification,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.widget.RemoteViews,int,android.app.PendingIntent,android.app.PendingIntent,android.graphics.Bitmap,int,int,boolean) -> add
android.support.v4.app.NotificationCompatJellybean -> android.support.v4.app.NotificationCompatJellybean:
    android.app.Notification$Builder b -> b
    void addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    void addBigTextStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.lang.CharSequence) -> addBigTextStyle
    void addBigPictureStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> addBigPictureStyle
    void addInboxStyle(java.lang.CharSequence,boolean,java.lang.CharSequence,java.util.ArrayList) -> addInboxStyle
    android.app.Notification build() -> build
android.support.v4.app.ServiceCompat -> android.support.v4.app.ServiceCompat:
    int START_STICKY -> START_STICKY
android.support.v4.app.ShareCompat -> android.support.v4.app.ShareCompat:
    java.lang.String EXTRA_CALLING_PACKAGE -> EXTRA_CALLING_PACKAGE
    java.lang.String EXTRA_CALLING_ACTIVITY -> EXTRA_CALLING_ACTIVITY
    android.support.v4.app.ShareCompat$ShareCompatImpl IMPL -> IMPL
    java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    void configureMenuItem(android.view.Menu,int,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    android.support.v4.app.ShareCompat$ShareCompatImpl access$000() -> access$000
android.support.v4.app.ShareCompat$IntentBuilder -> android.support.v4.app.ShareCompat$IntentBuilder:
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.CharSequence mChooserTitle -> mChooserTitle
    java.util.ArrayList mToAddresses -> mToAddresses
    java.util.ArrayList mCcAddresses -> mCcAddresses
    java.util.ArrayList mBccAddresses -> mBccAddresses
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    android.content.Intent getIntent() -> getIntent
    android.app.Activity getActivity() -> getActivity
    void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    android.content.Intent createChooserIntent() -> createChooserIntent
    void startChooser() -> startChooser
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    android.support.v4.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    android.support.v4.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    android.support.v4.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    android.support.v4.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    android.support.v4.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    android.support.v4.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    android.support.v4.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    android.support.v4.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    android.support.v4.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
android.support.v4.app.ShareCompat$IntentReader -> android.support.v4.app.ShareCompat$IntentReader:
    java.lang.String TAG -> TAG
    android.app.Activity mActivity -> mActivity
    android.content.Intent mIntent -> mIntent
    java.lang.String mCallingPackage -> mCallingPackage
    android.content.ComponentName mCallingActivity -> mCallingActivity
    java.util.ArrayList mStreams -> mStreams
    android.support.v4.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    boolean isShareIntent() -> isShareIntent
    boolean isSingleShare() -> isSingleShare
    boolean isMultipleShare() -> isMultipleShare
    java.lang.String getType() -> getType
    java.lang.CharSequence getText() -> getText
    java.lang.String getHtmlText() -> getHtmlText
    android.net.Uri getStream() -> getStream
    android.net.Uri getStream(int) -> getStream
    int getStreamCount() -> getStreamCount
    java.lang.String[] getEmailTo() -> getEmailTo
    java.lang.String[] getEmailCc() -> getEmailCc
    java.lang.String[] getEmailBcc() -> getEmailBcc
    java.lang.String getSubject() -> getSubject
    java.lang.String getCallingPackage() -> getCallingPackage
    android.content.ComponentName getCallingActivity() -> getCallingActivity
    android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
android.support.v4.app.ShareCompat$ShareCompatImpl -> android.support.v4.app.ShareCompat$ShareCompatImpl:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.ShareCompat$ShareCompatImplBase -> android.support.v4.app.ShareCompat$ShareCompatImplBase:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
android.support.v4.app.ShareCompat$ShareCompatImplICS -> android.support.v4.app.ShareCompat$ShareCompatImplICS:
    void configureMenuItem(android.view.MenuItem,android.support.v4.app.ShareCompat$IntentBuilder) -> configureMenuItem
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompat$ShareCompatImplJB -> android.support.v4.app.ShareCompat$ShareCompatImplJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
    boolean shouldAddChooserIntent(android.view.MenuItem) -> shouldAddChooserIntent
android.support.v4.app.ShareCompatICS -> android.support.v4.app.ShareCompatICS:
    java.lang.String HISTORY_FILENAME_PREFIX -> HISTORY_FILENAME_PREFIX
    void configureMenuItem(android.view.MenuItem,android.app.Activity,android.content.Intent) -> configureMenuItem
android.support.v4.app.ShareCompatJB -> android.support.v4.app.ShareCompatJB:
    java.lang.String escapeHtml(java.lang.CharSequence) -> escapeHtml
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.SuperNotCalledException:
android.support.v4.app.TaskStackBuilder -> android.support.v4.app.TaskStackBuilder:
    java.lang.String TAG -> TAG
    android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl IMPL -> IMPL
    java.util.ArrayList mIntents -> mIntents
    android.content.Context mSourceContext -> mSourceContext
    android.support.v4.app.TaskStackBuilder create(android.content.Context) -> create
    android.support.v4.app.TaskStackBuilder from(android.content.Context) -> from
    android.support.v4.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    android.support.v4.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    android.support.v4.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    int getIntentCount() -> getIntentCount
    android.content.Intent getIntent(int) -> getIntent
    android.content.Intent editIntentAt(int) -> editIntentAt
    java.util.Iterator iterator() -> iterator
    void startActivities() -> startActivities
    void startActivities(android.os.Bundle) -> startActivities
    android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    android.content.Intent[] getIntents() -> getIntents
android.support.v4.app.TaskStackBuilder$SupportParentable -> android.support.v4.app.TaskStackBuilder$SupportParentable:
    android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImpl:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplBase:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplHoneycomb:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean -> android.support.v4.app.TaskStackBuilder$TaskStackBuilderImplJellybean:
    android.app.PendingIntent getPendingIntent(android.content.Context,android.content.Intent[],int,int,android.os.Bundle) -> getPendingIntent
android.support.v4.app.TaskStackBuilderHoneycomb -> android.support.v4.app.TaskStackBuilderHoneycomb:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int) -> getActivitiesPendingIntent
android.support.v4.app.TaskStackBuilderJellybean -> android.support.v4.app.TaskStackBuilderJellybean:
    android.app.PendingIntent getActivitiesPendingIntent(android.content.Context,int,android.content.Intent[],int,android.os.Bundle) -> getActivitiesPendingIntent
android.support.v4.app.Watson -> android.support.v4.app.Watson:
    java.lang.String TAG -> TAG
    java.util.ArrayList mCreatedMenus -> mCreatedMenus
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
android.support.v4.app.Watson$OnCreateOptionsMenuListener -> android.support.v4.app.Watson$OnCreateOptionsMenuListener:
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
android.support.v4.app.Watson$OnOptionsItemSelectedListener -> android.support.v4.app.Watson$OnOptionsItemSelectedListener:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
android.support.v4.app.Watson$OnPrepareOptionsMenuListener -> android.support.v4.app.Watson$OnPrepareOptionsMenuListener:
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
android.support.v4.content.ContextCompat -> android.support.v4.content.a:
    boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
android.support.v4.content.ContextCompatHoneycomb -> android.support.v4.content.b:
    void startActivities(android.content.Context,android.content.Intent[]) -> a
android.support.v4.content.ContextCompatJellybean -> android.support.v4.content.c:
    void startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> a
android.support.v4.content.FileProvider -> android.support.v4.content.FileProvider:
    java.lang.String[] COLUMNS -> a
    java.io.File DEVICE_ROOT -> b
    java.util.HashMap sCache -> c
    android.support.v4.content.FileProvider$PathStrategy mStrategy -> d
    boolean onCreate() -> onCreate
    void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.support.v4.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> a
    android.support.v4.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> b
    int modeToMode(java.lang.String) -> a
    java.io.File buildPath(java.io.File,java.lang.String[]) -> a
    java.lang.String[] copyOf(java.lang.String[],int) -> a
    java.lang.Object[] copyOf(java.lang.Object[],int) -> a
android.support.v4.content.FileProvider$PathStrategy -> android.support.v4.content.FileProvider$a:
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.FileProvider$SimplePathStrategy -> android.support.v4.content.FileProvider$b:
    java.lang.String mAuthority -> a
    java.util.HashMap mRoots -> b
    void addRoot(java.lang.String,java.io.File) -> a
    java.io.File getFileForUri(android.net.Uri) -> a
android.support.v4.content.IntentCompat -> android.support.v4.content.d:
    android.support.v4.content.IntentCompat$IntentCompatImpl IMPL -> a
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImpl -> android.support.v4.content.d$a:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplBase -> android.support.v4.content.d$b:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplHC -> android.support.v4.content.d$c:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.IntentCompat$IntentCompatImplIcsMr1 -> android.support.v4.content.d$d:
android.support.v4.content.IntentCompatHoneycomb -> android.support.v4.content.e:
    android.content.Intent makeMainActivity(android.content.ComponentName) -> a
android.support.v4.content.Loader -> android.support.v4.content.f:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    boolean mProcessingChange -> g
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void abandon() -> e
    void onAbandon() -> f
    void reset() -> g
    void onReset() -> h
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.content.f$a:
android.support.v4.content.WakefulBroadcastReceiver -> android.support.v4.content.WakefulBroadcastReceiver:
    android.util.SparseArray mActiveWakeLocks -> a
    int mNextId -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.a.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.a.a$a:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.a.b:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.a.c:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.a.d:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.b.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.b.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.b.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    java.lang.Object get(int) -> a
    java.lang.Object get(int,java.lang.Object) -> a
    void delete(int) -> b
    void remove(int) -> c
    void removeAt(int) -> d
    void gc() -> c
    void put(int,java.lang.Object) -> b
    int size() -> a
    int keyAt(int) -> e
    java.lang.Object valueAt(int) -> f
    int indexOfKey(int) -> g
    void clear() -> b
    int binarySearch(int[],int,int,int) -> a
    int idealByteArraySize(int) -> h
    int idealIntArraySize(int) -> i
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    java.lang.Object getBridge() -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.a$a:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.a$a$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.a$b:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.a$c:
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.a$c$1:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.a$d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.b:
    java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.b$1:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.b$a:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.c:
    java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.c$1:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.c$a:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.GravityCompat -> android.support.v4.view.d:
    android.support.v4.view.GravityCompat$GravityCompatImpl IMPL -> a
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImpl -> android.support.v4.view.d$a:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplBase -> android.support.v4.view.d$b:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompat$GravityCompatImplJellybeanMr1 -> android.support.v4.view.d$c:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.GravityCompatJellybeanMr1 -> android.support.v4.view.e:
    int getAbsoluteGravity(int,int) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.f:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
    void startTracking(android.view.KeyEvent) -> b
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.f$a:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$EclairKeyEventVersionImpl -> android.support.v4.view.f$b:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.f$c:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.f$d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatEclair -> android.support.v4.view.g:
    void startTracking(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.h:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.i:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionMasked(android.view.MotionEvent) -> a
    int getActionIndex(android.view.MotionEvent) -> b
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.i$a:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.i$b:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i$c:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> mObservable
    int POSITION_UNCHANGED -> POSITION_UNCHANGED
    int POSITION_NONE -> POSITION_NONE
    int getCount() -> getCount
    void startUpdate(android.view.ViewGroup) -> startUpdate
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.ViewGroup) -> finishUpdate
    void startUpdate(android.view.View) -> startUpdate
    java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    void finishUpdate(android.view.View) -> finishUpdate
    boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    android.os.Parcelable saveState() -> saveState
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    int getItemPosition(java.lang.Object) -> getItemPosition
    void notifyDataSetChanged() -> notifyDataSetChanged
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    java.lang.CharSequence getPageTitle(int) -> getPageTitle
    float getPageWidth(int) -> getPageWidth
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    void setTabIndicatorColor(int) -> setTabIndicatorColor
    void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    int getTabIndicatorColor() -> getTabIndicatorColor
    void setPadding(int,int,int,int) -> setPadding
    void setTextSpacing(int) -> setTextSpacing
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setBackgroundColor(int) -> setBackgroundColor
    void setBackgroundResource(int) -> setBackgroundResource
    void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    boolean getDrawFullUnderline() -> getDrawFullUnderline
    int getMinHeight() -> getMinHeight
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onDraw(android.graphics.Canvas) -> onDraw
    void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.PagerTabStrip$1:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.PagerTabStrip$2:
    android.support.v4.view.PagerTabStrip this$0 -> a
    void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    void setTextSpacing(int) -> setTextSpacing
    int getTextSpacing() -> getTextSpacing
    void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    void setTextColor(int) -> setTextColor
    void setTextSize(int,float) -> a
    void setGravity(int) -> setGravity
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void updateText(int,android.support.v4.view.PagerAdapter) -> a
    void requestLayout() -> requestLayout
    void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void updateTextPositions(int,float,boolean) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getMinHeight() -> getMinHeight
    float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.PagerTitleStrip$1:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.PagerTitleStrip$a:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.PagerTitleStrip$b:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.PagerTitleStrip$c:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.PagerTitleStrip$d:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.l:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.l$a:
    java.util.Locale mLocale -> a
    java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.m:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m$a:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.m$b:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.m$c:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.o:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.o$a:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> android.support.v4.view.o$b:
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.o$c:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.o$d:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.o$e:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.o$f:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.o$g:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.o$h:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> c
    void setImportantForAccessibility(android.view.View,int) -> b
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> d
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> e
    android.view.ViewParent getParentForAccessibility(android.view.View) -> f
    boolean isOpaque(android.view.View) -> g
android.support.v4.view.ViewCompatEclairMr1 -> android.support.v4.view.p:
    boolean isOpaque(android.view.View) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.q:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.r:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.s:
    boolean canScrollHorizontally(android.view.View,int) -> a
    void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.t:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    int getImportantForAccessibility(android.view.View) -> b
    void setImportantForAccessibility(android.view.View,int) -> a
    android.view.ViewParent getParentForAccessibility(android.view.View) -> c
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.u:
    void setLayerPaint(android.view.View,android.graphics.Paint) -> a
    int getLayoutDirection(android.view.View) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.v:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.v$a:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.v$b:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.v$c:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.w:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewGroupCompat -> android.support.v4.view.x:
    android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl IMPL -> a
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatHCImpl -> android.support.v4.view.x$a:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatIcsImpl -> android.support.v4.view.x$b:
android.support.v4.view.ViewGroupCompat$ViewGroupCompatImpl -> android.support.v4.view.x$c:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompat$ViewGroupCompatStubImpl -> android.support.v4.view.x$d:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewGroupCompatHC -> android.support.v4.view.y:
    void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    int mExpectedAdapterCount -> b
    java.util.Comparator COMPARATOR -> c
    android.view.animation.Interpolator sInterpolator -> d
    java.util.ArrayList mItems -> e
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> f
    android.graphics.Rect mTempRect -> g
    android.support.v4.view.PagerAdapter mAdapter -> h
    int mCurItem -> i
    int mRestoredCurItem -> j
    android.os.Parcelable mRestoredAdapterState -> k
    java.lang.ClassLoader mRestoredClassLoader -> l
    android.widget.Scroller mScroller -> m
    android.support.v4.view.ViewPager$PagerObserver mObserver -> n
    int mPageMargin -> o
    android.graphics.drawable.Drawable mMarginDrawable -> p
    int mTopPageBounds -> q
    int mBottomPageBounds -> r
    float mFirstOffset -> s
    float mLastOffset -> t
    int mChildWidthMeasureSpec -> u
    int mChildHeightMeasureSpec -> v
    boolean mInLayout -> w
    boolean mScrollingCacheEnabled -> x
    boolean mPopulatePending -> y
    int mOffscreenPageLimit -> z
    boolean mIsBeingDragged -> A
    boolean mIsUnableToDrag -> B
    int mDefaultGutterSize -> C
    int mGutterSize -> D
    int mTouchSlop -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    float mInitialMotionX -> H
    float mInitialMotionY -> I
    int mActivePointerId -> J
    android.view.VelocityTracker mVelocityTracker -> K
    int mMinimumVelocity -> L
    int mMaximumVelocity -> M
    int mFlingDistance -> N
    int mCloseEnough -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void initViewPager() -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> g
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    int getClientWidth() -> getClientWidth
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> b
    void populate() -> c
    void populate(int) -> a
    void sortChildDrawingOrder() -> h
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> i
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> j
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScrollHorizontally(int) -> canScrollHorizontally
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> d
    boolean pageRight() -> e
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void access$000(android.support.v4.view.ViewPager,int) -> a
    android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    int access$300(android.support.v4.view.ViewPager) -> b
    int[] access$400() -> f
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ViewPager$1:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ViewPager$2:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.ViewPager$3:
    android.support.v4.view.ViewPager this$0 -> a
    void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ViewPager$a:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.ViewPager$b:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.ViewPager$c:
    android.support.v4.view.ViewPager this$0 -> b
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    boolean canScroll() -> b
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ViewPager$d:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ViewPager$e:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.ViewPager$f:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ViewPager$g:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.ViewPager$SavedState$1:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.ViewPager$h:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    java.lang.Object getInfo() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setSource(android.view.View) -> a
    void addChild(android.view.View) -> b
    int getActions() -> b
    void addAction(int) -> a
    void setMovementGranularities(int) -> b
    int getMovementGranularities() -> c
    void setParent(android.view.View) -> c
    void getBoundsInParent(android.graphics.Rect) -> a
    void setBoundsInParent(android.graphics.Rect) -> b
    void getBoundsInScreen(android.graphics.Rect) -> c
    void setBoundsInScreen(android.graphics.Rect) -> d
    boolean isCheckable() -> d
    boolean isChecked() -> e
    boolean isFocusable() -> f
    void setFocusable(boolean) -> a
    boolean isFocused() -> g
    void setFocused(boolean) -> b
    boolean isVisibleToUser() -> h
    void setVisibleToUser(boolean) -> c
    boolean isAccessibilityFocused() -> i
    void setAccessibilityFocused(boolean) -> d
    boolean isSelected() -> j
    void setSelected(boolean) -> e
    boolean isClickable() -> k
    void setClickable(boolean) -> f
    boolean isLongClickable() -> l
    void setLongClickable(boolean) -> g
    boolean isEnabled() -> m
    void setEnabled(boolean) -> h
    boolean isPassword() -> n
    boolean isScrollable() -> o
    void setScrollable(boolean) -> i
    java.lang.CharSequence getPackageName() -> p
    void setPackageName(java.lang.CharSequence) -> a
    java.lang.CharSequence getClassName() -> q
    void setClassName(java.lang.CharSequence) -> b
    java.lang.CharSequence getText() -> r
    java.lang.CharSequence getContentDescription() -> s
    void setContentDescription(java.lang.CharSequence) -> c
    void recycle() -> t
    java.lang.String getViewIdResourceName() -> u
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.String getActionSymbolicName(int) -> c
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.a$a:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.a$b:
    java.lang.Object obtain(java.lang.Object) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isFocusable(java.lang.Object) -> k
    void setFocusable(java.lang.Object,boolean) -> c
    boolean isFocused(java.lang.Object) -> l
    void setFocused(java.lang.Object,boolean) -> d
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    boolean isSelected(java.lang.Object) -> p
    void setSelected(java.lang.Object,boolean) -> g
    boolean isClickable(java.lang.Object) -> i
    void setClickable(java.lang.Object,boolean) -> a
    boolean isLongClickable(java.lang.Object) -> m
    void setLongClickable(java.lang.Object,boolean) -> e
    boolean isEnabled(java.lang.Object) -> j
    void setEnabled(java.lang.Object,boolean) -> b
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    void setScrollable(java.lang.Object,boolean) -> f
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> f
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.a$c:
    boolean isVisibleToUser(java.lang.Object) -> s
    void setVisibleToUser(java.lang.Object,boolean) -> h
    boolean isAccessibilityFocused(java.lang.Object) -> t
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> android.support.v4.view.a.a$d:
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.a$e:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isVisibleToUser(java.lang.Object) -> s
    boolean isAccessibilityFocused(java.lang.Object) -> t
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setMovementGranularities(java.lang.Object,int) -> b
    int getMovementGranularities(java.lang.Object) -> r
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setVisibleToUser(java.lang.Object,boolean) -> h
    void setAccessibilityFocused(java.lang.Object,boolean) -> i
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
    java.lang.String getViewIdResourceName(java.lang.Object) -> u
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.b:
    java.lang.Object obtain(java.lang.Object) -> a
    void addAction(java.lang.Object,int) -> a
    void addChild(java.lang.Object,android.view.View) -> a
    int getActions(java.lang.Object) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    java.lang.CharSequence getClassName(java.lang.Object) -> c
    java.lang.CharSequence getContentDescription(java.lang.Object) -> d
    java.lang.CharSequence getPackageName(java.lang.Object) -> e
    java.lang.CharSequence getText(java.lang.Object) -> f
    boolean isCheckable(java.lang.Object) -> g
    boolean isChecked(java.lang.Object) -> h
    boolean isClickable(java.lang.Object) -> i
    boolean isEnabled(java.lang.Object) -> j
    boolean isFocusable(java.lang.Object) -> k
    boolean isFocused(java.lang.Object) -> l
    boolean isLongClickable(java.lang.Object) -> m
    boolean isPassword(java.lang.Object) -> n
    boolean isScrollable(java.lang.Object) -> o
    boolean isSelected(java.lang.Object) -> p
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    void setClickable(java.lang.Object,boolean) -> a
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void setEnabled(java.lang.Object,boolean) -> b
    void setFocusable(java.lang.Object,boolean) -> c
    void setFocused(java.lang.Object,boolean) -> d
    void setLongClickable(java.lang.Object,boolean) -> e
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void setScrollable(java.lang.Object,boolean) -> f
    void setSelected(java.lang.Object,boolean) -> g
    void setSource(java.lang.Object,android.view.View) -> c
    void recycle(java.lang.Object) -> q
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.c:
    boolean isVisibleToUser(java.lang.Object) -> a
    void setVisibleToUser(java.lang.Object,boolean) -> a
    void setMovementGranularities(java.lang.Object,int) -> a
    int getMovementGranularities(java.lang.Object) -> b
    boolean isAccessibilityFocused(java.lang.Object) -> c
    void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> android.support.v4.view.a.d:
    java.lang.String getViewIdResourceName(java.lang.Object) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.e:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    java.lang.Object getProvider() -> a
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.e$a:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.e$b:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.e$b$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.e$c:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.f:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.f$1:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.f$a:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityRecordCompat -> android.support.v4.view.a.g:
    android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl IMPL -> a
    java.lang.Object mRecord -> b
    android.support.v4.view.accessibility.AccessibilityRecordCompat obtain() -> a
    void setScrollable(boolean) -> a
    void setItemCount(int) -> a
    void setFromIndex(int) -> b
    void setToIndex(int) -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsImpl -> android.support.v4.view.a.g$a:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordIcsMr1Impl -> android.support.v4.view.a.g$b:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordImpl -> android.support.v4.view.a.g$c:
    java.lang.Object obtain() -> a
    void setScrollable(java.lang.Object,boolean) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setFromIndex(java.lang.Object,int) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordJellyBeanImpl -> android.support.v4.view.a.g$d:
android.support.v4.view.accessibility.AccessibilityRecordCompat$AccessibilityRecordStubImpl -> android.support.v4.view.a.g$e:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.view.accessibility.AccessibilityRecordCompatIcs -> android.support.v4.view.a.h:
    java.lang.Object obtain() -> a
    void setFromIndex(java.lang.Object,int) -> a
    void setItemCount(java.lang.Object,int) -> b
    void setScrollable(java.lang.Object,boolean) -> a
    void setToIndex(java.lang.Object,int) -> c
android.support.v4.widget.CursorAdapter -> android.support.v4.widget.a:
    boolean mDataValid -> mDataValid
    boolean mAutoRequery -> mAutoRequery
    android.database.Cursor mCursor -> mCursor
    android.content.Context mContext -> mContext
    int mRowIDColumn -> mRowIDColumn
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> mChangeObserver
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.support.v4.widget.CursorFilter mCursorFilter -> mCursorFilter
    android.widget.FilterQueryProvider mFilterQueryProvider -> mFilterQueryProvider
    int FLAG_AUTO_REQUERY -> FLAG_AUTO_REQUERY
    int FLAG_REGISTER_CONTENT_OBSERVER -> FLAG_REGISTER_CONTENT_OBSERVER
    void init(android.content.Context,android.database.Cursor,boolean) -> init
    void init(android.content.Context,android.database.Cursor,int) -> init
    android.database.Cursor getCursor() -> getCursor
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void changeCursor(android.database.Cursor) -> changeCursor
    android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.widget.Filter getFilter() -> getFilter
    android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    void onContentChanged() -> onContentChanged
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.widget.a$1:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.widget.a$a:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.widget.a$b:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.widget.b:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.widget.b$a:
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getCursor() -> getCursor
    void changeCursor(android.database.Cursor) -> changeCursor
android.support.v4.widget.DrawerLayout -> android.support.v4.widget.DrawerLayout:
    int[] LAYOUT_ATTRS -> a
    int mMinDrawerMargin -> b
    int mScrimColor -> c
    float mScrimOpacity -> d
    android.graphics.Paint mScrimPaint -> e
    android.support.v4.widget.ViewDragHelper mLeftDragger -> f
    android.support.v4.widget.ViewDragHelper mRightDragger -> g
    android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback -> h
    android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback -> i
    int mDrawerState -> j
    boolean mInLayout -> k
    boolean mFirstLayout -> l
    int mLockModeLeft -> m
    int mLockModeRight -> n
    boolean mDisallowInterceptRequested -> o
    boolean mChildrenCanceledTouch -> p
    android.support.v4.widget.DrawerLayout$DrawerListener mListener -> q
    float mInitialMotionX -> r
    float mInitialMotionY -> s
    android.graphics.drawable.Drawable mShadowLeft -> t
    android.graphics.drawable.Drawable mShadowRight -> u
    void setScrimColor(int) -> setScrimColor
    void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    void setDrawerLockMode(int) -> setDrawerLockMode
    void setDrawerLockMode(int,int) -> a
    int getDrawerLockMode(android.view.View) -> a
    void updateDrawerState(int,int,android.view.View) -> a
    void dispatchOnDrawerClosed(android.view.View) -> b
    void dispatchOnDrawerOpened(android.view.View) -> c
    void dispatchOnDrawerSlide(android.view.View,float) -> a
    void setDrawerViewOffset(android.view.View,float) -> b
    float getDrawerViewOffset(android.view.View) -> d
    int getDrawerViewGravity(android.view.View) -> e
    boolean checkDrawerViewGravity(android.view.View,int) -> a
    android.view.View findOpenDrawer() -> a
    android.view.View findDrawerWithGravity(int) -> a
    java.lang.String gravityToString(int) -> b
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void requestLayout() -> requestLayout
    void computeScroll() -> computeScroll
    boolean hasOpaqueBackground(android.view.View) -> l
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    boolean isContentView(android.view.View) -> f
    boolean isDrawerView(android.view.View) -> g
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    void closeDrawers() -> b
    void closeDrawers(boolean) -> a
    void openDrawer(android.view.View) -> h
    void openDrawer(int) -> c
    void closeDrawer(android.view.View) -> i
    void closeDrawer(int) -> d
    boolean isDrawerOpen(android.view.View) -> j
    boolean isDrawerOpen(int) -> e
    boolean isDrawerVisible(android.view.View) -> k
    boolean isDrawerVisible(int) -> f
    boolean hasPeekingDrawer() -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    boolean hasVisibleDrawer() -> f
    android.view.View findVisibleDrawer() -> g
    void cancelChildViewTouch() -> c
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    int[] access$100() -> d
android.support.v4.widget.DrawerLayout$AccessibilityDelegate -> android.support.v4.widget.DrawerLayout$a:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.DrawerLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.DrawerLayout$DrawerListener -> android.support.v4.widget.DrawerLayout$b:
    void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    void onDrawerOpened(android.view.View) -> onDrawerOpened
    void onDrawerClosed(android.view.View) -> onDrawerClosed
    void onDrawerStateChanged(int) -> onDrawerStateChanged
android.support.v4.widget.DrawerLayout$LayoutParams -> android.support.v4.widget.DrawerLayout$LayoutParams:
    int gravity -> a
    float onScreen -> b
    boolean isPeeking -> c
    boolean knownOpen -> d
android.support.v4.widget.DrawerLayout$SavedState -> android.support.v4.widget.DrawerLayout$SavedState:
    int openDrawerGravity -> a
    int lockModeLeft -> b
    int lockModeRight -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.DrawerLayout$SavedState$1 -> android.support.v4.widget.DrawerLayout$SavedState$1:
    android.support.v4.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.DrawerLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.DrawerLayout$ViewDragCallback -> android.support.v4.widget.DrawerLayout$c:
    int mGravity -> b
    android.support.v4.widget.ViewDragHelper mDragger -> c
    java.lang.Runnable mPeekRunnable -> d
    android.support.v4.widget.DrawerLayout this$0 -> a
    void setDragger(android.support.v4.widget.ViewDragHelper) -> a
    void removeCallbacks() -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void closeOtherDrawer() -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    void peekDrawer() -> c
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
    void access$000(android.support.v4.widget.DrawerLayout$ViewDragCallback) -> a
android.support.v4.widget.DrawerLayout$ViewDragCallback$1 -> android.support.v4.widget.DrawerLayout$c$1:
    android.support.v4.widget.DrawerLayout$ViewDragCallback this$1 -> a
    void run() -> run
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.widget.c:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.widget.c$a:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.widget.c$b:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.widget.c$c:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.widget.d:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.ResourceCursorAdapter -> android.support.v4.widget.e:
    int mLayout -> mLayout
    int mDropDownLayout -> mDropDownLayout
    android.view.LayoutInflater mInflater -> mInflater
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    void setViewResource(int) -> setViewResource
    void setDropDownViewResource(int) -> setDropDownViewResource
android.support.v4.widget.ScrollerCompat -> android.support.v4.widget.f:
    java.lang.Object mScroller -> a
    android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl IMPL -> b
    android.support.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished() -> a
    int getCurrX() -> b
    int getCurrY() -> c
    int getFinalX() -> d
    int getFinalY() -> e
    boolean computeScrollOffset() -> f
    void startScroll(int,int,int,int,int) -> a
    void abortAnimation() -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImpl -> android.support.v4.widget.f$a:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> android.support.v4.widget.f$b:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> android.support.v4.widget.f$c:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> android.support.v4.widget.f$d:
android.support.v4.widget.ScrollerCompatGingerbread -> android.support.v4.widget.g:
    java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> a
    boolean isFinished(java.lang.Object) -> a
    int getCurrX(java.lang.Object) -> b
    int getCurrY(java.lang.Object) -> c
    boolean computeScrollOffset(java.lang.Object) -> d
    void startScroll(java.lang.Object,int,int,int,int,int) -> a
    void abortAnimation(java.lang.Object) -> e
    int getFinalX(java.lang.Object) -> f
    int getFinalY(java.lang.Object) -> g
android.support.v4.widget.SlidingPaneLayout -> android.support.v4.widget.SlidingPaneLayout:
    int mSliderFadeColor -> b
    int mCoveredFadeColor -> c
    android.graphics.drawable.Drawable mShadowDrawable -> d
    int mOverhangSize -> e
    boolean mCanSlide -> f
    android.view.View mSlideableView -> g
    float mSlideOffset -> h
    float mParallaxOffset -> i
    int mSlideRange -> j
    boolean mIsUnableToDrag -> k
    int mParallaxBy -> l
    float mInitialMotionX -> m
    float mInitialMotionY -> n
    android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener -> o
    android.support.v4.widget.ViewDragHelper mDragHelper -> p
    boolean mPreservedOpenState -> q
    boolean mFirstLayout -> r
    android.graphics.Rect mTmpRect -> s
    java.util.ArrayList mPostedRunnables -> t
    android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL -> a
    void setParallaxDistance(int) -> setParallaxDistance
    int getParallaxDistance() -> getParallaxDistance
    void setSliderFadeColor(int) -> setSliderFadeColor
    int getSliderFadeColor() -> getSliderFadeColor
    void setCoveredFadeColor(int) -> setCoveredFadeColor
    int getCoveredFadeColor() -> getCoveredFadeColor
    void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    void dispatchOnPanelSlide(android.view.View) -> a
    void dispatchOnPanelOpened(android.view.View) -> b
    void dispatchOnPanelClosed(android.view.View) -> c
    void updateObscuredViewsVisibility(android.view.View) -> d
    void setAllChildrenVisible() -> a
    boolean viewIsOpaque(android.view.View) -> f
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean closePane(android.view.View,int) -> a
    boolean openPane(android.view.View,int) -> b
    boolean openPane() -> b
    boolean closePane() -> c
    boolean isOpen() -> d
    boolean isSlideable() -> e
    void onPanelDragged(int) -> a
    void dimChildView(android.view.View,float,int) -> a
    boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    void invalidateChildRegion(android.view.View) -> g
    boolean smoothSlideTo(float,int) -> a
    void computeScroll() -> computeScroll
    void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    void setShadowResource(int) -> setShadowResource
    void draw(android.graphics.Canvas) -> draw
    void parallaxOtherViews(float) -> a
    boolean isDimmed(android.view.View) -> e
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$100(android.support.v4.widget.SlidingPaneLayout) -> a
    android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout) -> b
    float access$300(android.support.v4.widget.SlidingPaneLayout) -> c
    android.view.View access$400(android.support.v4.widget.SlidingPaneLayout) -> d
    boolean access$502(android.support.v4.widget.SlidingPaneLayout,boolean) -> a
    void access$600(android.support.v4.widget.SlidingPaneLayout,int) -> a
    int access$700(android.support.v4.widget.SlidingPaneLayout) -> e
    void access$900(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
    java.util.ArrayList access$1000(android.support.v4.widget.SlidingPaneLayout) -> f
android.support.v4.widget.SlidingPaneLayout$1 -> android.support.v4.widget.SlidingPaneLayout$1:
android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate -> android.support.v4.widget.SlidingPaneLayout$a:
    android.graphics.Rect mTmpRect -> c
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    boolean filter(android.view.View) -> b
    void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable -> android.support.v4.widget.SlidingPaneLayout$b:
    android.view.View mChildView -> a
    android.support.v4.widget.SlidingPaneLayout this$0 -> b
    void run() -> run
android.support.v4.widget.SlidingPaneLayout$DragHelperCallback -> android.support.v4.widget.SlidingPaneLayout$c:
    android.support.v4.widget.SlidingPaneLayout this$0 -> a
    boolean tryCaptureView(android.view.View,int) -> a
    void onViewDragStateChanged(int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewReleased(android.view.View,float,float) -> a
    int getViewHorizontalDragRange(android.view.View) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    void onEdgeDragStarted(int,int) -> b
android.support.v4.widget.SlidingPaneLayout$LayoutParams -> android.support.v4.widget.SlidingPaneLayout$LayoutParams:
    int[] ATTRS -> e
    float weight -> a
    boolean slideable -> b
    boolean dimWhenOffset -> c
    android.graphics.Paint dimPaint -> d
android.support.v4.widget.SlidingPaneLayout$PanelSlideListener -> android.support.v4.widget.SlidingPaneLayout$d:
    void onPanelSlide(android.view.View,float) -> a
    void onPanelOpened(android.view.View) -> a
    void onPanelClosed(android.view.View) -> b
android.support.v4.widget.SlidingPaneLayout$SavedState -> android.support.v4.widget.SlidingPaneLayout$SavedState:
    boolean isOpen -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.widget.SlidingPaneLayout$SavedState$1 -> android.support.v4.widget.SlidingPaneLayout$SavedState$1:
    android.support.v4.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.widget.SlidingPaneLayout$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl -> android.support.v4.widget.SlidingPaneLayout$e:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase -> android.support.v4.widget.SlidingPaneLayout$f:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB -> android.support.v4.widget.SlidingPaneLayout$g:
    java.lang.reflect.Method mGetDisplayList -> a
    java.lang.reflect.Field mRecreateDisplayList -> b
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 -> android.support.v4.widget.SlidingPaneLayout$h:
    void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View) -> a
android.support.v4.widget.ViewDragHelper -> android.support.v4.widget.h:
    int mDragState -> a
    int mTouchSlop -> b
    int mActivePointerId -> c
    float[] mInitialMotionX -> d
    float[] mInitialMotionY -> e
    float[] mLastMotionX -> f
    float[] mLastMotionY -> g
    int[] mInitialEdgesTouched -> h
    int[] mEdgeDragsInProgress -> i
    int[] mEdgeDragsLocked -> j
    int mPointersDown -> k
    android.view.VelocityTracker mVelocityTracker -> l
    float mMaxVelocity -> m
    float mMinVelocity -> n
    int mEdgeSize -> o
    int mTrackingEdges -> p
    android.support.v4.widget.ScrollerCompat mScroller -> q
    android.support.v4.widget.ViewDragHelper$Callback mCallback -> r
    android.view.View mCapturedView -> s
    boolean mReleaseInProgress -> t
    android.view.ViewGroup mParentView -> u
    android.view.animation.Interpolator sInterpolator -> v
    java.lang.Runnable mSetIdleRunnable -> w
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,android.support.v4.widget.ViewDragHelper$Callback) -> a
    android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback) -> a
    void setMinVelocity(float) -> a
    int getViewDragState() -> a
    void setEdgeTrackingEnabled(int) -> a
    int getEdgeSize() -> b
    void captureChildView(android.view.View,int) -> a
    android.view.View getCapturedView() -> c
    int getTouchSlop() -> d
    void cancel() -> e
    void abort() -> f
    boolean smoothSlideViewTo(android.view.View,int,int) -> a
    boolean settleCapturedViewAt(int,int) -> a
    boolean forceSettleCapturedViewAt(int,int,int,int) -> a
    int computeSettleDuration(android.view.View,int,int,int,int) -> a
    int computeAxisDuration(int,int,int) -> a
    int clampMag(int,int,int) -> b
    float clampMag(float,float,float) -> a
    float distanceInfluenceForSnapDuration(float) -> b
    boolean continueSettling(boolean) -> a
    void dispatchViewReleased(float,float) -> a
    void clearMotionHistory() -> g
    void clearMotionHistory(int) -> e
    void ensureMotionHistorySizeForId(int) -> f
    void saveInitialMotion(float,float,int) -> a
    void saveLastMotion(android.view.MotionEvent) -> c
    boolean isPointerDown(int) -> b
    void setDragState(int) -> c
    boolean tryCaptureViewForDrag(android.view.View,int) -> b
    boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> a
    void processTouchEvent(android.view.MotionEvent) -> b
    void reportNewEdgeDrags(float,float,int) -> b
    boolean checkNewEdgeDrag(float,float,int,int) -> a
    boolean checkTouchSlop(android.view.View,float,float) -> a
    boolean checkTouchSlop(int) -> d
    boolean checkTouchSlop(int,int) -> b
    void releaseViewForPointerUp() -> h
    void dragTo(int,int,int,int) -> b
    boolean isCapturedViewUnder(int,int) -> c
    boolean isViewUnder(android.view.View,int,int) -> b
    android.view.View findTopChildUnder(int,int) -> d
    int getEdgesTouched(int,int) -> e
android.support.v4.widget.ViewDragHelper$1 -> android.support.v4.widget.h$1:
    float getInterpolation(float) -> getInterpolation
android.support.v4.widget.ViewDragHelper$2 -> android.support.v4.widget.h$2:
    android.support.v4.widget.ViewDragHelper this$0 -> a
    void run() -> run
android.support.v4.widget.ViewDragHelper$Callback -> android.support.v4.widget.h$a:
    void onViewDragStateChanged(int) -> a
    void onViewPositionChanged(android.view.View,int,int,int,int) -> a
    void onViewCaptured(android.view.View,int) -> b
    void onViewReleased(android.view.View,float,float) -> a
    void onEdgeTouched(int,int) -> a
    boolean onEdgeLock(int) -> b
    void onEdgeDragStarted(int,int) -> b
    int getOrderedChildIndex(int) -> c
    int getViewHorizontalDragRange(android.view.View) -> a
    int getViewVerticalDragRange(android.view.View) -> b
    boolean tryCaptureView(android.view.View,int) -> a
    int clampViewPositionHorizontal(android.view.View,int,int) -> a
    int clampViewPositionVertical(android.view.View,int,int) -> b
com.actionbarsherlock.ActionBarSherlock -> com.actionbarsherlock.ActionBarSherlock:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    java.lang.Class[] CONSTRUCTOR_ARGS -> CONSTRUCTOR_ARGS
    java.util.HashMap IMPLEMENTATIONS -> IMPLEMENTATIONS
    int FLAG_DELEGATE -> FLAG_DELEGATE
    android.app.Activity mActivity -> mActivity
    boolean mIsDelegate -> mIsDelegate
    com.actionbarsherlock.view.MenuInflater mMenuInflater -> mMenuInflater
    void registerImplementation(java.lang.Class) -> registerImplementation
    boolean unregisterImplementation(java.lang.Class) -> unregisterImplementation
    com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity) -> wrap
    com.actionbarsherlock.ActionBarSherlock wrap(android.app.Activity,int) -> wrap
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchPostResume() -> dispatchPostResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchOpenOptionsMenu() -> dispatchOpenOptionsMenu
    boolean dispatchCloseOptionsMenu() -> dispatchCloseOptionsMenu
    void dispatchPostCreate(android.os.Bundle) -> dispatchPostCreate
    void dispatchTitleChanged(java.lang.CharSequence,int) -> dispatchTitleChanged
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchMenuOpened(int,android.view.Menu) -> dispatchMenuOpened
    void dispatchPanelClosed(int,android.view.Menu) -> dispatchPanelClosed
    void dispatchDestroy() -> dispatchDestroy
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    boolean callbackCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> callbackCreateOptionsMenu
    boolean callbackPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> callbackPrepareOptionsMenu
    boolean callbackOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> callbackOptionsItemSelected
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    android.content.Context getThemedContext() -> getThemedContext
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void ensureActionBar() -> ensureActionBar
com.actionbarsherlock.ActionBarSherlock$Implementation -> com.actionbarsherlock.ActionBarSherlock$Implementation:
    int DEFAULT_API -> DEFAULT_API
    int DEFAULT_DPI -> DEFAULT_DPI
    int api() -> api
    int dpi() -> dpi
com.actionbarsherlock.ActionBarSherlock$OnActionModeFinishedListener -> com.actionbarsherlock.ActionBarSherlock$OnActionModeFinishedListener:
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
com.actionbarsherlock.ActionBarSherlock$OnActionModeStartedListener -> com.actionbarsherlock.ActionBarSherlock$OnActionModeStartedListener:
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnCreateOptionsMenuListener:
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnCreatePanelMenuListener:
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener -> com.actionbarsherlock.ActionBarSherlock$OnMenuItemSelectedListener:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener -> com.actionbarsherlock.ActionBarSherlock$OnOptionsItemSelectedListener:
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener -> com.actionbarsherlock.ActionBarSherlock$OnPrepareOptionsMenuListener:
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener -> com.actionbarsherlock.ActionBarSherlock$OnPreparePanelListener:
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
com.actionbarsherlock.R -> com.actionbarsherlock.R:
com.actionbarsherlock.R$attr -> com.actionbarsherlock.R$attr:
    int actionBarDivider -> actionBarDivider
    int actionBarItemBackground -> actionBarItemBackground
    int actionBarSize -> actionBarSize
    int actionBarSplitStyle -> actionBarSplitStyle
    int actionBarStyle -> actionBarStyle
    int actionBarTabBarStyle -> actionBarTabBarStyle
    int actionBarTabStyle -> actionBarTabStyle
    int actionBarTabTextStyle -> actionBarTabTextStyle
    int actionBarWidgetTheme -> actionBarWidgetTheme
    int actionButtonStyle -> actionButtonStyle
    int actionDropDownStyle -> actionDropDownStyle
    int actionMenuTextAppearance -> actionMenuTextAppearance
    int actionMenuTextColor -> actionMenuTextColor
    int actionModeBackground -> actionModeBackground
    int actionModeCloseButtonStyle -> actionModeCloseButtonStyle
    int actionModeCloseDrawable -> actionModeCloseDrawable
    int actionModePopupWindowStyle -> actionModePopupWindowStyle
    int actionModeShareDrawable -> actionModeShareDrawable
    int actionModeSplitBackground -> actionModeSplitBackground
    int actionModeStyle -> actionModeStyle
    int actionOverflowButtonStyle -> actionOverflowButtonStyle
    int actionSpinnerItemStyle -> actionSpinnerItemStyle
    int activatedBackgroundIndicator -> activatedBackgroundIndicator
    int activityChooserViewStyle -> activityChooserViewStyle
    int background -> background
    int backgroundSplit -> backgroundSplit
    int backgroundStacked -> backgroundStacked
    int buttonStyleSmall -> buttonStyleSmall
    int customNavigationLayout -> customNavigationLayout
    int displayOptions -> displayOptions
    int divider -> divider
    int dividerVertical -> dividerVertical
    int dropDownHintAppearance -> dropDownHintAppearance
    int dropDownListViewStyle -> dropDownListViewStyle
    int dropdownListPreferredItemHeight -> dropdownListPreferredItemHeight
    int expandActivityOverflowButtonDrawable -> expandActivityOverflowButtonDrawable
    int headerBackground -> headerBackground
    int height -> height
    int homeAsUpIndicator -> homeAsUpIndicator
    int homeLayout -> homeLayout
    int horizontalDivider -> horizontalDivider
    int icon -> icon
    int iconifiedByDefault -> iconifiedByDefault
    int indeterminateProgressStyle -> indeterminateProgressStyle
    int initialActivityCount -> initialActivityCount
    int itemBackground -> itemBackground
    int itemIconDisabledAlpha -> itemIconDisabledAlpha
    int itemPadding -> itemPadding
    int itemTextAppearance -> itemTextAppearance
    int listPopupWindowStyle -> listPopupWindowStyle
    int listPreferredItemHeightSmall -> listPreferredItemHeightSmall
    int listPreferredItemPaddingLeft -> listPreferredItemPaddingLeft
    int listPreferredItemPaddingRight -> listPreferredItemPaddingRight
    int logo -> logo
    int navigationMode -> navigationMode
    int popupMenuStyle -> popupMenuStyle
    int preserveIconSpacing -> preserveIconSpacing
    int progressBarPadding -> progressBarPadding
    int progressBarStyle -> progressBarStyle
    int queryHint -> queryHint
    int searchAutoCompleteTextView -> searchAutoCompleteTextView
    int searchDropdownBackground -> searchDropdownBackground
    int searchResultListItemHeight -> searchResultListItemHeight
    int searchViewCloseIcon -> searchViewCloseIcon
    int searchViewEditQuery -> searchViewEditQuery
    int searchViewEditQueryBackground -> searchViewEditQueryBackground
    int searchViewGoIcon -> searchViewGoIcon
    int searchViewSearchIcon -> searchViewSearchIcon
    int searchViewTextField -> searchViewTextField
    int searchViewTextFieldRight -> searchViewTextFieldRight
    int searchViewVoiceIcon -> searchViewVoiceIcon
    int selectableItemBackground -> selectableItemBackground
    int spinnerDropDownItemStyle -> spinnerDropDownItemStyle
    int spinnerItemStyle -> spinnerItemStyle
    int subtitle -> subtitle
    int subtitleTextStyle -> subtitleTextStyle
    int textAppearanceLargePopupMenu -> textAppearanceLargePopupMenu
    int textAppearanceListItemSmall -> textAppearanceListItemSmall
    int textAppearanceSearchResultSubtitle -> textAppearanceSearchResultSubtitle
    int textAppearanceSearchResultTitle -> textAppearanceSearchResultTitle
    int textAppearanceSmall -> textAppearanceSmall
    int textAppearanceSmallPopupMenu -> textAppearanceSmallPopupMenu
    int textColorPrimary -> textColorPrimary
    int textColorPrimaryDisableOnly -> textColorPrimaryDisableOnly
    int textColorPrimaryInverse -> textColorPrimaryInverse
    int textColorSearchUrl -> textColorSearchUrl
    int title -> title
    int titleTextStyle -> titleTextStyle
    int verticalDivider -> verticalDivider
    int windowActionBar -> windowActionBar
    int windowActionBarOverlay -> windowActionBarOverlay
    int windowActionModeOverlay -> windowActionModeOverlay
    int windowAnimationStyle -> windowAnimationStyle
    int windowContentOverlay -> windowContentOverlay
    int windowMinWidthMajor -> windowMinWidthMajor
    int windowMinWidthMinor -> windowMinWidthMinor
    int windowNoTitle -> windowNoTitle
    int windowSplitActionBar -> windowSplitActionBar
com.actionbarsherlock.R$bool -> com.actionbarsherlock.R$bool:
    int abs__action_bar_embed_tabs -> abs__action_bar_embed_tabs
    int abs__action_bar_expanded_action_views_exclusive -> abs__action_bar_expanded_action_views_exclusive
    int abs__config_actionMenuItemAllCaps -> abs__config_actionMenuItemAllCaps
    int abs__config_allowActionMenuItemTextWithIcon -> abs__config_allowActionMenuItemTextWithIcon
    int abs__config_showMenuShortcutsWhenKeyboardPresent -> abs__config_showMenuShortcutsWhenKeyboardPresent
    int abs__split_action_bar_is_narrow -> abs__split_action_bar_is_narrow
com.actionbarsherlock.R$color -> com.actionbarsherlock.R$color:
    int abs__background_holo_dark -> abs__background_holo_dark
    int abs__background_holo_light -> abs__background_holo_light
    int abs__bright_foreground_disabled_holo_dark -> abs__bright_foreground_disabled_holo_dark
    int abs__bright_foreground_disabled_holo_light -> abs__bright_foreground_disabled_holo_light
    int abs__bright_foreground_holo_dark -> abs__bright_foreground_holo_dark
    int abs__bright_foreground_holo_light -> abs__bright_foreground_holo_light
    int abs__primary_text_disable_only_holo_dark -> abs__primary_text_disable_only_holo_dark
    int abs__primary_text_disable_only_holo_light -> abs__primary_text_disable_only_holo_light
    int abs__primary_text_holo_dark -> abs__primary_text_holo_dark
    int abs__primary_text_holo_light -> abs__primary_text_holo_light
com.actionbarsherlock.R$dimen -> com.actionbarsherlock.R$dimen:
    int abs__action_bar_default_height -> abs__action_bar_default_height
    int abs__action_bar_icon_vertical_padding -> abs__action_bar_icon_vertical_padding
    int abs__action_bar_subtitle_bottom_margin -> abs__action_bar_subtitle_bottom_margin
    int abs__action_bar_subtitle_text_size -> abs__action_bar_subtitle_text_size
    int abs__action_bar_subtitle_top_margin -> abs__action_bar_subtitle_top_margin
    int abs__action_bar_title_text_size -> abs__action_bar_title_text_size
    int abs__action_button_min_width -> abs__action_button_min_width
    int abs__config_prefDialogWidth -> abs__config_prefDialogWidth
    int abs__dialog_min_width_major -> abs__dialog_min_width_major
    int abs__dialog_min_width_minor -> abs__dialog_min_width_minor
    int abs__dropdownitem_icon_width -> abs__dropdownitem_icon_width
    int abs__dropdownitem_text_padding_left -> abs__dropdownitem_text_padding_left
    int abs__dropdownitem_text_padding_right -> abs__dropdownitem_text_padding_right
    int abs__search_view_preferred_width -> abs__search_view_preferred_width
    int abs__search_view_text_min_width -> abs__search_view_text_min_width
com.actionbarsherlock.R$drawable -> com.actionbarsherlock.R$drawable:
    int abs__ab_bottom_solid_dark_holo -> abs__ab_bottom_solid_dark_holo
    int abs__ab_bottom_solid_inverse_holo -> abs__ab_bottom_solid_inverse_holo
    int abs__ab_bottom_solid_light_holo -> abs__ab_bottom_solid_light_holo
    int abs__ab_bottom_transparent_dark_holo -> abs__ab_bottom_transparent_dark_holo
    int abs__ab_bottom_transparent_light_holo -> abs__ab_bottom_transparent_light_holo
    int abs__ab_share_pack_holo_dark -> abs__ab_share_pack_holo_dark
    int abs__ab_share_pack_holo_light -> abs__ab_share_pack_holo_light
    int abs__ab_solid_dark_holo -> abs__ab_solid_dark_holo
    int abs__ab_solid_light_holo -> abs__ab_solid_light_holo
    int abs__ab_solid_shadow_holo -> abs__ab_solid_shadow_holo
    int abs__ab_stacked_solid_dark_holo -> abs__ab_stacked_solid_dark_holo
    int abs__ab_stacked_solid_light_holo -> abs__ab_stacked_solid_light_holo
    int abs__ab_stacked_transparent_dark_holo -> abs__ab_stacked_transparent_dark_holo
    int abs__ab_stacked_transparent_light_holo -> abs__ab_stacked_transparent_light_holo
    int abs__ab_transparent_dark_holo -> abs__ab_transparent_dark_holo
    int abs__ab_transparent_light_holo -> abs__ab_transparent_light_holo
    int abs__activated_background_holo_dark -> abs__activated_background_holo_dark
    int abs__activated_background_holo_light -> abs__activated_background_holo_light
    int abs__btn_cab_done_default_holo_dark -> abs__btn_cab_done_default_holo_dark
    int abs__btn_cab_done_default_holo_light -> abs__btn_cab_done_default_holo_light
    int abs__btn_cab_done_focused_holo_dark -> abs__btn_cab_done_focused_holo_dark
    int abs__btn_cab_done_focused_holo_light -> abs__btn_cab_done_focused_holo_light
    int abs__btn_cab_done_holo_dark -> abs__btn_cab_done_holo_dark
    int abs__btn_cab_done_holo_light -> abs__btn_cab_done_holo_light
    int abs__btn_cab_done_pressed_holo_dark -> abs__btn_cab_done_pressed_holo_dark
    int abs__btn_cab_done_pressed_holo_light -> abs__btn_cab_done_pressed_holo_light
    int abs__cab_background_bottom_holo_dark -> abs__cab_background_bottom_holo_dark
    int abs__cab_background_bottom_holo_light -> abs__cab_background_bottom_holo_light
    int abs__cab_background_top_holo_dark -> abs__cab_background_top_holo_dark
    int abs__cab_background_top_holo_light -> abs__cab_background_top_holo_light
    int abs__ic_ab_back_holo_dark -> abs__ic_ab_back_holo_dark
    int abs__ic_ab_back_holo_light -> abs__ic_ab_back_holo_light
    int abs__ic_cab_done_holo_dark -> abs__ic_cab_done_holo_dark
    int abs__ic_cab_done_holo_light -> abs__ic_cab_done_holo_light
    int abs__ic_clear -> abs__ic_clear
    int abs__ic_clear_disabled -> abs__ic_clear_disabled
    int abs__ic_clear_holo_light -> abs__ic_clear_holo_light
    int abs__ic_clear_normal -> abs__ic_clear_normal
    int abs__ic_clear_search_api_disabled_holo_light -> abs__ic_clear_search_api_disabled_holo_light
    int abs__ic_clear_search_api_holo_light -> abs__ic_clear_search_api_holo_light
    int abs__ic_commit_search_api_holo_dark -> abs__ic_commit_search_api_holo_dark
    int abs__ic_commit_search_api_holo_light -> abs__ic_commit_search_api_holo_light
    int abs__ic_go -> abs__ic_go
    int abs__ic_go_search_api_holo_light -> abs__ic_go_search_api_holo_light
    int abs__ic_menu_moreoverflow_holo_dark -> abs__ic_menu_moreoverflow_holo_dark
    int abs__ic_menu_moreoverflow_holo_light -> abs__ic_menu_moreoverflow_holo_light
    int abs__ic_menu_moreoverflow_normal_holo_dark -> abs__ic_menu_moreoverflow_normal_holo_dark
    int abs__ic_menu_moreoverflow_normal_holo_light -> abs__ic_menu_moreoverflow_normal_holo_light
    int abs__ic_menu_share_holo_dark -> abs__ic_menu_share_holo_dark
    int abs__ic_menu_share_holo_light -> abs__ic_menu_share_holo_light
    int abs__ic_search -> abs__ic_search
    int abs__ic_search_api_holo_light -> abs__ic_search_api_holo_light
    int abs__ic_voice_search -> abs__ic_voice_search
    int abs__ic_voice_search_api_holo_light -> abs__ic_voice_search_api_holo_light
    int abs__item_background_holo_dark -> abs__item_background_holo_dark
    int abs__item_background_holo_light -> abs__item_background_holo_light
    int abs__list_activated_holo -> abs__list_activated_holo
    int abs__list_divider_holo_dark -> abs__list_divider_holo_dark
    int abs__list_divider_holo_light -> abs__list_divider_holo_light
    int abs__list_focused_holo -> abs__list_focused_holo
    int abs__list_longpressed_holo -> abs__list_longpressed_holo
    int abs__list_pressed_holo_dark -> abs__list_pressed_holo_dark
    int abs__list_pressed_holo_light -> abs__list_pressed_holo_light
    int abs__list_selector_background_transition_holo_dark -> abs__list_selector_background_transition_holo_dark
    int abs__list_selector_background_transition_holo_light -> abs__list_selector_background_transition_holo_light
    int abs__list_selector_disabled_holo_dark -> abs__list_selector_disabled_holo_dark
    int abs__list_selector_disabled_holo_light -> abs__list_selector_disabled_holo_light
    int abs__list_selector_holo_dark -> abs__list_selector_holo_dark
    int abs__list_selector_holo_light -> abs__list_selector_holo_light
    int abs__menu_dropdown_panel_holo_dark -> abs__menu_dropdown_panel_holo_dark
    int abs__menu_dropdown_panel_holo_light -> abs__menu_dropdown_panel_holo_light
    int abs__progress_bg_holo_dark -> abs__progress_bg_holo_dark
    int abs__progress_bg_holo_light -> abs__progress_bg_holo_light
    int abs__progress_horizontal_holo_dark -> abs__progress_horizontal_holo_dark
    int abs__progress_horizontal_holo_light -> abs__progress_horizontal_holo_light
    int abs__progress_medium_holo -> abs__progress_medium_holo
    int abs__progress_primary_holo_dark -> abs__progress_primary_holo_dark
    int abs__progress_primary_holo_light -> abs__progress_primary_holo_light
    int abs__progress_secondary_holo_dark -> abs__progress_secondary_holo_dark
    int abs__progress_secondary_holo_light -> abs__progress_secondary_holo_light
    int abs__search_dropdown_dark -> abs__search_dropdown_dark
    int abs__search_dropdown_light -> abs__search_dropdown_light
    int abs__spinner_48_inner_holo -> abs__spinner_48_inner_holo
    int abs__spinner_48_outer_holo -> abs__spinner_48_outer_holo
    int abs__spinner_ab_default_holo_dark -> abs__spinner_ab_default_holo_dark
    int abs__spinner_ab_default_holo_light -> abs__spinner_ab_default_holo_light
    int abs__spinner_ab_disabled_holo_dark -> abs__spinner_ab_disabled_holo_dark
    int abs__spinner_ab_disabled_holo_light -> abs__spinner_ab_disabled_holo_light
    int abs__spinner_ab_focused_holo_dark -> abs__spinner_ab_focused_holo_dark
    int abs__spinner_ab_focused_holo_light -> abs__spinner_ab_focused_holo_light
    int abs__spinner_ab_holo_dark -> abs__spinner_ab_holo_dark
    int abs__spinner_ab_holo_light -> abs__spinner_ab_holo_light
    int abs__spinner_ab_pressed_holo_dark -> abs__spinner_ab_pressed_holo_dark
    int abs__spinner_ab_pressed_holo_light -> abs__spinner_ab_pressed_holo_light
    int abs__tab_indicator_ab_holo -> abs__tab_indicator_ab_holo
    int abs__tab_selected_focused_holo -> abs__tab_selected_focused_holo
    int abs__tab_selected_holo -> abs__tab_selected_holo
    int abs__tab_selected_pressed_holo -> abs__tab_selected_pressed_holo
    int abs__tab_unselected_pressed_holo -> abs__tab_unselected_pressed_holo
    int abs__textfield_search_default_holo_dark -> abs__textfield_search_default_holo_dark
    int abs__textfield_search_default_holo_light -> abs__textfield_search_default_holo_light
    int abs__textfield_search_right_default_holo_dark -> abs__textfield_search_right_default_holo_dark
    int abs__textfield_search_right_default_holo_light -> abs__textfield_search_right_default_holo_light
    int abs__textfield_search_right_selected_holo_dark -> abs__textfield_search_right_selected_holo_dark
    int abs__textfield_search_right_selected_holo_light -> abs__textfield_search_right_selected_holo_light
    int abs__textfield_search_selected_holo_dark -> abs__textfield_search_selected_holo_dark
    int abs__textfield_search_selected_holo_light -> abs__textfield_search_selected_holo_light
    int abs__textfield_searchview_holo_dark -> abs__textfield_searchview_holo_dark
    int abs__textfield_searchview_holo_light -> abs__textfield_searchview_holo_light
    int abs__textfield_searchview_right_holo_dark -> abs__textfield_searchview_right_holo_dark
    int abs__textfield_searchview_right_holo_light -> abs__textfield_searchview_right_holo_light
    int abs__toast_frame -> abs__toast_frame
com.actionbarsherlock.R$id -> com.actionbarsherlock.R$id:
    int abs__action_bar -> abs__action_bar
    int abs__action_bar_container -> abs__action_bar_container
    int abs__action_bar_subtitle -> abs__action_bar_subtitle
    int abs__action_bar_title -> abs__action_bar_title
    int abs__action_context_bar -> abs__action_context_bar
    int abs__action_menu_divider -> abs__action_menu_divider
    int abs__action_menu_presenter -> abs__action_menu_presenter
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_bar_stub -> abs__action_mode_bar_stub
    int abs__action_mode_close_button -> abs__action_mode_close_button
    int abs__activity_chooser_view_content -> abs__activity_chooser_view_content
    int abs__checkbox -> abs__checkbox
    int abs__content -> abs__content
    int abs__default_activity_button -> abs__default_activity_button
    int abs__expand_activities_button -> abs__expand_activities_button
    int abs__home -> abs__home
    int abs__icon -> abs__icon
    int abs__image -> abs__image
    int abs__imageButton -> abs__imageButton
    int abs__list_item -> abs__list_item
    int abs__progress_circular -> abs__progress_circular
    int abs__progress_horizontal -> abs__progress_horizontal
    int abs__radio -> abs__radio
    int abs__search_badge -> abs__search_badge
    int abs__search_bar -> abs__search_bar
    int abs__search_button -> abs__search_button
    int abs__search_close_btn -> abs__search_close_btn
    int abs__search_edit_frame -> abs__search_edit_frame
    int abs__search_go_btn -> abs__search_go_btn
    int abs__search_mag_icon -> abs__search_mag_icon
    int abs__search_plate -> abs__search_plate
    int abs__search_src_text -> abs__search_src_text
    int abs__search_voice_btn -> abs__search_voice_btn
    int abs__shortcut -> abs__shortcut
    int abs__split_action_bar -> abs__split_action_bar
    int abs__submit_area -> abs__submit_area
    int abs__textButton -> abs__textButton
    int abs__title -> abs__title
    int abs__up -> abs__up
    int disableHome -> disableHome
    int edit_query -> edit_query
    int homeAsUp -> homeAsUp
    int listMode -> listMode
    int normal -> normal
    int showCustom -> showCustom
    int showHome -> showHome
    int showTitle -> showTitle
    int tabMode -> tabMode
    int useLogo -> useLogo
    int wrap_content -> wrap_content
com.actionbarsherlock.R$integer -> com.actionbarsherlock.R$integer:
    int abs__max_action_buttons -> abs__max_action_buttons
com.actionbarsherlock.R$layout -> com.actionbarsherlock.R$layout:
    int abs__action_bar_home -> abs__action_bar_home
    int abs__action_bar_tab -> abs__action_bar_tab
    int abs__action_bar_tab_bar_view -> abs__action_bar_tab_bar_view
    int abs__action_bar_title_item -> abs__action_bar_title_item
    int abs__action_menu_item_layout -> abs__action_menu_item_layout
    int abs__action_menu_layout -> abs__action_menu_layout
    int abs__action_mode_bar -> abs__action_mode_bar
    int abs__action_mode_close_item -> abs__action_mode_close_item
    int abs__activity_chooser_view -> abs__activity_chooser_view
    int abs__activity_chooser_view_list_item -> abs__activity_chooser_view_list_item
    int abs__list_menu_item_checkbox -> abs__list_menu_item_checkbox
    int abs__list_menu_item_icon -> abs__list_menu_item_icon
    int abs__list_menu_item_radio -> abs__list_menu_item_radio
    int abs__popup_menu_item_layout -> abs__popup_menu_item_layout
    int abs__screen_action_bar -> abs__screen_action_bar
    int abs__screen_action_bar_overlay -> abs__screen_action_bar_overlay
    int abs__screen_simple -> abs__screen_simple
    int abs__screen_simple_overlay_action_mode -> abs__screen_simple_overlay_action_mode
    int abs__search_dropdown_item_icons_2line -> abs__search_dropdown_item_icons_2line
    int abs__search_view -> abs__search_view
    int abs__simple_dropdown_hint -> abs__simple_dropdown_hint
    int sherlock_spinner_dropdown_item -> sherlock_spinner_dropdown_item
    int sherlock_spinner_item -> sherlock_spinner_item
com.actionbarsherlock.R$string -> com.actionbarsherlock.R$string:
    int abs__action_bar_home_description -> abs__action_bar_home_description
    int abs__action_bar_up_description -> abs__action_bar_up_description
    int abs__action_menu_overflow_description -> abs__action_menu_overflow_description
    int abs__action_mode_done -> abs__action_mode_done
    int abs__activity_chooser_view_see_all -> abs__activity_chooser_view_see_all
    int abs__activitychooserview_choose_application -> abs__activitychooserview_choose_application
    int abs__searchview_description_clear -> abs__searchview_description_clear
    int abs__searchview_description_query -> abs__searchview_description_query
    int abs__searchview_description_search -> abs__searchview_description_search
    int abs__searchview_description_submit -> abs__searchview_description_submit
    int abs__searchview_description_voice -> abs__searchview_description_voice
    int abs__shareactionprovider_share_with -> abs__shareactionprovider_share_with
    int abs__shareactionprovider_share_with_application -> abs__shareactionprovider_share_with_application
com.actionbarsherlock.R$style -> com.actionbarsherlock.R$style:
    int Sherlock___TextAppearance_Small -> Sherlock___TextAppearance_Small
    int Sherlock___Theme -> Sherlock___Theme
    int Sherlock___Theme_DarkActionBar -> Sherlock___Theme_DarkActionBar
    int Sherlock___Theme_Light -> Sherlock___Theme_Light
    int Sherlock___Widget_ActionBar -> Sherlock___Widget_ActionBar
    int Sherlock___Widget_ActionMode -> Sherlock___Widget_ActionMode
    int Sherlock___Widget_ActivityChooserView -> Sherlock___Widget_ActivityChooserView
    int Sherlock___Widget_Holo_DropDownItem -> Sherlock___Widget_Holo_DropDownItem
    int Sherlock___Widget_Holo_ListView -> Sherlock___Widget_Holo_ListView
    int Sherlock___Widget_Holo_Spinner -> Sherlock___Widget_Holo_Spinner
    int Sherlock___Widget_SearchAutoCompleteTextView -> Sherlock___Widget_SearchAutoCompleteTextView
    int TextAppearance_Sherlock -> TextAppearance_Sherlock
    int TextAppearance_Sherlock_Light_SearchResult -> TextAppearance_Sherlock_Light_SearchResult
    int TextAppearance_Sherlock_Light_SearchResult_Subtitle -> TextAppearance_Sherlock_Light_SearchResult_Subtitle
    int TextAppearance_Sherlock_Light_SearchResult_Title -> TextAppearance_Sherlock_Light_SearchResult_Title
    int TextAppearance_Sherlock_Light_Small -> TextAppearance_Sherlock_Light_Small
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Light_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Light_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_SearchResult -> TextAppearance_Sherlock_SearchResult
    int TextAppearance_Sherlock_SearchResult_Subtitle -> TextAppearance_Sherlock_SearchResult_Subtitle
    int TextAppearance_Sherlock_SearchResult_Title -> TextAppearance_Sherlock_SearchResult_Title
    int TextAppearance_Sherlock_Small -> TextAppearance_Sherlock_Small
    int TextAppearance_Sherlock_Widget_ActionBar_Menu -> TextAppearance_Sherlock_Widget_ActionBar_Menu
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle
    int TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionBar_Title -> TextAppearance_Sherlock_Widget_ActionBar_Title
    int TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionBar_Title_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle
    int TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Subtitle_Inverse
    int TextAppearance_Sherlock_Widget_ActionMode_Title -> TextAppearance_Sherlock_Widget_ActionMode_Title
    int TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse -> TextAppearance_Sherlock_Widget_ActionMode_Title_Inverse
    int TextAppearance_Sherlock_Widget_DropDownHint -> TextAppearance_Sherlock_Widget_DropDownHint
    int TextAppearance_Sherlock_Widget_DropDownItem -> TextAppearance_Sherlock_Widget_DropDownItem
    int TextAppearance_Sherlock_Widget_PopupMenu -> TextAppearance_Sherlock_Widget_PopupMenu
    int TextAppearance_Sherlock_Widget_PopupMenu_Large -> TextAppearance_Sherlock_Widget_PopupMenu_Large
    int TextAppearance_Sherlock_Widget_PopupMenu_Small -> TextAppearance_Sherlock_Widget_PopupMenu_Small
    int TextAppearance_Sherlock_Widget_TextView_SpinnerItem -> TextAppearance_Sherlock_Widget_TextView_SpinnerItem
    int Theme_Sherlock -> Theme_Sherlock
    int Theme_Sherlock_Light -> Theme_Sherlock_Light
    int Theme_Sherlock_Light_DarkActionBar -> Theme_Sherlock_Light_DarkActionBar
    int Theme_Sherlock_Light_NoActionBar -> Theme_Sherlock_Light_NoActionBar
    int Theme_Sherlock_NoActionBar -> Theme_Sherlock_NoActionBar
    int Widget -> Widget
    int Widget_Sherlock_ActionBar -> Widget_Sherlock_ActionBar
    int Widget_Sherlock_ActionBar_Solid -> Widget_Sherlock_ActionBar_Solid
    int Widget_Sherlock_ActionBar_TabBar -> Widget_Sherlock_ActionBar_TabBar
    int Widget_Sherlock_ActionBar_TabText -> Widget_Sherlock_ActionBar_TabText
    int Widget_Sherlock_ActionBar_TabView -> Widget_Sherlock_ActionBar_TabView
    int Widget_Sherlock_ActionButton -> Widget_Sherlock_ActionButton
    int Widget_Sherlock_ActionButton_CloseMode -> Widget_Sherlock_ActionButton_CloseMode
    int Widget_Sherlock_ActionButton_Overflow -> Widget_Sherlock_ActionButton_Overflow
    int Widget_Sherlock_ActionMode -> Widget_Sherlock_ActionMode
    int Widget_Sherlock_ActivityChooserView -> Widget_Sherlock_ActivityChooserView
    int Widget_Sherlock_Button_Small -> Widget_Sherlock_Button_Small
    int Widget_Sherlock_DropDownItem_Spinner -> Widget_Sherlock_DropDownItem_Spinner
    int Widget_Sherlock_Light_ActionBar -> Widget_Sherlock_Light_ActionBar
    int Widget_Sherlock_Light_ActionBar_Solid -> Widget_Sherlock_Light_ActionBar_Solid
    int Widget_Sherlock_Light_ActionBar_Solid_Inverse -> Widget_Sherlock_Light_ActionBar_Solid_Inverse
    int Widget_Sherlock_Light_ActionBar_TabBar -> Widget_Sherlock_Light_ActionBar_TabBar
    int Widget_Sherlock_Light_ActionBar_TabBar_Inverse -> Widget_Sherlock_Light_ActionBar_TabBar_Inverse
    int Widget_Sherlock_Light_ActionBar_TabText -> Widget_Sherlock_Light_ActionBar_TabText
    int Widget_Sherlock_Light_ActionBar_TabText_Inverse -> Widget_Sherlock_Light_ActionBar_TabText_Inverse
    int Widget_Sherlock_Light_ActionBar_TabView -> Widget_Sherlock_Light_ActionBar_TabView
    int Widget_Sherlock_Light_ActionBar_TabView_Inverse -> Widget_Sherlock_Light_ActionBar_TabView_Inverse
    int Widget_Sherlock_Light_ActionButton -> Widget_Sherlock_Light_ActionButton
    int Widget_Sherlock_Light_ActionButton_CloseMode -> Widget_Sherlock_Light_ActionButton_CloseMode
    int Widget_Sherlock_Light_ActionButton_Overflow -> Widget_Sherlock_Light_ActionButton_Overflow
    int Widget_Sherlock_Light_ActionMode -> Widget_Sherlock_Light_ActionMode
    int Widget_Sherlock_Light_ActionMode_Inverse -> Widget_Sherlock_Light_ActionMode_Inverse
    int Widget_Sherlock_Light_ActivityChooserView -> Widget_Sherlock_Light_ActivityChooserView
    int Widget_Sherlock_Light_Button_Small -> Widget_Sherlock_Light_Button_Small
    int Widget_Sherlock_Light_DropDownItem_Spinner -> Widget_Sherlock_Light_DropDownItem_Spinner
    int Widget_Sherlock_Light_ListPopupWindow -> Widget_Sherlock_Light_ListPopupWindow
    int Widget_Sherlock_Light_ListView_DropDown -> Widget_Sherlock_Light_ListView_DropDown
    int Widget_Sherlock_Light_PopupMenu -> Widget_Sherlock_Light_PopupMenu
    int Widget_Sherlock_Light_PopupWindow_ActionMode -> Widget_Sherlock_Light_PopupWindow_ActionMode
    int Widget_Sherlock_Light_ProgressBar -> Widget_Sherlock_Light_ProgressBar
    int Widget_Sherlock_Light_ProgressBar_Horizontal -> Widget_Sherlock_Light_ProgressBar_Horizontal
    int Widget_Sherlock_Light_SearchAutoCompleteTextView -> Widget_Sherlock_Light_SearchAutoCompleteTextView
    int Widget_Sherlock_Light_Spinner_DropDown_ActionBar -> Widget_Sherlock_Light_Spinner_DropDown_ActionBar
    int Widget_Sherlock_ListPopupWindow -> Widget_Sherlock_ListPopupWindow
    int Widget_Sherlock_ListView_DropDown -> Widget_Sherlock_ListView_DropDown
    int Widget_Sherlock_PopupMenu -> Widget_Sherlock_PopupMenu
    int Widget_Sherlock_PopupWindow_ActionMode -> Widget_Sherlock_PopupWindow_ActionMode
    int Widget_Sherlock_ProgressBar -> Widget_Sherlock_ProgressBar
    int Widget_Sherlock_ProgressBar_Horizontal -> Widget_Sherlock_ProgressBar_Horizontal
    int Widget_Sherlock_SearchAutoCompleteTextView -> Widget_Sherlock_SearchAutoCompleteTextView
    int Widget_Sherlock_Spinner_DropDown_ActionBar -> Widget_Sherlock_Spinner_DropDown_ActionBar
    int Widget_Sherlock_TextView_SpinnerItem -> Widget_Sherlock_TextView_SpinnerItem
com.actionbarsherlock.R$styleable -> com.actionbarsherlock.R$styleable:
    int[] SherlockActionBar -> SherlockActionBar
    int SherlockActionBar_background -> SherlockActionBar_background
    int SherlockActionBar_backgroundSplit -> SherlockActionBar_backgroundSplit
    int SherlockActionBar_backgroundStacked -> SherlockActionBar_backgroundStacked
    int SherlockActionBar_customNavigationLayout -> SherlockActionBar_customNavigationLayout
    int SherlockActionBar_displayOptions -> SherlockActionBar_displayOptions
    int SherlockActionBar_divider -> SherlockActionBar_divider
    int SherlockActionBar_height -> SherlockActionBar_height
    int SherlockActionBar_homeLayout -> SherlockActionBar_homeLayout
    int SherlockActionBar_icon -> SherlockActionBar_icon
    int SherlockActionBar_indeterminateProgressStyle -> SherlockActionBar_indeterminateProgressStyle
    int SherlockActionBar_itemPadding -> SherlockActionBar_itemPadding
    int SherlockActionBar_logo -> SherlockActionBar_logo
    int SherlockActionBar_navigationMode -> SherlockActionBar_navigationMode
    int SherlockActionBar_progressBarPadding -> SherlockActionBar_progressBarPadding
    int SherlockActionBar_progressBarStyle -> SherlockActionBar_progressBarStyle
    int SherlockActionBar_subtitle -> SherlockActionBar_subtitle
    int SherlockActionBar_subtitleTextStyle -> SherlockActionBar_subtitleTextStyle
    int SherlockActionBar_title -> SherlockActionBar_title
    int SherlockActionBar_titleTextStyle -> SherlockActionBar_titleTextStyle
    int[] SherlockActionMenuItemView -> SherlockActionMenuItemView
    int SherlockActionMenuItemView_android_minWidth -> SherlockActionMenuItemView_android_minWidth
    int[] SherlockActionMode -> SherlockActionMode
    int SherlockActionMode_background -> SherlockActionMode_background
    int SherlockActionMode_backgroundSplit -> SherlockActionMode_backgroundSplit
    int SherlockActionMode_height -> SherlockActionMode_height
    int SherlockActionMode_subtitleTextStyle -> SherlockActionMode_subtitleTextStyle
    int SherlockActionMode_titleTextStyle -> SherlockActionMode_titleTextStyle
    int[] SherlockActivityChooserView -> SherlockActivityChooserView
    int SherlockActivityChooserView_android_background -> SherlockActivityChooserView_android_background
    int SherlockActivityChooserView_expandActivityOverflowButtonDrawable -> SherlockActivityChooserView_expandActivityOverflowButtonDrawable
    int SherlockActivityChooserView_initialActivityCount -> SherlockActivityChooserView_initialActivityCount
    int[] SherlockMenuGroup -> SherlockMenuGroup
    int SherlockMenuGroup_android_checkableBehavior -> SherlockMenuGroup_android_checkableBehavior
    int SherlockMenuGroup_android_enabled -> SherlockMenuGroup_android_enabled
    int SherlockMenuGroup_android_id -> SherlockMenuGroup_android_id
    int SherlockMenuGroup_android_menuCategory -> SherlockMenuGroup_android_menuCategory
    int SherlockMenuGroup_android_orderInCategory -> SherlockMenuGroup_android_orderInCategory
    int SherlockMenuGroup_android_visible -> SherlockMenuGroup_android_visible
    int[] SherlockMenuItem -> SherlockMenuItem
    int SherlockMenuItem_android_actionLayout -> SherlockMenuItem_android_actionLayout
    int SherlockMenuItem_android_actionProviderClass -> SherlockMenuItem_android_actionProviderClass
    int SherlockMenuItem_android_actionViewClass -> SherlockMenuItem_android_actionViewClass
    int SherlockMenuItem_android_alphabeticShortcut -> SherlockMenuItem_android_alphabeticShortcut
    int SherlockMenuItem_android_checkable -> SherlockMenuItem_android_checkable
    int SherlockMenuItem_android_checked -> SherlockMenuItem_android_checked
    int SherlockMenuItem_android_enabled -> SherlockMenuItem_android_enabled
    int SherlockMenuItem_android_icon -> SherlockMenuItem_android_icon
    int SherlockMenuItem_android_id -> SherlockMenuItem_android_id
    int SherlockMenuItem_android_menuCategory -> SherlockMenuItem_android_menuCategory
    int SherlockMenuItem_android_numericShortcut -> SherlockMenuItem_android_numericShortcut
    int SherlockMenuItem_android_onClick -> SherlockMenuItem_android_onClick
    int SherlockMenuItem_android_orderInCategory -> SherlockMenuItem_android_orderInCategory
    int SherlockMenuItem_android_showAsAction -> SherlockMenuItem_android_showAsAction
    int SherlockMenuItem_android_title -> SherlockMenuItem_android_title
    int SherlockMenuItem_android_titleCondensed -> SherlockMenuItem_android_titleCondensed
    int SherlockMenuItem_android_visible -> SherlockMenuItem_android_visible
    int[] SherlockMenuView -> SherlockMenuView
    int SherlockMenuView_headerBackground -> SherlockMenuView_headerBackground
    int SherlockMenuView_horizontalDivider -> SherlockMenuView_horizontalDivider
    int SherlockMenuView_itemBackground -> SherlockMenuView_itemBackground
    int SherlockMenuView_itemIconDisabledAlpha -> SherlockMenuView_itemIconDisabledAlpha
    int SherlockMenuView_itemTextAppearance -> SherlockMenuView_itemTextAppearance
    int SherlockMenuView_preserveIconSpacing -> SherlockMenuView_preserveIconSpacing
    int SherlockMenuView_verticalDivider -> SherlockMenuView_verticalDivider
    int SherlockMenuView_windowAnimationStyle -> SherlockMenuView_windowAnimationStyle
    int[] SherlockSearchView -> SherlockSearchView
    int SherlockSearchView_android_imeOptions -> SherlockSearchView_android_imeOptions
    int SherlockSearchView_android_inputType -> SherlockSearchView_android_inputType
    int SherlockSearchView_android_maxWidth -> SherlockSearchView_android_maxWidth
    int SherlockSearchView_iconifiedByDefault -> SherlockSearchView_iconifiedByDefault
    int SherlockSearchView_queryHint -> SherlockSearchView_queryHint
    int[] SherlockSpinner -> SherlockSpinner
    int SherlockSpinner_android_dropDownHorizontalOffset -> SherlockSpinner_android_dropDownHorizontalOffset
    int SherlockSpinner_android_dropDownSelector -> SherlockSpinner_android_dropDownSelector
    int SherlockSpinner_android_dropDownVerticalOffset -> SherlockSpinner_android_dropDownVerticalOffset
    int SherlockSpinner_android_dropDownWidth -> SherlockSpinner_android_dropDownWidth
    int SherlockSpinner_android_gravity -> SherlockSpinner_android_gravity
    int SherlockSpinner_android_popupBackground -> SherlockSpinner_android_popupBackground
    int SherlockSpinner_android_popupPromptView -> SherlockSpinner_android_popupPromptView
    int SherlockSpinner_android_prompt -> SherlockSpinner_android_prompt
    int[] SherlockTheme -> SherlockTheme
    int SherlockTheme_actionBarDivider -> SherlockTheme_actionBarDivider
    int SherlockTheme_actionBarItemBackground -> SherlockTheme_actionBarItemBackground
    int SherlockTheme_actionBarSize -> SherlockTheme_actionBarSize
    int SherlockTheme_actionBarSplitStyle -> SherlockTheme_actionBarSplitStyle
    int SherlockTheme_actionBarStyle -> SherlockTheme_actionBarStyle
    int SherlockTheme_actionBarTabBarStyle -> SherlockTheme_actionBarTabBarStyle
    int SherlockTheme_actionBarTabStyle -> SherlockTheme_actionBarTabStyle
    int SherlockTheme_actionBarTabTextStyle -> SherlockTheme_actionBarTabTextStyle
    int SherlockTheme_actionBarWidgetTheme -> SherlockTheme_actionBarWidgetTheme
    int SherlockTheme_actionButtonStyle -> SherlockTheme_actionButtonStyle
    int SherlockTheme_actionDropDownStyle -> SherlockTheme_actionDropDownStyle
    int SherlockTheme_actionMenuTextAppearance -> SherlockTheme_actionMenuTextAppearance
    int SherlockTheme_actionMenuTextColor -> SherlockTheme_actionMenuTextColor
    int SherlockTheme_actionModeBackground -> SherlockTheme_actionModeBackground
    int SherlockTheme_actionModeCloseButtonStyle -> SherlockTheme_actionModeCloseButtonStyle
    int SherlockTheme_actionModeCloseDrawable -> SherlockTheme_actionModeCloseDrawable
    int SherlockTheme_actionModePopupWindowStyle -> SherlockTheme_actionModePopupWindowStyle
    int SherlockTheme_actionModeShareDrawable -> SherlockTheme_actionModeShareDrawable
    int SherlockTheme_actionModeSplitBackground -> SherlockTheme_actionModeSplitBackground
    int SherlockTheme_actionModeStyle -> SherlockTheme_actionModeStyle
    int SherlockTheme_actionOverflowButtonStyle -> SherlockTheme_actionOverflowButtonStyle
    int SherlockTheme_actionSpinnerItemStyle -> SherlockTheme_actionSpinnerItemStyle
    int SherlockTheme_activatedBackgroundIndicator -> SherlockTheme_activatedBackgroundIndicator
    int SherlockTheme_activityChooserViewStyle -> SherlockTheme_activityChooserViewStyle
    int SherlockTheme_buttonStyleSmall -> SherlockTheme_buttonStyleSmall
    int SherlockTheme_dividerVertical -> SherlockTheme_dividerVertical
    int SherlockTheme_dropDownHintAppearance -> SherlockTheme_dropDownHintAppearance
    int SherlockTheme_dropDownListViewStyle -> SherlockTheme_dropDownListViewStyle
    int SherlockTheme_dropdownListPreferredItemHeight -> SherlockTheme_dropdownListPreferredItemHeight
    int SherlockTheme_homeAsUpIndicator -> SherlockTheme_homeAsUpIndicator
    int SherlockTheme_listPopupWindowStyle -> SherlockTheme_listPopupWindowStyle
    int SherlockTheme_listPreferredItemHeightSmall -> SherlockTheme_listPreferredItemHeightSmall
    int SherlockTheme_listPreferredItemPaddingLeft -> SherlockTheme_listPreferredItemPaddingLeft
    int SherlockTheme_listPreferredItemPaddingRight -> SherlockTheme_listPreferredItemPaddingRight
    int SherlockTheme_popupMenuStyle -> SherlockTheme_popupMenuStyle
    int SherlockTheme_searchAutoCompleteTextView -> SherlockTheme_searchAutoCompleteTextView
    int SherlockTheme_searchDropdownBackground -> SherlockTheme_searchDropdownBackground
    int SherlockTheme_searchResultListItemHeight -> SherlockTheme_searchResultListItemHeight
    int SherlockTheme_searchViewCloseIcon -> SherlockTheme_searchViewCloseIcon
    int SherlockTheme_searchViewEditQuery -> SherlockTheme_searchViewEditQuery
    int SherlockTheme_searchViewEditQueryBackground -> SherlockTheme_searchViewEditQueryBackground
    int SherlockTheme_searchViewGoIcon -> SherlockTheme_searchViewGoIcon
    int SherlockTheme_searchViewSearchIcon -> SherlockTheme_searchViewSearchIcon
    int SherlockTheme_searchViewTextField -> SherlockTheme_searchViewTextField
    int SherlockTheme_searchViewTextFieldRight -> SherlockTheme_searchViewTextFieldRight
    int SherlockTheme_searchViewVoiceIcon -> SherlockTheme_searchViewVoiceIcon
    int SherlockTheme_selectableItemBackground -> SherlockTheme_selectableItemBackground
    int SherlockTheme_spinnerDropDownItemStyle -> SherlockTheme_spinnerDropDownItemStyle
    int SherlockTheme_spinnerItemStyle -> SherlockTheme_spinnerItemStyle
    int SherlockTheme_textAppearanceLargePopupMenu -> SherlockTheme_textAppearanceLargePopupMenu
    int SherlockTheme_textAppearanceListItemSmall -> SherlockTheme_textAppearanceListItemSmall
    int SherlockTheme_textAppearanceSearchResultSubtitle -> SherlockTheme_textAppearanceSearchResultSubtitle
    int SherlockTheme_textAppearanceSearchResultTitle -> SherlockTheme_textAppearanceSearchResultTitle
    int SherlockTheme_textAppearanceSmall -> SherlockTheme_textAppearanceSmall
    int SherlockTheme_textAppearanceSmallPopupMenu -> SherlockTheme_textAppearanceSmallPopupMenu
    int SherlockTheme_textColorPrimary -> SherlockTheme_textColorPrimary
    int SherlockTheme_textColorPrimaryDisableOnly -> SherlockTheme_textColorPrimaryDisableOnly
    int SherlockTheme_textColorPrimaryInverse -> SherlockTheme_textColorPrimaryInverse
    int SherlockTheme_textColorSearchUrl -> SherlockTheme_textColorSearchUrl
    int SherlockTheme_windowActionBar -> SherlockTheme_windowActionBar
    int SherlockTheme_windowActionBarOverlay -> SherlockTheme_windowActionBarOverlay
    int SherlockTheme_windowActionModeOverlay -> SherlockTheme_windowActionModeOverlay
    int SherlockTheme_windowContentOverlay -> SherlockTheme_windowContentOverlay
    int SherlockTheme_windowMinWidthMajor -> SherlockTheme_windowMinWidthMajor
    int SherlockTheme_windowMinWidthMinor -> SherlockTheme_windowMinWidthMinor
    int SherlockTheme_windowNoTitle -> SherlockTheme_windowNoTitle
    int SherlockTheme_windowSplitActionBar -> SherlockTheme_windowSplitActionBar
    int[] SherlockView -> SherlockView
    int SherlockView_android_focusable -> SherlockView_android_focusable
com.actionbarsherlock.app.ActionBar -> com.actionbarsherlock.app.ActionBar:
    int NAVIGATION_MODE_STANDARD -> NAVIGATION_MODE_STANDARD
    int NAVIGATION_MODE_LIST -> NAVIGATION_MODE_LIST
    int NAVIGATION_MODE_TABS -> NAVIGATION_MODE_TABS
    int DISPLAY_USE_LOGO -> DISPLAY_USE_LOGO
    int DISPLAY_SHOW_HOME -> DISPLAY_SHOW_HOME
    int DISPLAY_HOME_AS_UP -> DISPLAY_HOME_AS_UP
    int DISPLAY_SHOW_TITLE -> DISPLAY_SHOW_TITLE
    int DISPLAY_SHOW_CUSTOM -> DISPLAY_SHOW_CUSTOM
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setCustomView(int) -> setCustomView
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    int getTabCount() -> getTabCount
    int getHeight() -> getHeight
    void show() -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    android.content.Context getThemedContext() -> getThemedContext
com.actionbarsherlock.app.ActionBar$LayoutParams -> com.actionbarsherlock.app.ActionBar$LayoutParams:
    int[] ATTRS -> ATTRS
    int gravity -> gravity
com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener -> com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener:
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
com.actionbarsherlock.app.ActionBar$OnNavigationListener -> com.actionbarsherlock.app.ActionBar$OnNavigationListener:
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
com.actionbarsherlock.app.ActionBar$Tab -> com.actionbarsherlock.app.ActionBar$Tab:
    int INVALID_POSITION -> INVALID_POSITION
    int getPosition() -> getPosition
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
com.actionbarsherlock.app.ActionBar$TabListener -> com.actionbarsherlock.app.ActionBar$TabListener:
    void onTabSelected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabUnselected
    void onTabReselected(com.actionbarsherlock.app.ActionBar$Tab,android.support.v4.app.FragmentTransaction) -> onTabReselected
com.actionbarsherlock.app.SherlockActivity -> com.actionbarsherlock.app.SherlockActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockDialogFragment -> com.actionbarsherlock.app.SherlockDialogFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> mActivity
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockExpandableListActivity -> com.actionbarsherlock.app.SherlockExpandableListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockFragment -> com.actionbarsherlock.app.SherlockFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> mActivity
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockFragmentActivity -> com.actionbarsherlock.app.SherlockFragmentActivity:
    java.lang.String TAG -> TAG
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    boolean mIgnoreNativeCreate -> mIgnoreNativeCreate
    boolean mIgnoreNativePrepare -> mIgnoreNativePrepare
    boolean mIgnoreNativeSelected -> mIgnoreNativeSelected
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockListActivity -> com.actionbarsherlock.app.SherlockListActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.app.SherlockListFragment -> com.actionbarsherlock.app.SherlockListFragment:
    com.actionbarsherlock.app.SherlockFragmentActivity mActivity -> mActivity
    com.actionbarsherlock.app.SherlockFragmentActivity getSherlockActivity() -> getSherlockActivity
    void onAttach(android.app.Activity) -> onAttach
    void onDetach() -> onDetach
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    void onCreateOptionsMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.view.MenuInflater) -> onCreateOptionsMenu
    void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
com.actionbarsherlock.app.SherlockPreferenceActivity -> com.actionbarsherlock.app.SherlockPreferenceActivity:
    com.actionbarsherlock.ActionBarSherlock mSherlock -> mSherlock
    com.actionbarsherlock.ActionBarSherlock getSherlock() -> getSherlock
    com.actionbarsherlock.app.ActionBar getSupportActionBar() -> getSupportActionBar
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void onActionModeStarted(com.actionbarsherlock.view.ActionMode) -> onActionModeStarted
    void onActionModeFinished(com.actionbarsherlock.view.ActionMode) -> onActionModeFinished
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPostResume() -> onPostResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onPostCreate(android.os.Bundle) -> onPostCreate
    void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    com.actionbarsherlock.view.MenuInflater getSupportMenuInflater() -> getSupportMenuInflater
    void invalidateOptionsMenu() -> invalidateOptionsMenu
    void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void openOptionsMenu() -> openOptionsMenu
    void closeOptionsMenu() -> closeOptionsMenu
    boolean onCreatePanelMenu(int,com.actionbarsherlock.view.Menu) -> onCreatePanelMenu
    boolean onCreateOptionsMenu(com.actionbarsherlock.view.Menu) -> onCreateOptionsMenu
    boolean onPreparePanel(int,android.view.View,com.actionbarsherlock.view.Menu) -> onPreparePanel
    boolean onPrepareOptionsMenu(com.actionbarsherlock.view.Menu) -> onPrepareOptionsMenu
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    boolean onOptionsItemSelected(com.actionbarsherlock.view.MenuItem) -> onOptionsItemSelected
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void setContentView(android.view.View) -> setContentView
    void requestWindowFeature(long) -> requestWindowFeature
    android.view.View findViewById(int) -> findViewById
    void setSupportProgress(int) -> setSupportProgress
    void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    void setSupportSecondaryProgress(int) -> setSupportSecondaryProgress
com.actionbarsherlock.internal.ActionBarSherlockCompat -> com.actionbarsherlock.internal.ActionBarSherlockCompat:
    int DEFAULT_FEATURES -> DEFAULT_FEATURES
    java.lang.String PANELS_TAG -> PANELS_TAG
    boolean mReserveOverflow -> mReserveOverflow
    boolean mReserveOverflowSet -> mReserveOverflowSet
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    java.util.HashMap mNativeItemMap -> mNativeItemMap
    android.view.ViewGroup mDecor -> mDecor
    android.view.ViewGroup mContentParent -> mContentParent
    boolean mIsTitleReady -> mIsTitleReady
    boolean mIsDestroyed -> mIsDestroyed
    boolean mClosingActionMenu -> mClosingActionMenu
    boolean mMenuIsPrepared -> mMenuIsPrepared
    boolean mMenuRefreshContent -> mMenuRefreshContent
    android.os.Bundle mMenuFrozenActionViewState -> mMenuFrozenActionViewState
    com.actionbarsherlock.internal.app.ActionBarImpl aActionBar -> aActionBar
    com.actionbarsherlock.internal.widget.ActionBarView wActionBar -> wActionBar
    int mFeatures -> mFeatures
    int mUiOptions -> mUiOptions
    com.actionbarsherlock.internal.widget.IcsProgressBar mCircularProgressBar -> mCircularProgressBar
    com.actionbarsherlock.internal.widget.IcsProgressBar mHorizontalProgressBar -> mHorizontalProgressBar
    com.actionbarsherlock.view.ActionMode mActionMode -> mActionMode
    com.actionbarsherlock.internal.widget.ActionBarContextView mActionModeView -> mActionModeView
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void initActionBar() -> initActionBar
    android.content.Context getThemedContext() -> getThemedContext
    void setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    void dispatchPostResume() -> dispatchPostResume
    void dispatchPause() -> dispatchPause
    void dispatchStop() -> dispatchStop
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchOpenOptionsMenu() -> dispatchOpenOptionsMenu
    boolean dispatchCloseOptionsMenu() -> dispatchCloseOptionsMenu
    void dispatchPostCreate(android.os.Bundle) -> dispatchPostCreate
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean dispatchMenuOpened(int,android.view.Menu) -> dispatchMenuOpened
    void dispatchPanelClosed(int,android.view.Menu) -> dispatchPanelClosed
    void dispatchTitleChanged(java.lang.CharSequence,int) -> dispatchTitleChanged
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void dispatchDestroy() -> dispatchDestroy
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    boolean preparePanel() -> preparePanel
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
    void reopenMenu(boolean) -> reopenMenu
    boolean initializePanelMenu() -> initializePanelMenu
    void checkCloseActionMenu(com.actionbarsherlock.view.Menu) -> checkCloseActionMenu
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    void setFeatureInt(int,int) -> setFeatureInt
    void updateInt(int,int,boolean) -> updateInt
    void onIntChanged(int,int) -> onIntChanged
    void updateProgressBars(int) -> updateProgressBars
    void showProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar) -> showProgressBars
    void hideProgressBars(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar) -> hideProgressBars
    com.actionbarsherlock.internal.widget.IcsProgressBar getCircularProgressBar(boolean) -> getCircularProgressBar
    com.actionbarsherlock.internal.widget.IcsProgressBar getHorizontalProgressBar(boolean) -> getHorizontalProgressBar
    int getFeatures() -> getFeatures
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void installDecor() -> installDecor
    android.view.ViewGroup generateLayout() -> generateLayout
    boolean isReservingOverflow() -> isReservingOverflow
    int loadUiOptionsFromManifest(android.app.Activity) -> loadUiOptionsFromManifest
    java.lang.String cleanActivityName(java.lang.String,java.lang.String) -> cleanActivityName
    void ensureActionBar() -> ensureActionBar
    com.actionbarsherlock.internal.widget.ActionBarContextView access$0(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$0
    android.app.Activity access$1(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$1
    com.actionbarsherlock.view.ActionMode access$2(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$2
    void access$3(com.actionbarsherlock.internal.ActionBarSherlockCompat,com.actionbarsherlock.view.ActionMode) -> access$3
    boolean access$4(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$4
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$5(com.actionbarsherlock.internal.ActionBarSherlockCompat) -> access$5
com.actionbarsherlock.internal.ActionBarSherlockCompat$1 -> com.actionbarsherlock.internal.ActionBarSherlockCompat$1:
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper -> com.actionbarsherlock.internal.ActionBarSherlockCompat$ActionModeCallbackWrapper:
    com.actionbarsherlock.view.ActionMode$Callback mWrapped -> mWrapped
    com.actionbarsherlock.internal.ActionBarSherlockCompat this$0 -> this$0
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.internal.ActionBarSherlockNative -> com.actionbarsherlock.internal.ActionBarSherlockNative:
    com.actionbarsherlock.internal.app.ActionBarWrapper mActionBar -> mActionBar
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper mActionMode -> mActionMode
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> mMenu
    com.actionbarsherlock.app.ActionBar getActionBar() -> getActionBar
    void initActionBar() -> initActionBar
    void dispatchInvalidateOptionsMenu() -> dispatchInvalidateOptionsMenu
    boolean dispatchCreateOptionsMenu(android.view.Menu) -> dispatchCreateOptionsMenu
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    boolean hasFeature(int) -> hasFeature
    boolean requestFeature(int) -> requestFeature
    void setUiOptions(int) -> setUiOptions
    void setUiOptions(int,int) -> setUiOptions
    void setContentView(int) -> setContentView
    void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setProgressBarVisibility(boolean) -> setProgressBarVisibility
    void setProgressBarIndeterminateVisibility(boolean) -> setProgressBarIndeterminateVisibility
    void setProgressBarIndeterminate(boolean) -> setProgressBarIndeterminate
    void setProgress(int) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    android.content.Context getThemedContext() -> getThemedContext
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void access$0(com.actionbarsherlock.internal.ActionBarSherlockNative,com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper) -> access$0
    com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper access$1(com.actionbarsherlock.internal.ActionBarSherlockNative) -> access$1
    android.app.Activity access$2(com.actionbarsherlock.internal.ActionBarSherlockNative) -> access$2
com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper -> com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeCallbackWrapper:
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> mCallback
    com.actionbarsherlock.internal.ActionBarSherlockNative this$0 -> this$0
    boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper -> com.actionbarsherlock.internal.ActionBarSherlockNative$ActionModeWrapper:
    android.view.ActionMode mActionMode -> mActionMode
    com.actionbarsherlock.internal.view.menu.MenuWrapper mMenu -> mMenu
    com.actionbarsherlock.internal.ActionBarSherlockNative this$0 -> this$0
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.internal.view.menu.MenuWrapper getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    void setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
com.actionbarsherlock.internal.ResourcesCompat -> com.actionbarsherlock.internal.ResourcesCompat:
    java.lang.String TAG -> TAG
    boolean getResources_getBoolean(android.content.Context,int) -> getResources_getBoolean
    int getResources_getInteger(android.content.Context,int) -> getResources_getInteger
    int loadLogoFromManifest(android.app.Activity) -> loadLogoFromManifest
com.actionbarsherlock.internal.app.ActionBarImpl -> com.actionbarsherlock.internal.app.ActionBarImpl:
    android.content.Context mContext -> mContext
    android.content.Context mThemedContext -> mThemedContext
    android.app.Activity mActivity -> mActivity
    com.actionbarsherlock.internal.widget.ActionBarContainer mContainerView -> mContainerView
    com.actionbarsherlock.internal.widget.ActionBarView mActionView -> mActionView
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> mContextView
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> mSplitView
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout mContentView -> mContentView
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> mTabScrollView
    java.util.ArrayList mTabs -> mTabs
    com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl mSelectedTab -> mSelectedTab
    int mSavedTabPosition -> mSavedTabPosition
    com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl mActionMode -> mActionMode
    com.actionbarsherlock.view.ActionMode mDeferredDestroyActionMode -> mDeferredDestroyActionMode
    com.actionbarsherlock.view.ActionMode$Callback mDeferredModeDestroyCallback -> mDeferredModeDestroyCallback
    boolean mLastMenuVisibility -> mLastMenuVisibility
    java.util.ArrayList mMenuVisibilityListeners -> mMenuVisibilityListeners
    int CONTEXT_DISPLAY_NORMAL -> CONTEXT_DISPLAY_NORMAL
    int CONTEXT_DISPLAY_SPLIT -> CONTEXT_DISPLAY_SPLIT
    int INVALID_POSITION -> INVALID_POSITION
    int mContextDisplayMode -> mContextDisplayMode
    boolean mHasEmbeddedTabs -> mHasEmbeddedTabs
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mTabSelector -> mTabSelector
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentShowAnim -> mCurrentShowAnim
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentModeAnim -> mCurrentModeAnim
    boolean mShowHideAnimationEnabled -> mShowHideAnimationEnabled
    boolean mWasHiddenBeforeMode -> mWasHiddenBeforeMode
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mHideListener -> mHideListener
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener mShowListener -> mShowListener
    void init(android.view.View) -> init
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    void ensureTabsExist() -> ensureTabsExist
    void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    void setCustomView(int) -> setCustomView
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    void removeAllTabs() -> removeAllTabs
    void cleanupTabs() -> cleanupTabs
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.view.ActionMode startActionMode(com.actionbarsherlock.view.ActionMode$Callback) -> startActionMode
    void configureTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> configureTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    int getHeight() -> getHeight
    void show() -> show
    void show(boolean) -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void animateToMode(boolean) -> animateToMode
    android.content.Context getThemedContext() -> getThemedContext
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    int getTabCount() -> getTabCount
    void setNavigationMode(int) -> setNavigationMode
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout access$0(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$0
    com.actionbarsherlock.internal.widget.ActionBarContainer access$1(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$1
    com.actionbarsherlock.internal.widget.ActionBarContainer access$2(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$2
    int access$3(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$3
    void access$4(com.actionbarsherlock.internal.app.ActionBarImpl,com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> access$4
    com.actionbarsherlock.internal.widget.ActionBarContextView access$5(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$5
    com.actionbarsherlock.internal.widget.ActionBarView access$6(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$6
    android.content.Context access$7(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$7
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$8(com.actionbarsherlock.internal.app.ActionBarImpl) -> access$8
com.actionbarsherlock.internal.app.ActionBarImpl$1 -> com.actionbarsherlock.internal.app.ActionBarImpl$1:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.app.ActionBarImpl$2 -> com.actionbarsherlock.internal.app.ActionBarImpl$2:
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl -> com.actionbarsherlock.internal.app.ActionBarImpl$ActionModeImpl:
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> mCallback
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    java.lang.ref.WeakReference mCustomView -> mCustomView
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    void finish() -> finish
    void invalidate() -> invalidate
    boolean dispatchOnCreate() -> dispatchOnCreate
    void setCustomView(android.view.View) -> setCustomView
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl -> com.actionbarsherlock.internal.app.ActionBarImpl$TabImpl:
    com.actionbarsherlock.app.ActionBar$TabListener mCallback -> mCallback
    java.lang.Object mTag -> mTag
    android.graphics.drawable.Drawable mIcon -> mIcon
    java.lang.CharSequence mText -> mText
    java.lang.CharSequence mContentDesc -> mContentDesc
    int mPosition -> mPosition
    android.view.View mCustomView -> mCustomView
    com.actionbarsherlock.internal.app.ActionBarImpl this$0 -> this$0
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    com.actionbarsherlock.app.ActionBar$TabListener getCallback() -> getCallback
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.graphics.drawable.Drawable getIcon() -> getIcon
    int getPosition() -> getPosition
    void setPosition(int) -> setPosition
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
com.actionbarsherlock.internal.app.ActionBarWrapper -> com.actionbarsherlock.internal.app.ActionBarWrapper:
    android.app.Activity mActivity -> mActivity
    android.app.ActionBar mActionBar -> mActionBar
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mNavigationListener -> mNavigationListener
    java.util.Set mMenuVisibilityListeners -> mMenuVisibilityListeners
    android.support.v4.app.FragmentTransaction mFragmentTransaction -> mFragmentTransaction
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    android.content.Context getThemedContext() -> getThemedContext
    void setCustomView(android.view.View) -> setCustomView
    void setCustomView(android.view.View,com.actionbarsherlock.app.ActionBar$LayoutParams) -> setCustomView
    void setCustomView(int) -> setCustomView
    void setIcon(int) -> setIcon
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setLogo(int) -> setLogo
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setListNavigationCallbacks(android.widget.SpinnerAdapter,com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    boolean onNavigationItemSelected(int,long) -> onNavigationItemSelected
    void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    int getNavigationItemCount() -> getNavigationItemCount
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setDisplayOptions(int) -> setDisplayOptions
    void setDisplayOptions(int,int) -> setDisplayOptions
    void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    android.view.View getCustomView() -> getCustomView
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    int getNavigationMode() -> getNavigationMode
    void setNavigationMode(int) -> setNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    com.actionbarsherlock.app.ActionBar$Tab newTab() -> newTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void removeTab(com.actionbarsherlock.app.ActionBar$Tab) -> removeTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void selectTab(com.actionbarsherlock.app.ActionBar$Tab) -> selectTab
    com.actionbarsherlock.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    com.actionbarsherlock.app.ActionBar$Tab getTabAt(int) -> getTabAt
    int getTabCount() -> getTabCount
    int getHeight() -> getHeight
    void show() -> show
    void hide() -> hide
    boolean isShowing() -> isShowing
    void addOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    void removeOnMenuVisibilityListener(com.actionbarsherlock.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    void onMenuVisibilityChanged(boolean) -> onMenuVisibilityChanged
    android.app.Activity access$0(com.actionbarsherlock.internal.app.ActionBarWrapper) -> access$0
    android.support.v4.app.FragmentTransaction access$1(com.actionbarsherlock.internal.app.ActionBarWrapper) -> access$1
    void access$2(com.actionbarsherlock.internal.app.ActionBarWrapper,android.support.v4.app.FragmentTransaction) -> access$2
com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper -> com.actionbarsherlock.internal.app.ActionBarWrapper$TabWrapper:
    android.app.ActionBar$Tab mNativeTab -> mNativeTab
    java.lang.Object mTag -> mTag
    com.actionbarsherlock.app.ActionBar$TabListener mListener -> mListener
    com.actionbarsherlock.internal.app.ActionBarWrapper this$0 -> this$0
    int getPosition() -> getPosition
    android.graphics.drawable.Drawable getIcon() -> getIcon
    java.lang.CharSequence getText() -> getText
    com.actionbarsherlock.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setIcon(int) -> setIcon
    com.actionbarsherlock.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setText(int) -> setText
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    com.actionbarsherlock.app.ActionBar$Tab setCustomView(int) -> setCustomView
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    com.actionbarsherlock.app.ActionBar$Tab setTabListener(com.actionbarsherlock.app.ActionBar$TabListener) -> setTabListener
    void select() -> select
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    com.actionbarsherlock.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    java.lang.CharSequence getContentDescription() -> getContentDescription
    void onTabReselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabReselected
    void onTabSelected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabSelected
    void onTabUnselected(android.app.ActionBar$Tab,android.app.FragmentTransaction) -> onTabUnselected
com.actionbarsherlock.internal.nineoldandroids.animation.Animator -> com.actionbarsherlock.internal.nineoldandroids.animation.Animator:
    java.util.ArrayList mListeners -> mListeners
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void addListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> addListener
    void removeListener(com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener) -> removeListener
    java.util.ArrayList getListeners() -> getListeners
    void removeAllListeners() -> removeAllListeners
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void setTarget(java.lang.Object) -> setTarget
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener -> com.actionbarsherlock.internal.nineoldandroids.animation.Animator$AnimatorListener:
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorListenerAdapter:
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet:
    java.util.ArrayList mPlayingSet -> mPlayingSet
    java.util.HashMap mNodeMap -> mNodeMap
    java.util.ArrayList mNodes -> mNodes
    java.util.ArrayList mSortedNodes -> mSortedNodes
    boolean mNeedsSort -> mNeedsSort
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> mSetListener
    boolean mTerminated -> mTerminated
    boolean mStarted -> mStarted
    long mStartDelay -> mStartDelay
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator mDelayAnim -> mDelayAnim
    long mDuration -> mDuration
    void playTogether(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[]) -> playTogether
    void playTogether(java.util.Collection) -> playTogether
    void playSequentially(com.actionbarsherlock.internal.nineoldandroids.animation.Animator[]) -> playSequentially
    void playSequentially(java.util.List) -> playSequentially
    java.util.ArrayList getChildAnimations() -> getChildAnimations
    void setTarget(java.lang.Object) -> setTarget
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder play(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> play
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getDuration() -> getDuration
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet setDuration(long) -> setDuration
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void start() -> start
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet clone() -> clone
    void sortNodes() -> sortNodes
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.util.ArrayList access$2(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$2
    java.util.HashMap access$3(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$3
    java.util.ArrayList access$4(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$4
    void access$5(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet,boolean) -> access$5
    java.util.ArrayList access$6(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet) -> access$6
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1 -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$1:
    boolean canceled -> canceled
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    java.util.ArrayList val$nodesToStart -> val$nodesToStart
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$AnimatorSetListener:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> mCurrentNode
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet this$0 -> this$0
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder with(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> with
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder before(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> before
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> after
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Builder after(long) -> after
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency:
    int WITH -> WITH
    int AFTER -> AFTER
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node node -> node
    int rule -> rule
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$DependencyListener:
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet mAnimatorSet -> mAnimatorSet
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node mNode -> mNode
    int mRule -> mRule
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void startIfReady(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> startIfReady
com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node -> com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node:
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator animation -> animation
    java.util.ArrayList dependencies -> dependencies
    java.util.ArrayList tmpDependencies -> tmpDependencies
    java.util.ArrayList nodeDependencies -> nodeDependencies
    java.util.ArrayList nodeDependents -> nodeDependents
    boolean done -> done
    void addDependency(com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Dependency) -> addDependency
    com.actionbarsherlock.internal.nineoldandroids.animation.AnimatorSet$Node clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.FloatEvaluator:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet:
    float firstValue -> firstValue
    float lastValue -> lastValue
    float deltaValue -> deltaValue
    boolean firstTime -> firstTime
    java.lang.Object getValue(float) -> getValue
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet clone() -> clone
    float getFloatValue(float) -> getFloatValue
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.IntEvaluator:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet:
    int firstValue -> firstValue
    int lastValue -> lastValue
    int deltaValue -> deltaValue
    boolean firstTime -> firstTime
    java.lang.Object getValue(float) -> getValue
    com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet clone() -> clone
    int getIntValue(float) -> getIntValue
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe:
    float mFraction -> mFraction
    java.lang.Class mValueType -> mValueType
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    boolean mHasValue -> mHasValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float,int) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofInt(float) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float,float) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofFloat(float) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe ofObject(float) -> ofObject
    boolean hasValue() -> hasValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    float getFraction() -> getFraction
    void setFraction(float) -> setFraction
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    java.lang.Class getType() -> getType
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe:
    float mValue -> mValue
    float getFloatValue() -> getFloatValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe:
    int mValue -> mValue
    int getIntValue() -> getIntValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$IntKeyframe clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe -> com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe:
    java.lang.Object mValue -> mValue
    java.lang.Object getValue() -> getValue
    void setValue(java.lang.Object) -> setValue
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe$ObjectKeyframe clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet -> com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet:
    int mNumKeyframes -> mNumKeyframes
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mFirstKeyframe -> mFirstKeyframe
    com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe mLastKeyframe -> mLastKeyframe
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    java.util.ArrayList mKeyframes -> mKeyframes
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> mEvaluator
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofInt(int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofKeyframe(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[]) -> ofObject
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet clone() -> clone
    java.lang.Object getValue(float) -> getValue
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator -> com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator:
    boolean DBG -> DBG
    java.lang.Object mTarget -> mTarget
    java.lang.String mPropertyName -> mPropertyName
    void setPropertyName(java.lang.String) -> setPropertyName
    java.lang.String getPropertyName() -> getPropertyName
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void start() -> start
    void initAnimation() -> initAnimation
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator setDuration(long) -> setDuration
    java.lang.Object getTarget() -> getTarget
    void setTarget(java.lang.Object) -> setTarget
    void setupStartValues() -> setupStartValues
    void setupEndValues() -> setupEndValues
    void animateValue(float) -> animateValue
    com.actionbarsherlock.internal.nineoldandroids.animation.ObjectAnimator clone() -> clone
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder:
    java.lang.String mPropertyName -> mPropertyName
    java.lang.reflect.Method mSetter -> mSetter
    java.lang.reflect.Method mGetter -> mGetter
    java.lang.Class mValueType -> mValueType
    com.actionbarsherlock.internal.nineoldandroids.animation.KeyframeSet mKeyframeSet -> mKeyframeSet
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> sIntEvaluator
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> sFloatEvaluator
    java.lang.Class[] FLOAT_VARIANTS -> FLOAT_VARIANTS
    java.lang.Class[] INTEGER_VARIANTS -> INTEGER_VARIANTS
    java.lang.Class[] DOUBLE_VARIANTS -> DOUBLE_VARIANTS
    java.util.HashMap sSetterPropertyMap -> sSetterPropertyMap
    java.util.HashMap sGetterPropertyMap -> sGetterPropertyMap
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> mPropertyMapLock
    java.lang.Object[] mTmpValueArray -> mTmpValueArray
    com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator mEvaluator -> mEvaluator
    java.lang.Object mAnimatedValue -> mAnimatedValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setKeyframes(com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe[]) -> setKeyframes
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> getPropertyFunction
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> setupSetterOrGetter
    void setupSetter(java.lang.Class) -> setupSetter
    void setupGetter(java.lang.Class) -> setupGetter
    void setupSetterAndGetter(java.lang.Object) -> setupSetterAndGetter
    void setupValue(java.lang.Object,com.actionbarsherlock.internal.nineoldandroids.animation.Keyframe) -> setupValue
    void setupStartValue(java.lang.Object) -> setupStartValue
    void setupEndValue(java.lang.Object) -> setupEndValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void init() -> init
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void calculateValue(float) -> calculateValue
    void setPropertyName(java.lang.String) -> setPropertyName
    java.lang.String getPropertyName() -> getPropertyName
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> getMethodName
    java.lang.Object clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder:
    com.actionbarsherlock.internal.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> mFloatKeyframeSet
    float mFloatAnimatedValue -> mFloatAnimatedValue
    void setFloatValues(float[]) -> setFloatValues
    void calculateValue(float) -> calculateValue
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void setupSetter(java.lang.Class) -> setupSetter
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder -> com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder:
    com.actionbarsherlock.internal.nineoldandroids.animation.IntKeyframeSet mIntKeyframeSet -> mIntKeyframeSet
    int mIntAnimatedValue -> mIntAnimatedValue
    void setIntValues(int[]) -> setIntValues
    void calculateValue(float) -> calculateValue
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone() -> clone
    void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    void setupSetter(java.lang.Class) -> setupSetter
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator -> com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator:
    long DEFAULT_FRAME_DELAY -> DEFAULT_FRAME_DELAY
    int ANIMATION_START -> ANIMATION_START
    int ANIMATION_FRAME -> ANIMATION_FRAME
    int STOPPED -> STOPPED
    int RUNNING -> RUNNING
    int SEEKED -> SEEKED
    long mStartTime -> mStartTime
    long mSeekTime -> mSeekTime
    java.lang.ThreadLocal sAnimationHandler -> sAnimationHandler
    java.lang.ThreadLocal sAnimations -> sAnimations
    java.lang.ThreadLocal sPendingAnimations -> sPendingAnimations
    java.lang.ThreadLocal sDelayedAnims -> sDelayedAnims
    java.lang.ThreadLocal sEndingAnims -> sEndingAnims
    java.lang.ThreadLocal sReadyAnims -> sReadyAnims
    android.view.animation.Interpolator sDefaultInterpolator -> sDefaultInterpolator
    boolean mPlayingBackwards -> mPlayingBackwards
    int mCurrentIteration -> mCurrentIteration
    float mCurrentFraction -> mCurrentFraction
    boolean mStartedDelay -> mStartedDelay
    long mDelayStartTime -> mDelayStartTime
    int mPlayingState -> mPlayingState
    boolean mRunning -> mRunning
    boolean mStarted -> mStarted
    boolean mInitialized -> mInitialized
    long mDuration -> mDuration
    long mStartDelay -> mStartDelay
    long sFrameDelay -> sFrameDelay
    int mRepeatCount -> mRepeatCount
    int mRepeatMode -> mRepeatMode
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    java.util.ArrayList mUpdateListeners -> mUpdateListeners
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] mValues -> mValues
    java.util.HashMap mValuesMap -> mValuesMap
    int RESTART -> RESTART
    int REVERSE -> REVERSE
    int INFINITE -> INFINITE
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofInt(int[]) -> ofInt
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> ofFloat
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofPropertyValuesHolder(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator ofObject(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    void setIntValues(int[]) -> setIntValues
    void setFloatValues(float[]) -> setFloatValues
    void setObjectValues(java.lang.Object[]) -> setObjectValues
    void setValues(com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[]) -> setValues
    com.actionbarsherlock.internal.nineoldandroids.animation.PropertyValuesHolder[] getValues() -> getValues
    void initAnimation() -> initAnimation
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    long getDuration() -> getDuration
    void setCurrentPlayTime(long) -> setCurrentPlayTime
    long getCurrentPlayTime() -> getCurrentPlayTime
    long getStartDelay() -> getStartDelay
    void setStartDelay(long) -> setStartDelay
    long getFrameDelay() -> getFrameDelay
    void setFrameDelay(long) -> setFrameDelay
    java.lang.Object getAnimatedValue() -> getAnimatedValue
    java.lang.Object getAnimatedValue(java.lang.String) -> getAnimatedValue
    void setRepeatCount(int) -> setRepeatCount
    int getRepeatCount() -> getRepeatCount
    void setRepeatMode(int) -> setRepeatMode
    int getRepeatMode() -> getRepeatMode
    void addUpdateListener(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> addUpdateListener
    void removeAllUpdateListeners() -> removeAllUpdateListeners
    void removeUpdateListener(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> removeUpdateListener
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setEvaluator(com.actionbarsherlock.internal.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    void start(boolean) -> start
    void start() -> start
    void cancel() -> cancel
    void end() -> end
    boolean isRunning() -> isRunning
    boolean isStarted() -> isStarted
    void reverse() -> reverse
    void endAnimation() -> endAnimation
    void startAnimation() -> startAnimation
    boolean delayedAnimationFrame(long) -> delayedAnimationFrame
    boolean animationFrame(long) -> animationFrame
    float getAnimatedFraction() -> getAnimatedFraction
    void animateValue(float) -> animateValue
    com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator clone() -> clone
    int getCurrentAnimationsCount() -> getCurrentAnimationsCount
    void clearAllAnimations() -> clearAllAnimations
    java.lang.String toString() -> toString
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator clone() -> clone
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    java.lang.ThreadLocal access$2() -> access$2
    java.lang.ThreadLocal access$3() -> access$3
    java.lang.ThreadLocal access$4() -> access$4
    long access$5(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> access$5
    void access$6(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> access$6
    java.lang.ThreadLocal access$7() -> access$7
    java.lang.ThreadLocal access$8() -> access$8
    boolean access$9(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,long) -> access$9
    void access$10(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator,boolean) -> access$10
    void access$11(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> access$11
    long access$12() -> access$12
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$1:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$2:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$3:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$4:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5 -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$5:
    java.util.ArrayList initialValue() -> initialValue
    java.lang.Object initialValue() -> initialValue
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimationHandler:
    void handleMessage(android.os.Message) -> handleMessage
com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener:
    void onAnimationUpdate(com.actionbarsherlock.internal.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup -> com.actionbarsherlock.internal.nineoldandroids.view.NineViewGroup:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy -> com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy:
    boolean NEEDS_PROXY -> NEEDS_PROXY
    java.util.WeakHashMap PROXIES -> PROXIES
    java.lang.ref.WeakReference mView -> mView
    float mAlpha -> mAlpha
    float mScaleX -> mScaleX
    float mScaleY -> mScaleY
    float mTranslationX -> mTranslationX
    float mTranslationY -> mTranslationY
    android.graphics.RectF mBefore -> mBefore
    android.graphics.RectF mAfter -> mAfter
    android.graphics.Matrix mTempMatrix -> mTempMatrix
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> wrap
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getScaleX() -> getScaleX
    void setScaleX(float) -> setScaleX
    float getScaleY() -> getScaleY
    void setScaleY(float) -> setScaleY
    int getScrollX() -> getScrollX
    void setScrollX(int) -> setScrollX
    int getScrollY() -> getScrollY
    void setScrollY(int) -> setScrollY
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
    void prepareForUpdate() -> prepareForUpdate
    void invalidateAfterUpdate() -> invalidateAfterUpdate
    void computeRect(android.graphics.RectF,android.view.View) -> computeRect
    void transformMatrix(android.graphics.Matrix,android.view.View) -> transformMatrix
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    void reset() -> reset
com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineFrameLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationY() -> getTranslationY
    void setTranslationY(float) -> setTranslationY
com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView -> com.actionbarsherlock.internal.nineoldandroids.widget.NineHorizontalScrollView:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout -> com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout:
    com.actionbarsherlock.internal.nineoldandroids.view.animation.AnimatorProxy mProxy -> mProxy
    void setVisibility(int) -> setVisibility
    float getAlpha() -> getAlpha
    void setAlpha(float) -> setAlpha
    float getTranslationX() -> getTranslationX
    void setTranslationX(float) -> setTranslationX
com.actionbarsherlock.internal.view.ActionProviderWrapper -> com.actionbarsherlock.internal.view.ActionProviderWrapper:
    com.actionbarsherlock.view.ActionProvider mProvider -> mProvider
    com.actionbarsherlock.view.ActionProvider unwrap() -> unwrap
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
com.actionbarsherlock.internal.view.StandaloneActionMode -> com.actionbarsherlock.internal.view.StandaloneActionMode:
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> mContextView
    com.actionbarsherlock.view.ActionMode$Callback mCallback -> mCallback
    java.lang.ref.WeakReference mCustomView -> mCustomView
    boolean mFinished -> mFinished
    boolean mFocusable -> mFocusable
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setTitle(int) -> setTitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onCloseSubMenu
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
    boolean isUiFocusable() -> isUiFocusable
com.actionbarsherlock.internal.view.View_HasStateListenerSupport -> com.actionbarsherlock.internal.view.View_HasStateListenerSupport:
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener -> com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener:
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.actionbarsherlock.internal.view.menu.ActionMenu -> com.actionbarsherlock.internal.view.menu.ActionMenu:
    android.content.Context mContext -> mContext
    boolean mIsQwerty -> mIsQwerty
    java.util.ArrayList mItems -> mItems
    android.content.Context getContext() -> getContext
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    void clear() -> clear
    void close() -> close
    int findItemIndex(int) -> findItemIndex
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.internal.view.menu.ActionMenuItem findItemWithShortcut(int,android.view.KeyEvent) -> findItemWithShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void removeGroup(int) -> removeGroup
    void removeItem(int) -> removeItem
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setQwertyMode(boolean) -> setQwertyMode
    int size() -> size
com.actionbarsherlock.internal.view.menu.ActionMenuItem -> com.actionbarsherlock.internal.view.menu.ActionMenuItem:
    int mId -> mId
    int mGroup -> mGroup
    int mOrdering -> mOrdering
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mTitleCondensed -> mTitleCondensed
    android.content.Intent mIntent -> mIntent
    char mShortcutNumericChar -> mShortcutNumericChar
    char mShortcutAlphabeticChar -> mShortcutAlphabeticChar
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    android.content.Context mContext -> mContext
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> mClickListener
    int mFlags -> mFlags
    int CHECKABLE -> CHECKABLE
    int CHECKED -> CHECKED
    int EXCLUSIVE -> EXCLUSIVE
    int HIDDEN -> HIDDEN
    int ENABLED -> ENABLED
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    int getGroupId() -> getGroupId
    android.graphics.drawable.Drawable getIcon() -> getIcon
    android.content.Intent getIntent() -> getIntent
    int getItemId() -> getItemId
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    char getNumericShortcut() -> getNumericShortcut
    int getOrder() -> getOrder
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    boolean hasSubMenu() -> hasSubMenu
    boolean isCheckable() -> isCheckable
    boolean isChecked() -> isChecked
    boolean isEnabled() -> isEnabled
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    com.actionbarsherlock.internal.view.menu.ActionMenuItem setExclusiveCheckable(boolean) -> setExclusiveCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean invoke() -> invoke
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
com.actionbarsherlock.internal.view.menu.ActionMenuItemView -> com.actionbarsherlock.internal.view.menu.ActionMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> mItemData
    java.lang.CharSequence mTitle -> mTitle
    com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker mItemInvoker -> mItemInvoker
    android.widget.ImageButton mImageButton -> mImageButton
    com.actionbarsherlock.internal.widget.CapitalizingButton mTextButton -> mTextButton
    boolean mAllowTextWithIcon -> mAllowTextWithIcon
    boolean mExpandedFormat -> mExpandedFormat
    int mMinWidth -> mMinWidth
    java.util.Set mListeners -> mListeners
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onFinishInflate() -> onFinishInflate
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    void setEnabled(boolean) -> setEnabled
    void onClick(android.view.View) -> onClick
    void setItemInvoker(com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setExpandedFormat(boolean) -> setExpandedFormat
    void updateTextButtonVisibility() -> updateTextButtonVisibility
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean hasText() -> hasText
    void setShortcut(boolean,char) -> setShortcut
    void setTitle(java.lang.CharSequence) -> setTitle
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    boolean showsIcon() -> showsIcon
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
    boolean onLongClick(android.view.View) -> onLongClick
    void onMeasure(int,int) -> onMeasure
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter:
    android.view.View mOverflowButton -> mOverflowButton
    boolean mReserveOverflow -> mReserveOverflow
    boolean mReserveOverflowSet -> mReserveOverflowSet
    int mWidthLimit -> mWidthLimit
    int mActionItemWidthLimit -> mActionItemWidthLimit
    int mMaxItems -> mMaxItems
    boolean mMaxItemsSet -> mMaxItemsSet
    boolean mStrictWidthLimit -> mStrictWidthLimit
    boolean mWidthLimitSet -> mWidthLimitSet
    boolean mExpandedActionViewsExclusive -> mExpandedActionViewsExclusive
    int mMinCellSize -> mMinCellSize
    android.util.SparseBooleanArray mActionButtonGroups -> mActionButtonGroups
    android.view.View mScrapActionButtonView -> mScrapActionButtonView
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mOverflowPopup -> mOverflowPopup
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu mActionButtonPopup -> mActionButtonPopup
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable mPostedOpenRunnable -> mPostedOpenRunnable
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback mPopupPresenterCallback -> mPopupPresenterCallback
    int mOpenSubMenuId -> mOpenSubMenuId
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    boolean reserveOverflow(android.content.Context) -> reserveOverflow
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWidthLimit(int,boolean) -> setWidthLimit
    void setReserveOverflow(boolean) -> setReserveOverflow
    void setItemLimit(int) -> setItemLimit
    void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> bindItemView
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> shouldIncludeItem
    void updateMenuView(boolean) -> updateMenuView
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    android.view.View findViewForItem(com.actionbarsherlock.view.MenuItem) -> findViewForItem
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean dismissPopupMenus() -> dismissPopupMenus
    boolean hideSubMenus() -> hideSubMenus
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowReserved() -> isOverflowReserved
    boolean flagActionItems() -> flagActionItems
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup access$0(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> access$0
    void access$1(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup) -> access$1
    android.view.View access$2(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> access$2
    void access$3(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu) -> access$3
    void access$4(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter,com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable) -> access$4
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$ActionButtonSubmenu:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$HasPermanentMenuKey:
    boolean get(android.content.Context) -> get
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OpenOverflowRunnable:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup mPopup -> mPopup
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowMenuButton:
    java.util.Set mListeners -> mListeners
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    boolean performClick() -> performClick
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void addOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> addOnAttachStateChangeListener
    void removeOnAttachStateChangeListener(com.actionbarsherlock.internal.view.View_OnAttachStateChangeListener) -> removeOnAttachStateChangeListener
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$OverflowPopup:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    void onDismiss() -> onDismiss
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$PopupPresenterCallback:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter this$0 -> this$0
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState:
    int openSubMenuId -> openSubMenuId
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1 -> com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState$1:
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.view.menu.ActionMenuView -> com.actionbarsherlock.internal.view.menu.ActionMenuView:
    boolean IS_FROYO -> IS_FROYO
    int MIN_CELL_SIZE -> MIN_CELL_SIZE
    int GENERATED_ITEM_PADDING -> GENERATED_ITEM_PADDING
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    boolean mReserveOverflow -> mReserveOverflow
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mPresenter -> mPresenter
    boolean mFormatItems -> mFormatItems
    int mFormatItemsWidth -> mFormatItemsWidth
    int mMinCellSize -> mMinCellSize
    int mGeneratedItemPadding -> mGeneratedItemPadding
    boolean mFirst -> mFirst
    void setPresenter(com.actionbarsherlock.internal.view.menu.ActionMenuPresenter) -> setPresenter
    boolean isExpandedFormat() -> isExpandedFormat
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean isOverflowReserved() -> isOverflowReserved
    void setOverflowReserved(boolean) -> setOverflowReserved
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> invokeItem
    int getWindowAnimations() -> getWindowAnimations
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initialize
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.widget.LinearLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.widget.LinearLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView -> com.actionbarsherlock.internal.view.menu.ActionMenuView$ActionMenuChildView:
    boolean needsDividerBefore() -> needsDividerBefore
    boolean needsDividerAfter() -> needsDividerAfter
com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams -> com.actionbarsherlock.internal.view.menu.ActionMenuView$LayoutParams:
    boolean isOverflowButton -> isOverflowButton
    int cellsUsed -> cellsUsed
    int extraPixels -> extraPixels
    boolean expandable -> expandable
    boolean preventEdgeOffset -> preventEdgeOffset
    boolean expanded -> expanded
com.actionbarsherlock.internal.view.menu.BaseMenuPresenter -> com.actionbarsherlock.internal.view.menu.BaseMenuPresenter:
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    android.content.Context mSystemContext -> mSystemContext
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    android.view.LayoutInflater mSystemInflater -> mSystemInflater
    android.view.LayoutInflater mInflater -> mInflater
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mCallback -> mCallback
    int mMenuLayoutRes -> mMenuLayoutRes
    int mItemLayoutRes -> mItemLayoutRes
    com.actionbarsherlock.internal.view.menu.MenuView mMenuView -> mMenuView
    int mId -> mId
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void addItemView(android.view.View,int) -> addItemView
    boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    com.actionbarsherlock.internal.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    android.view.View getItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    void bindItemView(com.actionbarsherlock.internal.view.menu.MenuItemImpl,com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> bindItemView
    boolean shouldIncludeItem(int,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> shouldIncludeItem
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    void setId(int) -> setId
com.actionbarsherlock.internal.view.menu.ListMenuItemView -> com.actionbarsherlock.internal.view.menu.ListMenuItemView:
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItemData -> mItemData
    android.widget.ImageView mIconView -> mIconView
    android.widget.RadioButton mRadioButton -> mRadioButton
    android.widget.TextView mTitleView -> mTitleView
    android.widget.CheckBox mCheckBox -> mCheckBox
    android.widget.TextView mShortcutView -> mShortcutView
    android.graphics.drawable.Drawable mBackground -> mBackground
    int mTextAppearance -> mTextAppearance
    android.content.Context mTextAppearanceContext -> mTextAppearanceContext
    boolean mPreserveIconSpacing -> mPreserveIconSpacing
    android.view.LayoutInflater mInflater -> mInflater
    boolean mForceShowIcon -> mForceShowIcon
    android.content.Context mContext -> mContext
    void onFinishInflate() -> onFinishInflate
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    void setForceShowIcon(boolean) -> setForceShowIcon
    void setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void onMeasure(int,int) -> onMeasure
    void insertIconView() -> insertIconView
    void insertRadioButton() -> insertRadioButton
    void insertCheckBox() -> insertCheckBox
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
    android.view.LayoutInflater getInflater() -> getInflater
com.actionbarsherlock.internal.view.menu.MenuBuilder -> com.actionbarsherlock.internal.view.menu.MenuBuilder:
    java.lang.String PRESENTER_KEY -> PRESENTER_KEY
    java.lang.String ACTION_VIEW_STATES_KEY -> ACTION_VIEW_STATES_KEY
    java.lang.String EXPANDED_ACTION_VIEW_ID -> EXPANDED_ACTION_VIEW_ID
    int[] sCategoryToOrder -> sCategoryToOrder
    android.content.Context mContext -> mContext
    android.content.res.Resources mResources -> mResources
    boolean mQwertyMode -> mQwertyMode
    boolean mShortcutsVisible -> mShortcutsVisible
    com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback mCallback -> mCallback
    java.util.ArrayList mItems -> mItems
    java.util.ArrayList mVisibleItems -> mVisibleItems
    boolean mIsVisibleItemsStale -> mIsVisibleItemsStale
    java.util.ArrayList mActionItems -> mActionItems
    java.util.ArrayList mNonActionItems -> mNonActionItems
    boolean mIsActionItemsStale -> mIsActionItemsStale
    int mDefaultShowAsAction -> mDefaultShowAsAction
    android.view.ContextMenu$ContextMenuInfo mCurrentMenuInfo -> mCurrentMenuInfo
    java.lang.CharSequence mHeaderTitle -> mHeaderTitle
    android.graphics.drawable.Drawable mHeaderIcon -> mHeaderIcon
    android.view.View mHeaderView -> mHeaderView
    boolean mPreventDispatchingItemsChanged -> mPreventDispatchingItemsChanged
    boolean mItemsChangedWhileDispatchPrevented -> mItemsChangedWhileDispatchPrevented
    boolean mOptionalIconsVisible -> mOptionalIconsVisible
    boolean mIsClosing -> mIsClosing
    java.util.ArrayList mTempShortcutItemList -> mTempShortcutItemList
    java.util.concurrent.CopyOnWriteArrayList mPresenters -> mPresenters
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mExpandedItem -> mExpandedItem
    com.actionbarsherlock.internal.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    void addMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> addMenuPresenter
    void removeMenuPresenter(com.actionbarsherlock.internal.view.menu.MenuPresenter) -> removeMenuPresenter
    void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    boolean dispatchSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> dispatchSubMenuSelected
    void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    void savePresenterStates(android.os.Bundle) -> savePresenterStates
    void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> setCallback
    com.actionbarsherlock.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void removeItemAtInt(int,boolean) -> removeItemAtInt
    void removeItemAt(int) -> removeItemAt
    void clearAll() -> clearAll
    void clear() -> clear
    void setExclusiveItemChecked(com.actionbarsherlock.view.MenuItem) -> setExclusiveItemChecked
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    int findItemIndex(int) -> findItemIndex
    int findGroupIndex(int) -> findGroupIndex
    int findGroupIndex(int,int) -> findGroupIndex
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    void setQwertyMode(boolean) -> setQwertyMode
    int getOrdering(int) -> getOrdering
    boolean isQwertyMode() -> isQwertyMode
    void setShortcutsVisible(boolean) -> setShortcutsVisible
    void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    boolean isShortcutsVisible() -> isShortcutsVisible
    android.content.res.Resources getResources() -> getResources
    android.content.Context getContext() -> getContext
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> dispatchMenuItemSelected
    void changeMenuMode() -> changeMenuMode
    int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    com.actionbarsherlock.internal.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    boolean performItemAction(com.actionbarsherlock.view.MenuItem,int) -> performItemAction
    void close(boolean) -> close
    void close() -> close
    void onItemsChanged(boolean) -> onItemsChanged
    void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
    void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    void onItemVisibleChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> onItemVisibleChanged
    void onItemActionRequestChanged(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    java.util.ArrayList getVisibleItems() -> getVisibleItems
    void flagActionItems() -> flagActionItems
    java.util.ArrayList getActionItems() -> getActionItems
    java.util.ArrayList getNonActionItems() -> getNonActionItems
    void clearHeader() -> clearHeader
    void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    com.actionbarsherlock.internal.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    android.view.View getHeaderView() -> getHeaderView
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setCurrentMenuInfo
    void setOptionalIconsVisible(boolean) -> setOptionalIconsVisible
    boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    boolean bindNativeOverflow(android.view.Menu,android.view.MenuItem$OnMenuItemClickListener,java.util.HashMap) -> bindNativeOverflow
com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback -> com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback:
    boolean onMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
    void onMenuModeChange(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onMenuModeChange
com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker -> com.actionbarsherlock.internal.view.menu.MenuBuilder$ItemInvoker:
    boolean invokeItem(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> invokeItem
com.actionbarsherlock.internal.view.menu.MenuItemImpl -> com.actionbarsherlock.internal.view.menu.MenuItemImpl:
    java.lang.String TAG -> TAG
    int SHOW_AS_ACTION_MASK -> SHOW_AS_ACTION_MASK
    int mId -> mId
    int mGroup -> mGroup
    int mCategoryOrder -> mCategoryOrder
    int mOrdering -> mOrdering
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mTitleCondensed -> mTitleCondensed
    android.content.Intent mIntent -> mIntent
    char mShortcutNumericChar -> mShortcutNumericChar
    char mShortcutAlphabeticChar -> mShortcutAlphabeticChar
    android.graphics.drawable.Drawable mIconDrawable -> mIconDrawable
    int mIconResId -> mIconResId
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    com.actionbarsherlock.internal.view.menu.SubMenuBuilder mSubMenu -> mSubMenu
    java.lang.Runnable mItemCallback -> mItemCallback
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mClickListener -> mClickListener
    int mFlags -> mFlags
    int CHECKABLE -> CHECKABLE
    int CHECKED -> CHECKED
    int EXCLUSIVE -> EXCLUSIVE
    int HIDDEN -> HIDDEN
    int ENABLED -> ENABLED
    int IS_ACTION -> IS_ACTION
    int mShowAsAction -> mShowAsAction
    android.view.View mActionView -> mActionView
    com.actionbarsherlock.view.ActionProvider mActionProvider -> mActionProvider
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mOnActionExpandListener -> mOnActionExpandListener
    boolean mIsActionViewExpanded -> mIsActionViewExpanded
    int NO_ICON -> NO_ICON
    android.view.ContextMenu$ContextMenuInfo mMenuInfo -> mMenuInfo
    java.lang.String sPrependShortcutLabel -> sPrependShortcutLabel
    java.lang.String sEnterShortcutLabel -> sEnterShortcutLabel
    java.lang.String sDeleteShortcutLabel -> sDeleteShortcutLabel
    java.lang.String sSpaceShortcutLabel -> sSpaceShortcutLabel
    boolean invoke() -> invoke
    boolean isEnabled() -> isEnabled
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    int getGroupId() -> getGroupId
    int getItemId() -> getItemId
    int getOrder() -> getOrder
    int getOrdering() -> getOrdering
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    java.lang.Runnable getCallback() -> getCallback
    com.actionbarsherlock.view.MenuItem setCallback(java.lang.Runnable) -> setCallback
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    char getShortcut() -> getShortcut
    java.lang.String getShortcutLabel() -> getShortcutLabel
    boolean shouldShowShortcut() -> shouldShowShortcut
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    boolean hasSubMenu() -> hasSubMenu
    void setSubMenu(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> setSubMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getTitleForItemView(com.actionbarsherlock.internal.view.menu.MenuView$ItemView) -> getTitleForItemView
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    boolean isExclusiveCheckable() -> isExclusiveCheckable
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    void setCheckedInt(boolean) -> setCheckedInt
    boolean isVisible() -> isVisible
    boolean setVisibleInt(boolean) -> setVisibleInt
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    java.lang.String toString() -> toString
    void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void actionFormatChanged() -> actionFormatChanged
    boolean shouldShowIcon() -> shouldShowIcon
    boolean isActionButton() -> isActionButton
    boolean requestsActionButton() -> requestsActionButton
    boolean requiresActionButton() -> requiresActionButton
    void setIsActionButton(boolean) -> setIsActionButton
    boolean showsTextAsAction() -> showsTextAsAction
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    void setActionViewExpanded(boolean) -> setActionViewExpanded
    boolean isActionViewExpanded() -> isActionViewExpanded
com.actionbarsherlock.internal.view.menu.MenuItemWrapper -> com.actionbarsherlock.internal.view.menu.MenuItemWrapper:
    android.view.MenuItem mNativeItem -> mNativeItem
    com.actionbarsherlock.view.SubMenu mSubMenu -> mSubMenu
    com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener mMenuItemClickListener -> mMenuItemClickListener
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener mActionExpandListener -> mActionExpandListener
    android.view.MenuItem$OnActionExpandListener mNativeActionExpandListener -> mNativeActionExpandListener
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    com.actionbarsherlock.view.MenuItem$OnActionExpandListener access$0(com.actionbarsherlock.internal.view.menu.MenuItemWrapper) -> access$0
com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1 -> com.actionbarsherlock.internal.view.menu.MenuItemWrapper$1:
    com.actionbarsherlock.internal.view.menu.MenuItemWrapper this$0 -> this$0
    boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
com.actionbarsherlock.internal.view.menu.MenuPopupHelper -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper:
    int ITEM_LAYOUT -> ITEM_LAYOUT
    android.content.Context mContext -> mContext
    android.view.LayoutInflater mInflater -> mInflater
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mPopup -> mPopup
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    int mPopupMaxWidth -> mPopupMaxWidth
    android.view.View mAnchorView -> mAnchorView
    boolean mOverflowOnly -> mOverflowOnly
    android.view.ViewTreeObserver mTreeObserver -> mTreeObserver
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter mAdapter -> mAdapter
    com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback mPresenterCallback -> mPresenterCallback
    boolean mForceShowIcon -> mForceShowIcon
    android.view.ViewGroup mMeasureParent -> mMeasureParent
    void setAnchorView(android.view.View) -> setAnchorView
    void setForceShowIcon(boolean) -> setForceShowIcon
    void show() -> show
    boolean tryShow() -> tryShow
    void dismiss() -> dismiss
    void onDismiss() -> onDismiss
    boolean isShowing() -> isShowing
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    int measureContentWidth(android.widget.ListAdapter) -> measureContentWidth
    void onGlobalLayout() -> onGlobalLayout
    void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean access$0(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$0
    android.view.LayoutInflater access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$1
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$2(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$2
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter access$3(com.actionbarsherlock.internal.view.menu.MenuPopupHelper) -> access$3
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper$ExpandedIndexObserver:
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> this$0
    void onChanged() -> onChanged
com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter -> com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mAdapterMenu -> mAdapterMenu
    int mExpandedIndex -> mExpandedIndex
    com.actionbarsherlock.internal.view.menu.MenuPopupHelper this$0 -> this$0
    int getCount() -> getCount
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void findExpandedIndex() -> findExpandedIndex
    java.lang.Object getItem(int) -> getItem
    com.actionbarsherlock.internal.view.menu.MenuBuilder access$1(com.actionbarsherlock.internal.view.menu.MenuPopupHelper$MenuAdapter) -> access$1
com.actionbarsherlock.internal.view.menu.MenuPresenter -> com.actionbarsherlock.internal.view.menu.MenuPresenter:
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback -> com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback:
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean onOpenSubMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> onOpenSubMenu
com.actionbarsherlock.internal.view.menu.MenuView -> com.actionbarsherlock.internal.view.menu.MenuView:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initialize
    int getWindowAnimations() -> getWindowAnimations
com.actionbarsherlock.internal.view.menu.MenuView$ItemView -> com.actionbarsherlock.internal.view.menu.MenuView$ItemView:
    void initialize(com.actionbarsherlock.internal.view.menu.MenuItemImpl,int) -> initialize
    com.actionbarsherlock.internal.view.menu.MenuItemImpl getItemData() -> getItemData
    void setTitle(java.lang.CharSequence) -> setTitle
    void setEnabled(boolean) -> setEnabled
    void setCheckable(boolean) -> setCheckable
    void setChecked(boolean) -> setChecked
    void setShortcut(boolean,char) -> setShortcut
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean prefersCondensedTitle() -> prefersCondensedTitle
    boolean showsIcon() -> showsIcon
com.actionbarsherlock.internal.view.menu.MenuWrapper -> com.actionbarsherlock.internal.view.menu.MenuWrapper:
    android.view.Menu mNativeMenu -> mNativeMenu
    java.util.WeakHashMap mNativeMap -> mNativeMap
    android.view.Menu unwrap() -> unwrap
    com.actionbarsherlock.view.MenuItem addInternal(android.view.MenuItem) -> addInternal
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addInternal(android.view.SubMenu) -> addInternal
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void invalidate() -> invalidate
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    com.actionbarsherlock.view.MenuItem findItem(android.view.MenuItem) -> findItem
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
com.actionbarsherlock.internal.view.menu.SubMenuBuilder -> com.actionbarsherlock.internal.view.menu.SubMenuBuilder:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mParentMenu -> mParentMenu
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mItem -> mItem
    void setQwertyMode(boolean) -> setQwertyMode
    boolean isQwertyMode() -> isQwertyMode
    void setShortcutsVisible(boolean) -> setShortcutsVisible
    boolean isShortcutsVisible() -> isShortcutsVisible
    com.actionbarsherlock.view.Menu getParentMenu() -> getParentMenu
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuBuilder$Callback) -> setCallback
    com.actionbarsherlock.internal.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    boolean dispatchMenuItemSelected(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.view.MenuItem) -> dispatchMenuItemSelected
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
com.actionbarsherlock.internal.view.menu.SubMenuWrapper -> com.actionbarsherlock.internal.view.menu.SubMenuWrapper:
    android.view.SubMenu mNativeSubMenu -> mNativeSubMenu
    com.actionbarsherlock.view.MenuItem mItem -> mItem
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
com.actionbarsherlock.internal.widget.AbsActionBarView -> com.actionbarsherlock.internal.widget.AbsActionBarView:
    com.actionbarsherlock.internal.view.menu.ActionMenuView mMenuView -> mMenuView
    com.actionbarsherlock.internal.view.menu.ActionMenuPresenter mActionMenuPresenter -> mActionMenuPresenter
    com.actionbarsherlock.internal.widget.ActionBarContainer mSplitView -> mSplitView
    boolean mSplitActionBar -> mSplitActionBar
    boolean mSplitWhenNarrow -> mSplitWhenNarrow
    int mContentHeight -> mContentHeight
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> mVisibilityAnim
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.view.animation.Interpolator sAlphaInterpolator -> sAlphaInterpolator
    int FADE_DURATION -> FADE_DURATION
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setSplitWhenNarrow(boolean) -> setSplitWhenNarrow
    void setContentHeight(int) -> setContentHeight
    int getContentHeight() -> getContentHeight
    void setSplitView(com.actionbarsherlock.internal.widget.ActionBarContainer) -> setSplitView
    int getAnimatedVisibility() -> getAnimatedVisibility
    void animateToVisibility(int) -> animateToVisibility
    void setVisibility(int) -> setVisibility
    boolean showOverflowMenu() -> showOverflowMenu
    void postShowOverflowMenu() -> postShowOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    boolean isOverflowReserved() -> isOverflowReserved
    void dismissPopupMenus() -> dismissPopupMenus
    int measureChildView(android.view.View,int,int,int) -> measureChildView
    int positionChild(android.view.View,int,int,int) -> positionChild
    int positionChildInverse(android.view.View,int,int,int) -> positionChildInverse
com.actionbarsherlock.internal.widget.AbsActionBarView$1 -> com.actionbarsherlock.internal.widget.AbsActionBarView$1:
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener:
    boolean mCanceled -> mCanceled
    int mFinalVisibility -> mFinalVisibility
    com.actionbarsherlock.internal.widget.AbsActionBarView this$0 -> this$0
    com.actionbarsherlock.internal.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(int) -> withFinalVisibility
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.widget.ActionBarContainer -> com.actionbarsherlock.internal.widget.ActionBarContainer:
    boolean mIsTransitioning -> mIsTransitioning
    android.view.View mTabContainer -> mTabContainer
    com.actionbarsherlock.internal.widget.ActionBarView mActionBarView -> mActionBarView
    android.graphics.drawable.Drawable mBackground -> mBackground
    android.graphics.drawable.Drawable mStackedBackground -> mStackedBackground
    android.graphics.drawable.Drawable mSplitBackground -> mSplitBackground
    boolean mIsSplit -> mIsSplit
    boolean mIsStacked -> mIsStacked
    void onFinishInflate() -> onFinishInflate
    void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    void setTransitioning(boolean) -> setTransitioning
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    void setTabContainer(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setTabContainer
    android.view.View getTabContainer() -> getTabContainer
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarContextView -> com.actionbarsherlock.internal.widget.ActionBarContextView:
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    com.actionbarsherlock.internal.nineoldandroids.widget.NineLinearLayout mClose -> mClose
    android.view.View mCustomView -> mCustomView
    android.widget.LinearLayout mTitleLayout -> mTitleLayout
    android.widget.TextView mTitleView -> mTitleView
    android.widget.TextView mSubtitleView -> mSubtitleView
    int mTitleStyleRes -> mTitleStyleRes
    int mSubtitleStyleRes -> mSubtitleStyleRes
    android.graphics.drawable.Drawable mSplitBackground -> mSplitBackground
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mCurrentAnimation -> mCurrentAnimation
    boolean mAnimateInOnLayout -> mAnimateInOnLayout
    int mAnimationMode -> mAnimationMode
    int ANIMATE_IDLE -> ANIMATE_IDLE
    int ANIMATE_IN -> ANIMATE_IN
    int ANIMATE_OUT -> ANIMATE_OUT
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setSplitActionBar(boolean) -> setSplitActionBar
    void setContentHeight(int) -> setContentHeight
    void setCustomView(android.view.View) -> setCustomView
    void setTitle(java.lang.CharSequence) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void initTitle() -> initTitle
    void initForMode(com.actionbarsherlock.view.ActionMode) -> initForMode
    void closeMode() -> closeMode
    void finishAnimation() -> finishAnimation
    void killMode() -> killMode
    boolean showOverflowMenu() -> showOverflowMenu
    boolean hideOverflowMenu() -> hideOverflowMenu
    boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    void onMeasure(int,int) -> onMeasure
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeInAnimation() -> makeInAnimation
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator makeOutAnimation() -> makeOutAnimation
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
com.actionbarsherlock.internal.widget.ActionBarContextView$1 -> com.actionbarsherlock.internal.widget.ActionBarContextView$1:
    com.actionbarsherlock.internal.widget.ActionBarContextView this$0 -> this$0
    com.actionbarsherlock.view.ActionMode val$mode -> val$mode
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView -> com.actionbarsherlock.internal.widget.ActionBarView:
    java.lang.String TAG -> TAG
    int DISPLAY_DEFAULT -> DISPLAY_DEFAULT
    int DISPLAY_RELAYOUT_MASK -> DISPLAY_RELAYOUT_MASK
    int DEFAULT_CUSTOM_GRAVITY -> DEFAULT_CUSTOM_GRAVITY
    int mNavigationMode -> mNavigationMode
    int mDisplayOptions -> mDisplayOptions
    java.lang.CharSequence mTitle -> mTitle
    java.lang.CharSequence mSubtitle -> mSubtitle
    android.graphics.drawable.Drawable mIcon -> mIcon
    android.graphics.drawable.Drawable mLogo -> mLogo
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mHomeLayout -> mHomeLayout
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView mExpandedHomeLayout -> mExpandedHomeLayout
    android.widget.LinearLayout mTitleLayout -> mTitleLayout
    android.widget.TextView mTitleView -> mTitleView
    android.widget.TextView mSubtitleView -> mSubtitleView
    android.view.View mTitleUpView -> mTitleUpView
    com.actionbarsherlock.internal.widget.IcsSpinner mSpinner -> mSpinner
    com.actionbarsherlock.internal.widget.IcsLinearLayout mListNavLayout -> mListNavLayout
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mTabScrollView -> mTabScrollView
    android.view.View mCustomNavView -> mCustomNavView
    com.actionbarsherlock.internal.widget.IcsProgressBar mProgressView -> mProgressView
    com.actionbarsherlock.internal.widget.IcsProgressBar mIndeterminateProgressView -> mIndeterminateProgressView
    int mProgressBarPadding -> mProgressBarPadding
    int mItemPadding -> mItemPadding
    int mTitleStyleRes -> mTitleStyleRes
    int mSubtitleStyleRes -> mSubtitleStyleRes
    int mProgressStyle -> mProgressStyle
    int mIndeterminateProgressStyle -> mIndeterminateProgressStyle
    boolean mUserTitle -> mUserTitle
    boolean mIncludeTabs -> mIncludeTabs
    boolean mIsCollapsable -> mIsCollapsable
    boolean mIsCollapsed -> mIsCollapsed
    com.actionbarsherlock.internal.view.menu.MenuBuilder mOptionsMenu -> mOptionsMenu
    com.actionbarsherlock.internal.widget.ActionBarContextView mContextView -> mContextView
    com.actionbarsherlock.internal.view.menu.ActionMenuItem mLogoNavItem -> mLogoNavItem
    android.widget.SpinnerAdapter mSpinnerAdapter -> mSpinnerAdapter
    com.actionbarsherlock.app.ActionBar$OnNavigationListener mCallback -> mCallback
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter mExpandedMenuPresenter -> mExpandedMenuPresenter
    android.view.View mExpandedActionView -> mExpandedActionView
    com.actionbarsherlock.view.Window$Callback mWindowCallback -> mWindowCallback
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mNavItemSelectedListener -> mNavItemSelectedListener
    android.view.View$OnClickListener mExpandedActionViewUpListener -> mExpandedActionViewUpListener
    android.view.View$OnClickListener mUpClickListener -> mUpClickListener
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void setWindowCallback(com.actionbarsherlock.view.Window$Callback) -> setWindowCallback
    void onDetachedFromWindow() -> onDetachedFromWindow
    boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    void initProgress() -> initProgress
    void initIndeterminateProgress() -> initIndeterminateProgress
    void setSplitActionBar(boolean) -> setSplitActionBar
    boolean isSplitActionBar() -> isSplitActionBar
    boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    void setEmbeddedTabView(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    void setCallback(com.actionbarsherlock.app.ActionBar$OnNavigationListener) -> setCallback
    void setMenu(com.actionbarsherlock.view.Menu,com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setMenu
    void configPresenters(com.actionbarsherlock.internal.view.menu.MenuBuilder) -> configPresenters
    boolean hasExpandedActionView() -> hasExpandedActionView
    void collapseActionView() -> collapseActionView
    void setCustomNavigationView(android.view.View) -> setCustomNavigationView
    java.lang.CharSequence getTitle() -> getTitle
    void setTitle(java.lang.CharSequence) -> setTitle
    void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    void setTitleImpl(java.lang.CharSequence) -> setTitleImpl
    java.lang.CharSequence getSubtitle() -> getSubtitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    void setDisplayOptions(int) -> setDisplayOptions
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    void setIcon(int) -> setIcon
    void setLogo(android.graphics.drawable.Drawable) -> setLogo
    void setLogo(int) -> setLogo
    void setNavigationMode(int) -> setNavigationMode
    void setDropdownAdapter(android.widget.SpinnerAdapter) -> setDropdownAdapter
    android.widget.SpinnerAdapter getDropdownAdapter() -> getDropdownAdapter
    void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    android.view.View getCustomNavigationView() -> getCustomNavigationView
    int getNavigationMode() -> getNavigationMode
    int getDisplayOptions() -> getDisplayOptions
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void onFinishInflate() -> onFinishInflate
    void initTitle() -> initTitle
    void setContextView(com.actionbarsherlock.internal.widget.ActionBarContextView) -> setContextView
    void setCollapsable(boolean) -> setCollapsable
    boolean isCollapsed() -> isCollapsed
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    com.actionbarsherlock.app.ActionBar$OnNavigationListener access$0(com.actionbarsherlock.internal.widget.ActionBarView) -> access$0
    com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter access$1(com.actionbarsherlock.internal.widget.ActionBarView) -> access$1
    com.actionbarsherlock.internal.view.menu.ActionMenuItem access$2(com.actionbarsherlock.internal.widget.ActionBarView) -> access$2
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$3(com.actionbarsherlock.internal.widget.ActionBarView) -> access$3
    android.graphics.drawable.Drawable access$4(com.actionbarsherlock.internal.widget.ActionBarView) -> access$4
    com.actionbarsherlock.internal.widget.ActionBarView$HomeView access$5(com.actionbarsherlock.internal.widget.ActionBarView) -> access$5
    android.widget.LinearLayout access$6(com.actionbarsherlock.internal.widget.ActionBarView) -> access$6
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView access$7(com.actionbarsherlock.internal.widget.ActionBarView) -> access$7
    com.actionbarsherlock.internal.widget.IcsSpinner access$8(com.actionbarsherlock.internal.widget.ActionBarView) -> access$8
    android.view.View access$9(com.actionbarsherlock.internal.widget.ActionBarView) -> access$9
    int access$10(com.actionbarsherlock.internal.widget.ActionBarView) -> access$10
    void access$11(com.actionbarsherlock.internal.widget.ActionBarView) -> access$11
    int access$12(com.actionbarsherlock.internal.widget.ActionBarView) -> access$12
com.actionbarsherlock.internal.widget.ActionBarView$1 -> com.actionbarsherlock.internal.widget.ActionBarView$1:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.ActionBarView$2 -> com.actionbarsherlock.internal.widget.ActionBarView$2:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$3 -> com.actionbarsherlock.internal.widget.ActionBarView$3:
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter -> com.actionbarsherlock.internal.widget.ActionBarView$ExpandedActionViewMenuPresenter:
    com.actionbarsherlock.internal.view.menu.MenuBuilder mMenu -> mMenu
    com.actionbarsherlock.internal.view.menu.MenuItemImpl mCurrentExpandedItem -> mCurrentExpandedItem
    com.actionbarsherlock.internal.widget.ActionBarView this$0 -> this$0
    void initForMenu(android.content.Context,com.actionbarsherlock.internal.view.menu.MenuBuilder) -> initForMenu
    com.actionbarsherlock.internal.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    void updateMenuView(boolean) -> updateMenuView
    void setCallback(com.actionbarsherlock.internal.view.menu.MenuPresenter$Callback) -> setCallback
    boolean onSubMenuSelected(com.actionbarsherlock.internal.view.menu.SubMenuBuilder) -> onSubMenuSelected
    void onCloseMenu(com.actionbarsherlock.internal.view.menu.MenuBuilder,boolean) -> onCloseMenu
    boolean flagActionItems() -> flagActionItems
    boolean expandItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> expandItemActionView
    boolean collapseItemActionView(com.actionbarsherlock.internal.view.menu.MenuBuilder,com.actionbarsherlock.internal.view.menu.MenuItemImpl) -> collapseItemActionView
    int getId() -> getId
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.actionbarsherlock.internal.widget.ActionBarView$HomeView -> com.actionbarsherlock.internal.widget.ActionBarView$HomeView:
    android.view.View mUpView -> mUpView
    android.widget.ImageView mIconView -> mIconView
    int mUpWidth -> mUpWidth
    void setUp(boolean) -> setUp
    void setIcon(android.graphics.drawable.Drawable) -> setIcon
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    void onFinishInflate() -> onFinishInflate
    int getLeftOffset() -> getLeftOffset
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
com.actionbarsherlock.internal.widget.ActionBarView$SavedState -> com.actionbarsherlock.internal.widget.ActionBarView$SavedState:
    int expandedMenuItemId -> expandedMenuItemId
    boolean isOverflowOpen -> isOverflowOpen
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1 -> com.actionbarsherlock.internal.widget.ActionBarView$SavedState$1:
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.widget.ActionBarView$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.CapitalizingButton -> com.actionbarsherlock.internal.widget.CapitalizingButton:
    boolean SANS_ICE_CREAM -> SANS_ICE_CREAM
    boolean IS_GINGERBREAD -> IS_GINGERBREAD
    int[] R_styleable_Button -> R_styleable_Button
    int R_styleable_Button_textAppearance -> R_styleable_Button_textAppearance
    int[] R_styleable_TextAppearance -> R_styleable_TextAppearance
    int R_styleable_TextAppearance_textAllCaps -> R_styleable_TextAppearance_textAllCaps
    boolean mAllCaps -> mAllCaps
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CapitalizingTextView -> com.actionbarsherlock.internal.widget.CapitalizingTextView:
    boolean SANS_ICE_CREAM -> SANS_ICE_CREAM
    boolean IS_GINGERBREAD -> IS_GINGERBREAD
    int[] R_styleable_TextView -> R_styleable_TextView
    int R_styleable_TextView_textAllCaps -> R_styleable_TextView_textAllCaps
    boolean mAllCaps -> mAllCaps
    void setTextCompat(java.lang.CharSequence) -> setTextCompat
com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper -> com.actionbarsherlock.internal.widget.CollapsibleActionViewWrapper:
    com.actionbarsherlock.view.CollapsibleActionView child -> child
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
    android.view.View unwrap() -> unwrap
com.actionbarsherlock.internal.widget.IcsAbsSpinner -> com.actionbarsherlock.internal.widget.IcsAbsSpinner:
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    android.widget.SpinnerAdapter mAdapter -> mAdapter
    int mHeightMeasureSpec -> mHeightMeasureSpec
    int mWidthMeasureSpec -> mWidthMeasureSpec
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    int mSelectionLeftPadding -> mSelectionLeftPadding
    int mSelectionTopPadding -> mSelectionTopPadding
    int mSelectionRightPadding -> mSelectionRightPadding
    int mSelectionBottomPadding -> mSelectionBottomPadding
    android.graphics.Rect mSpinnerPadding -> mSpinnerPadding
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin mRecycler -> mRecycler
    android.database.DataSetObserver mDataSetObserver -> mDataSetObserver
    android.graphics.Rect mTouchFrame -> mTouchFrame
    void initAbsSpinner() -> initAbsSpinner
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    void resetList() -> resetList
    void onMeasure(int,int) -> onMeasure
    int getChildHeight(android.view.View) -> getChildHeight
    int getChildWidth(android.view.View) -> getChildWidth
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    void recycleAllViews() -> recycleAllViews
    void setSelection(int,boolean) -> setSelection
    void setSelection(int) -> setSelection
    void setSelectionInt(int,boolean) -> setSelectionInt
    void layout(int,boolean) -> layout
    android.view.View getSelectedView() -> getSelectedView
    void requestLayout() -> requestLayout
    android.widget.SpinnerAdapter getAdapter() -> getAdapter
    int getCount() -> getCount
    int pointToPosition(int,int) -> pointToPosition
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void setAdapter(android.widget.Adapter) -> setAdapter
    android.widget.Adapter getAdapter() -> getAdapter
    void access$2(com.actionbarsherlock.internal.widget.IcsAbsSpinner,android.view.View,boolean) -> access$2
com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$RecycleBin:
    android.util.SparseArray mScrapHeap -> mScrapHeap
    com.actionbarsherlock.internal.widget.IcsAbsSpinner this$0 -> this$0
    void put(int,android.view.View) -> put
    android.view.View get(int) -> get
    void clear() -> clear
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState:
    long selectedId -> selectedId
    int position -> position
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1 -> com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState$1:
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.widget.IcsAbsSpinner$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsAdapterView -> com.actionbarsherlock.internal.widget.IcsAdapterView:
    int ITEM_VIEW_TYPE_IGNORE -> ITEM_VIEW_TYPE_IGNORE
    int ITEM_VIEW_TYPE_HEADER_OR_FOOTER -> ITEM_VIEW_TYPE_HEADER_OR_FOOTER
    int mFirstPosition -> mFirstPosition
    int mSpecificTop -> mSpecificTop
    int mSyncPosition -> mSyncPosition
    long mSyncRowId -> mSyncRowId
    long mSyncHeight -> mSyncHeight
    boolean mNeedSync -> mNeedSync
    int mSyncMode -> mSyncMode
    int mLayoutHeight -> mLayoutHeight
    int SYNC_SELECTED_POSITION -> SYNC_SELECTED_POSITION
    int SYNC_FIRST_POSITION -> SYNC_FIRST_POSITION
    int SYNC_MAX_DURATION_MILLIS -> SYNC_MAX_DURATION_MILLIS
    boolean mInLayout -> mInLayout
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener mOnItemLongClickListener -> mOnItemLongClickListener
    boolean mDataChanged -> mDataChanged
    int mNextSelectedPosition -> mNextSelectedPosition
    long mNextSelectedRowId -> mNextSelectedRowId
    int mSelectedPosition -> mSelectedPosition
    long mSelectedRowId -> mSelectedRowId
    android.view.View mEmptyView -> mEmptyView
    int mItemCount -> mItemCount
    int mOldItemCount -> mOldItemCount
    int INVALID_POSITION -> INVALID_POSITION
    long INVALID_ROW_ID -> INVALID_ROW_ID
    int mOldSelectedPosition -> mOldSelectedPosition
    long mOldSelectedRowId -> mOldSelectedRowId
    boolean mDesiredFocusableState -> mDesiredFocusableState
    boolean mDesiredFocusableInTouchModeState -> mDesiredFocusableInTouchModeState
    com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier mSelectionNotifier -> mSelectionNotifier
    boolean mBlockLayoutRequests -> mBlockLayoutRequests
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    android.widget.AdapterView$OnItemClickListener getOnItemClickListener() -> getOnItemClickListener
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void setOnItemLongClickListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener getOnItemLongClickListener() -> getOnItemLongClickListener
    void setOnItemSelectedListener(com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener getOnItemSelectedListener() -> getOnItemSelectedListener
    android.widget.Adapter getAdapter() -> getAdapter
    void setAdapter(android.widget.Adapter) -> setAdapter
    void addView(android.view.View) -> addView
    void addView(android.view.View,int) -> addView
    void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    void removeViewAt(int) -> removeViewAt
    void removeAllViews() -> removeAllViews
    void onLayout(boolean,int,int,int,int) -> onLayout
    int getSelectedItemPosition() -> getSelectedItemPosition
    long getSelectedItemId() -> getSelectedItemId
    android.view.View getSelectedView() -> getSelectedView
    java.lang.Object getSelectedItem() -> getSelectedItem
    int getCount() -> getCount
    int getPositionForView(android.view.View) -> getPositionForView
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setSelection(int) -> setSelection
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    boolean isInFilterMode() -> isInFilterMode
    void setFocusable(boolean) -> setFocusable
    void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    void checkFocus() -> checkFocus
    void updateEmptyStatus(boolean) -> updateEmptyStatus
    java.lang.Object getItemAtPosition(int) -> getItemAtPosition
    long getItemIdAtPosition(int) -> getItemIdAtPosition
    void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void selectionChanged() -> selectionChanged
    void fireOnSelected() -> fireOnSelected
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    boolean onRequestSendAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    boolean isScrollableForAccessibility() -> isScrollableForAccessibility
    boolean canAnimate() -> canAnimate
    void handleDataChanged() -> handleDataChanged
    void checkSelectionChanged() -> checkSelectionChanged
    int findSyncPosition() -> findSyncPosition
    int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    void setSelectedPositionInt(int) -> setSelectedPositionInt
    void setNextSelectedPositionInt(int) -> setNextSelectedPositionInt
    void rememberSyncState() -> rememberSyncState
    void access$0(com.actionbarsherlock.internal.widget.IcsAdapterView,android.os.Parcelable) -> access$0
    android.os.Parcelable access$1(com.actionbarsherlock.internal.widget.IcsAdapterView) -> access$1
    void access$2(com.actionbarsherlock.internal.widget.IcsAdapterView) -> access$2
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterContextMenuInfo -> com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterContextMenuInfo:
    android.view.View targetView -> targetView
    int position -> position
    long id -> id
com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver -> com.actionbarsherlock.internal.widget.IcsAdapterView$AdapterDataSetObserver:
    android.os.Parcelable mInstanceState -> mInstanceState
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
    void clearSavedState() -> clearSavedState
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener -> com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemLongClickListener:
    boolean onItemLongClick(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemLongClick
com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener -> com.actionbarsherlock.internal.widget.IcsAdapterView$OnItemSelectedListener:
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier -> com.actionbarsherlock.internal.widget.IcsAdapterView$SelectionNotifier:
    com.actionbarsherlock.internal.widget.IcsAdapterView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsColorDrawable -> com.actionbarsherlock.internal.widget.IcsColorDrawable:
    int color -> color
    android.graphics.Paint paint -> paint
    void draw(android.graphics.Canvas) -> draw
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    int getOpacity() -> getOpacity
com.actionbarsherlock.internal.widget.IcsLinearLayout -> com.actionbarsherlock.internal.widget.IcsLinearLayout:
    int[] R_styleable_LinearLayout -> R_styleable_LinearLayout
    int LinearLayout_divider -> LinearLayout_divider
    int LinearLayout_showDividers -> LinearLayout_showDividers
    int LinearLayout_dividerPadding -> LinearLayout_dividerPadding
    int SHOW_DIVIDER_NONE -> SHOW_DIVIDER_NONE
    int SHOW_DIVIDER_BEGINNING -> SHOW_DIVIDER_BEGINNING
    int SHOW_DIVIDER_MIDDLE -> SHOW_DIVIDER_MIDDLE
    int SHOW_DIVIDER_END -> SHOW_DIVIDER_END
    android.graphics.drawable.Drawable mDivider -> mDivider
    int mDividerWidth -> mDividerWidth
    int mDividerHeight -> mDividerHeight
    int mShowDividers -> mShowDividers
    int mDividerPadding -> mDividerPadding
    void setShowDividers(int) -> setShowDividers
    int getShowDividers() -> getShowDividers
    void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    void setDividerPadding(int) -> setDividerPadding
    int getDividerPadding() -> getDividerPadding
    int getDividerWidth() -> getDividerWidth
    void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    void onDraw(android.graphics.Canvas) -> onDraw
    void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
com.actionbarsherlock.internal.widget.IcsListPopupWindow -> com.actionbarsherlock.internal.widget.IcsListPopupWindow:
    int EXPAND_LIST_TIMEOUT -> EXPAND_LIST_TIMEOUT
    android.content.Context mContext -> mContext
    com.actionbarsherlock.internal.widget.PopupWindowCompat mPopup -> mPopup
    android.widget.ListAdapter mAdapter -> mAdapter
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView mDropDownList -> mDropDownList
    int mDropDownHeight -> mDropDownHeight
    int mDropDownWidth -> mDropDownWidth
    int mDropDownHorizontalOffset -> mDropDownHorizontalOffset
    int mDropDownVerticalOffset -> mDropDownVerticalOffset
    boolean mDropDownVerticalOffsetSet -> mDropDownVerticalOffsetSet
    int mListItemExpandMaximum -> mListItemExpandMaximum
    android.view.View mPromptView -> mPromptView
    int mPromptPosition -> mPromptPosition
    android.database.DataSetObserver mObserver -> mObserver
    android.view.View mDropDownAnchorView -> mDropDownAnchorView
    android.graphics.drawable.Drawable mDropDownListHighlight -> mDropDownListHighlight
    android.widget.AdapterView$OnItemClickListener mItemClickListener -> mItemClickListener
    android.widget.AdapterView$OnItemSelectedListener mItemSelectedListener -> mItemSelectedListener
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable mResizePopupRunnable -> mResizePopupRunnable
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor mTouchInterceptor -> mTouchInterceptor
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener mScrollListener -> mScrollListener
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider mHideSelector -> mHideSelector
    android.os.Handler mHandler -> mHandler
    android.graphics.Rect mTempRect -> mTempRect
    boolean mModal -> mModal
    int POSITION_PROMPT_ABOVE -> POSITION_PROMPT_ABOVE
    int POSITION_PROMPT_BELOW -> POSITION_PROMPT_BELOW
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPromptPosition(int) -> setPromptPosition
    void setModal(boolean) -> setModal
    void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    void setAnchorView(android.view.View) -> setAnchorView
    void setHorizontalOffset(int) -> setHorizontalOffset
    void setVerticalOffset(int) -> setVerticalOffset
    void setContentWidth(int) -> setContentWidth
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void show() -> show
    void dismiss() -> dismiss
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInputMethodMode(int) -> setInputMethodMode
    void setSelection(int) -> setSelection
    void clearListSelection() -> clearListSelection
    boolean isShowing() -> isShowing
    boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    android.widget.ListView getListView() -> getListView
    int buildDropDown() -> buildDropDown
    int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    int measureHeightOfChildren(int,int,int,int,int) -> measureHeightOfChildren
    void measureScrapChild(android.view.View,int,int) -> measureScrapChild
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$0
    int access$1(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$1
    com.actionbarsherlock.internal.widget.PopupWindowCompat access$2(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$2
    android.os.Handler access$3(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$3
    com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable access$4(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$4
    boolean access$5(com.actionbarsherlock.internal.widget.IcsListPopupWindow) -> access$5
com.actionbarsherlock.internal.widget.IcsListPopupWindow$1 -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$1:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView:
    boolean mListSelectionHidden -> mListSelectionHidden
    boolean mHijackFocus -> mHijackFocus
    boolean isInTouchMode() -> isInTouchMode
    boolean hasWindowFocus() -> hasWindowFocus
    boolean isFocused() -> isFocused
    boolean hasFocus() -> hasFocus
    void access$0(com.actionbarsherlock.internal.widget.IcsListPopupWindow$DropDownListView,boolean) -> access$0
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$ListSelectorHider:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupDataSetObserver:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupScrollListener:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$PopupTouchInterceptor:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable -> com.actionbarsherlock.internal.widget.IcsListPopupWindow$ResizePopupRunnable:
    com.actionbarsherlock.internal.widget.IcsListPopupWindow this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar -> com.actionbarsherlock.internal.widget.IcsProgressBar:
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    int MAX_LEVEL -> MAX_LEVEL
    int ANIMATION_RESOLUTION -> ANIMATION_RESOLUTION
    int TIMEOUT_SEND_ACCESSIBILITY_EVENT -> TIMEOUT_SEND_ACCESSIBILITY_EVENT
    int[] ProgressBar -> ProgressBar
    int ProgressBar_maxWidth -> ProgressBar_maxWidth
    int ProgressBar_maxHeight -> ProgressBar_maxHeight
    int ProgressBar_max -> ProgressBar_max
    int ProgressBar_progress -> ProgressBar_progress
    int ProgressBar_secondaryProgress -> ProgressBar_secondaryProgress
    int ProgressBar_indeterminate -> ProgressBar_indeterminate
    int ProgressBar_indeterminateOnly -> ProgressBar_indeterminateOnly
    int ProgressBar_indeterminateDrawable -> ProgressBar_indeterminateDrawable
    int ProgressBar_progressDrawable -> ProgressBar_progressDrawable
    int ProgressBar_indeterminateDuration -> ProgressBar_indeterminateDuration
    int ProgressBar_indeterminateBehavior -> ProgressBar_indeterminateBehavior
    int ProgressBar_minWidth -> ProgressBar_minWidth
    int ProgressBar_minHeight -> ProgressBar_minHeight
    int ProgressBar_interpolator -> ProgressBar_interpolator
    int ProgressBar_animationResolution -> ProgressBar_animationResolution
    int mMinWidth -> mMinWidth
    int mMaxWidth -> mMaxWidth
    int mMinHeight -> mMinHeight
    int mMaxHeight -> mMaxHeight
    int mProgress -> mProgress
    int mSecondaryProgress -> mSecondaryProgress
    int mMax -> mMax
    int mBehavior -> mBehavior
    int mDuration -> mDuration
    boolean mIndeterminate -> mIndeterminate
    boolean mOnlyIndeterminate -> mOnlyIndeterminate
    android.view.animation.Transformation mTransformation -> mTransformation
    android.view.animation.AlphaAnimation mAnimation -> mAnimation
    android.graphics.drawable.Drawable mIndeterminateDrawable -> mIndeterminateDrawable
    int mIndeterminateRealLeft -> mIndeterminateRealLeft
    int mIndeterminateRealTop -> mIndeterminateRealTop
    android.graphics.drawable.Drawable mProgressDrawable -> mProgressDrawable
    android.graphics.drawable.Drawable mCurrentDrawable -> mCurrentDrawable
    android.graphics.Bitmap mSampleTile -> mSampleTile
    boolean mNoInvalidate -> mNoInvalidate
    android.view.animation.Interpolator mInterpolator -> mInterpolator
    com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable mRefreshProgressRunnable -> mRefreshProgressRunnable
    long mUiThreadId -> mUiThreadId
    boolean mShouldStartAnimationDrawable -> mShouldStartAnimationDrawable
    long mLastDrawTime -> mLastDrawTime
    boolean mInDrawing -> mInDrawing
    int mAnimationResolution -> mAnimationResolution
    android.view.accessibility.AccessibilityManager mAccessibilityManager -> mAccessibilityManager
    com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender mAccessibilityEventSender -> mAccessibilityEventSender
    android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
    void initProgressBar() -> initProgressBar
    boolean isIndeterminate() -> isIndeterminate
    void setIndeterminate(boolean) -> setIndeterminate
    android.graphics.drawable.Drawable getIndeterminateDrawable() -> getIndeterminateDrawable
    void setIndeterminateDrawable(android.graphics.drawable.Drawable) -> setIndeterminateDrawable
    android.graphics.drawable.Drawable getProgressDrawable() -> getProgressDrawable
    void setProgressDrawable(android.graphics.drawable.Drawable) -> setProgressDrawable
    android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    void postInvalidate() -> postInvalidate
    void doRefreshProgress(int,int,boolean,boolean) -> doRefreshProgress
    void onProgressRefresh(float,boolean) -> onProgressRefresh
    void refreshProgress(int,int,boolean) -> refreshProgress
    void setProgress(int) -> setProgress
    void setProgress(int,boolean) -> setProgress
    void setSecondaryProgress(int) -> setSecondaryProgress
    int getProgress() -> getProgress
    int getSecondaryProgress() -> getSecondaryProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    void incrementProgressBy(int) -> incrementProgressBy
    void incrementSecondaryProgressBy(int) -> incrementSecondaryProgressBy
    void startAnimation() -> startAnimation
    void stopAnimation() -> stopAnimation
    void setInterpolator(android.content.Context,int) -> setInterpolator
    void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    android.view.animation.Interpolator getInterpolator() -> getInterpolator
    void setVisibility(int) -> setVisibility
    void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void updateDrawableBounds(int,int) -> updateDrawableBounds
    void onDraw(android.graphics.Canvas) -> onDraw
    void onMeasure(int,int) -> onMeasure
    void drawableStateChanged() -> drawableStateChanged
    void updateDrawableState() -> updateDrawableState
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void scheduleAccessibilityEventSender() -> scheduleAccessibilityEventSender
    void access$0(com.actionbarsherlock.internal.widget.IcsProgressBar,int,int,boolean,boolean) -> access$0
    void access$1(com.actionbarsherlock.internal.widget.IcsProgressBar,com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable) -> access$1
com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender -> com.actionbarsherlock.internal.widget.IcsProgressBar$AccessibilityEventSender:
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> this$0
    void run() -> run
com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable -> com.actionbarsherlock.internal.widget.IcsProgressBar$RefreshProgressRunnable:
    int mId -> mId
    int mProgress -> mProgress
    boolean mFromUser -> mFromUser
    com.actionbarsherlock.internal.widget.IcsProgressBar this$0 -> this$0
    void run() -> run
    void setup(int,int,boolean) -> setup
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState -> com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState:
    int progress -> progress
    int secondaryProgress -> secondaryProgress
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1 -> com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState$1:
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    com.actionbarsherlock.internal.widget.IcsProgressBar$SavedState[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.actionbarsherlock.internal.widget.IcsSpinner -> com.actionbarsherlock.internal.widget.IcsSpinner:
    int MAX_ITEMS_MEASURED -> MAX_ITEMS_MEASURED
    int MODE_DROPDOWN -> MODE_DROPDOWN
    com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup mPopup -> mPopup
    com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter mTempAdapter -> mTempAdapter
    int mDropDownWidth -> mDropDownWidth
    int mGravity -> mGravity
    boolean mDisableChildrenWhenDisabled -> mDisableChildrenWhenDisabled
    android.graphics.Rect mTempRect -> mTempRect
    void setEnabled(boolean) -> setEnabled
    void setGravity(int) -> setGravity
    void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    int getBaseline() -> getBaseline
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void layout(int,boolean) -> layout
    android.view.View makeAndAddView(int) -> makeAndAddView
    void setUpChild(android.view.View) -> setUpChild
    boolean performClick() -> performClick
    void onClick(android.content.DialogInterface,int) -> onClick
    void setPrompt(java.lang.CharSequence) -> setPrompt
    void setPromptId(int) -> setPromptId
    java.lang.CharSequence getPrompt() -> getPrompt
    int measureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> measureContentWidth
    android.graphics.Rect access$0(com.actionbarsherlock.internal.widget.IcsSpinner) -> access$0
com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter -> com.actionbarsherlock.internal.widget.IcsSpinner$DropDownAdapter:
    android.widget.SpinnerAdapter mAdapter -> mAdapter
    android.widget.ListAdapter mListAdapter -> mListAdapter
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    boolean hasStableIds() -> hasStableIds
    void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup -> com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup:
    java.lang.CharSequence mHintText -> mHintText
    android.widget.ListAdapter mAdapter -> mAdapter
    com.actionbarsherlock.internal.widget.IcsSpinner this$0 -> this$0
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    java.lang.CharSequence getHintText() -> getHintText
    void setPromptText(java.lang.CharSequence) -> setPromptText
    void show() -> show
    com.actionbarsherlock.internal.widget.IcsSpinner access$0(com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup) -> access$0
com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1 -> com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup$1:
    com.actionbarsherlock.internal.widget.IcsSpinner$DropdownPopup this$1 -> this$1
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup -> com.actionbarsherlock.internal.widget.IcsSpinner$SpinnerPopup:
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void show() -> show
    void dismiss() -> dismiss
    boolean isShowing() -> isShowing
    void setPromptText(java.lang.CharSequence) -> setPromptText
    java.lang.CharSequence getHintText() -> getHintText
com.actionbarsherlock.internal.widget.IcsToast -> com.actionbarsherlock.internal.widget.IcsToast:
    int LENGTH_LONG -> LENGTH_LONG
    int LENGTH_SHORT -> LENGTH_SHORT
    java.lang.String TAG -> TAG
    android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int) -> makeText
    android.widget.Toast makeText(android.content.Context,int,int) -> makeText
    void setText(java.lang.CharSequence) -> setText
com.actionbarsherlock.internal.widget.IcsView -> com.actionbarsherlock.internal.widget.IcsView:
    int getMeasuredStateInt(android.view.View) -> getMeasuredStateInt
com.actionbarsherlock.internal.widget.PopupWindowCompat -> com.actionbarsherlock.internal.widget.PopupWindowCompat:
    java.lang.reflect.Field superListenerField -> superListenerField
    android.view.ViewTreeObserver$OnScrollChangedListener NOP -> NOP
    android.view.ViewTreeObserver$OnScrollChangedListener mSuperScrollListener -> mSuperScrollListener
    android.view.ViewTreeObserver mViewTreeObserver -> mViewTreeObserver
    void init() -> init
    void unregisterListener() -> unregisterListener
    void registerListener(android.view.View) -> registerListener
    void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    void update(android.view.View,int,int,int,int) -> update
    void update(android.view.View,int,int) -> update
    void showAtLocation(android.view.View,int,int,int) -> showAtLocation
    void dismiss() -> dismiss
com.actionbarsherlock.internal.widget.PopupWindowCompat$1 -> com.actionbarsherlock.internal.widget.PopupWindowCompat$1:
    void onScrollChanged() -> onScrollChanged
com.actionbarsherlock.internal.widget.ScrollingTabContainerView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView:
    java.lang.Runnable mTabSelector -> mTabSelector
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener mTabClickListener -> mTabClickListener
    com.actionbarsherlock.internal.widget.IcsLinearLayout mTabLayout -> mTabLayout
    com.actionbarsherlock.internal.widget.IcsSpinner mTabSpinner -> mTabSpinner
    boolean mAllowCollapse -> mAllowCollapse
    android.view.LayoutInflater mInflater -> mInflater
    int mMaxTabWidth -> mMaxTabWidth
    int mContentHeight -> mContentHeight
    int mSelectedTabIndex -> mSelectedTabIndex
    com.actionbarsherlock.internal.nineoldandroids.animation.Animator mVisibilityAnim -> mVisibilityAnim
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener mVisAnimListener -> mVisAnimListener
    android.view.animation.Interpolator sAlphaInterpolator -> sAlphaInterpolator
    int FADE_DURATION -> FADE_DURATION
    void onMeasure(int,int) -> onMeasure
    boolean isCollapsed() -> isCollapsed
    void setAllowCollapse(boolean) -> setAllowCollapse
    void performCollapse() -> performCollapse
    boolean performExpand() -> performExpand
    void setTabSelected(int) -> setTabSelected
    void setContentHeight(int) -> setContentHeight
    com.actionbarsherlock.internal.widget.IcsLinearLayout createTabLayout() -> createTabLayout
    com.actionbarsherlock.internal.widget.IcsSpinner createSpinner() -> createSpinner
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void animateToVisibility(int) -> animateToVisibility
    void animateToTab(int) -> animateToTab
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView createTabView(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> createTabView
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,boolean) -> addTab
    void addTab(com.actionbarsherlock.app.ActionBar$Tab,int,boolean) -> addTab
    void updateTab(int) -> updateTab
    void removeTabAt(int) -> removeTabAt
    void removeAllTabs() -> removeAllTabs
    void onItemSelected(com.actionbarsherlock.internal.widget.IcsAdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(com.actionbarsherlock.internal.widget.IcsAdapterView) -> onNothingSelected
    com.actionbarsherlock.internal.widget.IcsLinearLayout access$0(com.actionbarsherlock.internal.widget.ScrollingTabContainerView) -> access$0
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView access$1(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> access$1
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1 -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$1:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    android.view.View val$tabView -> val$tabView
    void run() -> run
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabAdapter:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabClickListener:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$TabView:
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView mParent -> mParent
    com.actionbarsherlock.app.ActionBar$Tab mTab -> mTab
    com.actionbarsherlock.internal.widget.CapitalizingTextView mTextView -> mTextView
    android.widget.ImageView mIconView -> mIconView
    android.view.View mCustomView -> mCustomView
    void init(com.actionbarsherlock.internal.widget.ScrollingTabContainerView,com.actionbarsherlock.app.ActionBar$Tab,boolean) -> init
    void bindTab(com.actionbarsherlock.app.ActionBar$Tab) -> bindTab
    void onMeasure(int,int) -> onMeasure
    void update() -> update
    com.actionbarsherlock.app.ActionBar$Tab getTab() -> getTab
com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener -> com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener:
    boolean mCanceled -> mCanceled
    int mFinalVisibility -> mFinalVisibility
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView this$0 -> this$0
    com.actionbarsherlock.internal.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(int) -> withFinalVisibility
    void onAnimationStart(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationStart
    void onAnimationEnd(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationEnd
    void onAnimationCancel(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationCancel
    void onAnimationRepeat(com.actionbarsherlock.internal.nineoldandroids.animation.Animator) -> onAnimationRepeat
com.actionbarsherlock.internal.widget.TabsLinearLayout -> com.actionbarsherlock.internal.widget.TabsLinearLayout:
    int[] R_styleable_LinearLayout -> R_styleable_LinearLayout
    int LinearLayout_measureWithLargestChild -> LinearLayout_measureWithLargestChild
    boolean mUseLargestChild -> mUseLargestChild
    boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    void onMeasure(int,int) -> onMeasure
    void useLargestChildHorizontal() -> useLargestChildHorizontal
com.actionbarsherlock.view.ActionMode -> com.actionbarsherlock.view.ActionMode:
    java.lang.Object mTag -> mTag
    void setTag(java.lang.Object) -> setTag
    java.lang.Object getTag() -> getTag
    void setTitle(java.lang.CharSequence) -> setTitle
    void setTitle(int) -> setTitle
    void setSubtitle(java.lang.CharSequence) -> setSubtitle
    void setSubtitle(int) -> setSubtitle
    void setCustomView(android.view.View) -> setCustomView
    void invalidate() -> invalidate
    void finish() -> finish
    com.actionbarsherlock.view.Menu getMenu() -> getMenu
    java.lang.CharSequence getTitle() -> getTitle
    java.lang.CharSequence getSubtitle() -> getSubtitle
    android.view.View getCustomView() -> getCustomView
    com.actionbarsherlock.view.MenuInflater getMenuInflater() -> getMenuInflater
    boolean isUiFocusable() -> isUiFocusable
com.actionbarsherlock.view.ActionMode$Callback -> com.actionbarsherlock.view.ActionMode$Callback:
    boolean onCreateActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onCreateActionMode
    boolean onPrepareActionMode(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.Menu) -> onPrepareActionMode
    boolean onActionItemClicked(com.actionbarsherlock.view.ActionMode,com.actionbarsherlock.view.MenuItem) -> onActionItemClicked
    void onDestroyActionMode(com.actionbarsherlock.view.ActionMode) -> onDestroyActionMode
com.actionbarsherlock.view.ActionProvider -> com.actionbarsherlock.view.ActionProvider:
    com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener mSubUiVisibilityListener -> mSubUiVisibilityListener
    android.view.View onCreateActionView() -> onCreateActionView
    boolean onPerformDefaultAction() -> onPerformDefaultAction
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu) -> onPrepareSubMenu
    void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
    void setSubUiVisibilityListener(com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener -> com.actionbarsherlock.view.ActionProvider$SubUiVisibilityListener:
    void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
com.actionbarsherlock.view.CollapsibleActionView -> com.actionbarsherlock.view.CollapsibleActionView:
    void onActionViewExpanded() -> onActionViewExpanded
    void onActionViewCollapsed() -> onActionViewCollapsed
com.actionbarsherlock.view.Menu -> com.actionbarsherlock.view.Menu:
    int USER_MASK -> USER_MASK
    int USER_SHIFT -> USER_SHIFT
    int CATEGORY_MASK -> CATEGORY_MASK
    int CATEGORY_SHIFT -> CATEGORY_SHIFT
    int NONE -> NONE
    int FIRST -> FIRST
    int CATEGORY_CONTAINER -> CATEGORY_CONTAINER
    int CATEGORY_SYSTEM -> CATEGORY_SYSTEM
    int CATEGORY_SECONDARY -> CATEGORY_SECONDARY
    int CATEGORY_ALTERNATIVE -> CATEGORY_ALTERNATIVE
    int FLAG_APPEND_TO_GROUP -> FLAG_APPEND_TO_GROUP
    int FLAG_PERFORM_NO_CLOSE -> FLAG_PERFORM_NO_CLOSE
    int FLAG_ALWAYS_PERFORM_CLOSE -> FLAG_ALWAYS_PERFORM_CLOSE
    com.actionbarsherlock.view.MenuItem add(java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    com.actionbarsherlock.view.MenuItem add(int,int,int,int) -> add
    com.actionbarsherlock.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    com.actionbarsherlock.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,com.actionbarsherlock.view.MenuItem[]) -> addIntentOptions
    void removeItem(int) -> removeItem
    void removeGroup(int) -> removeGroup
    void clear() -> clear
    void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    void setGroupVisible(int,boolean) -> setGroupVisible
    void setGroupEnabled(int,boolean) -> setGroupEnabled
    boolean hasVisibleItems() -> hasVisibleItems
    com.actionbarsherlock.view.MenuItem findItem(int) -> findItem
    int size() -> size
    com.actionbarsherlock.view.MenuItem getItem(int) -> getItem
    void close() -> close
    boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    boolean performIdentifierAction(int,int) -> performIdentifierAction
    void setQwertyMode(boolean) -> setQwertyMode
com.actionbarsherlock.view.MenuInflater -> com.actionbarsherlock.view.MenuInflater:
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String XML_MENU -> XML_MENU
    java.lang.String XML_GROUP -> XML_GROUP
    java.lang.String XML_ITEM -> XML_ITEM
    int NO_ID -> NO_ID
    java.lang.Class[] ACTION_VIEW_CONSTRUCTOR_SIGNATURE -> ACTION_VIEW_CONSTRUCTOR_SIGNATURE
    java.lang.Class[] ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE -> ACTION_PROVIDER_CONSTRUCTOR_SIGNATURE
    java.lang.Object[] mActionViewConstructorArguments -> mActionViewConstructorArguments
    java.lang.Object[] mActionProviderConstructorArguments -> mActionProviderConstructorArguments
    android.content.Context mContext -> mContext
    java.lang.Object mRealOwner -> mRealOwner
    void inflate(int,com.actionbarsherlock.view.Menu) -> inflate
    void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,com.actionbarsherlock.view.Menu) -> parseMenu
    android.content.Context access$0(com.actionbarsherlock.view.MenuInflater) -> access$0
    java.lang.Class[] access$1() -> access$1
    java.lang.Object[] access$2(com.actionbarsherlock.view.MenuInflater) -> access$2
    java.lang.Object access$3(com.actionbarsherlock.view.MenuInflater) -> access$3
    java.lang.Class[] access$4() -> access$4
    java.lang.Object[] access$5(com.actionbarsherlock.view.MenuInflater) -> access$5
com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener -> com.actionbarsherlock.view.MenuInflater$InflatedOnMenuItemClickListener:
    java.lang.Class[] PARAM_TYPES -> PARAM_TYPES
    java.lang.Object mRealOwner -> mRealOwner
    java.lang.reflect.Method mMethod -> mMethod
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.view.MenuInflater$MenuState -> com.actionbarsherlock.view.MenuInflater$MenuState:
    com.actionbarsherlock.view.Menu menu -> menu
    int groupId -> groupId
    int groupCategory -> groupCategory
    int groupOrder -> groupOrder
    int groupCheckable -> groupCheckable
    boolean groupVisible -> groupVisible
    boolean groupEnabled -> groupEnabled
    boolean itemAdded -> itemAdded
    int itemId -> itemId
    int itemCategoryOrder -> itemCategoryOrder
    java.lang.CharSequence itemTitle -> itemTitle
    java.lang.CharSequence itemTitleCondensed -> itemTitleCondensed
    int itemIconResId -> itemIconResId
    char itemAlphabeticShortcut -> itemAlphabeticShortcut
    char itemNumericShortcut -> itemNumericShortcut
    int itemCheckable -> itemCheckable
    boolean itemChecked -> itemChecked
    boolean itemVisible -> itemVisible
    boolean itemEnabled -> itemEnabled
    int itemShowAsAction -> itemShowAsAction
    int itemActionViewLayout -> itemActionViewLayout
    java.lang.String itemActionViewClassName -> itemActionViewClassName
    java.lang.String itemActionProviderClassName -> itemActionProviderClassName
    java.lang.String itemListenerMethodName -> itemListenerMethodName
    com.actionbarsherlock.view.ActionProvider itemActionProvider -> itemActionProvider
    int defaultGroupId -> defaultGroupId
    int defaultItemId -> defaultItemId
    int defaultItemCategory -> defaultItemCategory
    int defaultItemOrder -> defaultItemOrder
    int defaultItemCheckable -> defaultItemCheckable
    boolean defaultItemChecked -> defaultItemChecked
    boolean defaultItemVisible -> defaultItemVisible
    boolean defaultItemEnabled -> defaultItemEnabled
    com.actionbarsherlock.view.MenuInflater this$0 -> this$0
    void resetGroup() -> resetGroup
    void readGroup(android.util.AttributeSet) -> readGroup
    void readItem(android.util.AttributeSet) -> readItem
    char getShortcut(java.lang.String) -> getShortcut
    void setItem(com.actionbarsherlock.view.MenuItem) -> setItem
    void addItem() -> addItem
    com.actionbarsherlock.view.SubMenu addSubMenuItem() -> addSubMenuItem
    boolean hasAddedItem() -> hasAddedItem
    java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    com.actionbarsherlock.view.ActionProvider access$0(com.actionbarsherlock.view.MenuInflater$MenuState) -> access$0
com.actionbarsherlock.view.MenuItem -> com.actionbarsherlock.view.MenuItem:
    int SHOW_AS_ACTION_NEVER -> SHOW_AS_ACTION_NEVER
    int SHOW_AS_ACTION_IF_ROOM -> SHOW_AS_ACTION_IF_ROOM
    int SHOW_AS_ACTION_ALWAYS -> SHOW_AS_ACTION_ALWAYS
    int SHOW_AS_ACTION_WITH_TEXT -> SHOW_AS_ACTION_WITH_TEXT
    int SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW -> SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW
    int getItemId() -> getItemId
    int getGroupId() -> getGroupId
    int getOrder() -> getOrder
    com.actionbarsherlock.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    com.actionbarsherlock.view.MenuItem setTitle(int) -> setTitle
    java.lang.CharSequence getTitle() -> getTitle
    com.actionbarsherlock.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    com.actionbarsherlock.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem setIcon(int) -> setIcon
    android.graphics.drawable.Drawable getIcon() -> getIcon
    com.actionbarsherlock.view.MenuItem setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    com.actionbarsherlock.view.MenuItem setShortcut(char,char) -> setShortcut
    com.actionbarsherlock.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    char getNumericShortcut() -> getNumericShortcut
    com.actionbarsherlock.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    char getAlphabeticShortcut() -> getAlphabeticShortcut
    com.actionbarsherlock.view.MenuItem setCheckable(boolean) -> setCheckable
    boolean isCheckable() -> isCheckable
    com.actionbarsherlock.view.MenuItem setChecked(boolean) -> setChecked
    boolean isChecked() -> isChecked
    com.actionbarsherlock.view.MenuItem setVisible(boolean) -> setVisible
    boolean isVisible() -> isVisible
    com.actionbarsherlock.view.MenuItem setEnabled(boolean) -> setEnabled
    boolean isEnabled() -> isEnabled
    boolean hasSubMenu() -> hasSubMenu
    com.actionbarsherlock.view.SubMenu getSubMenu() -> getSubMenu
    com.actionbarsherlock.view.MenuItem setOnMenuItemClickListener(com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    void setShowAsAction(int) -> setShowAsAction
    com.actionbarsherlock.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    com.actionbarsherlock.view.MenuItem setActionView(android.view.View) -> setActionView
    com.actionbarsherlock.view.MenuItem setActionView(int) -> setActionView
    android.view.View getActionView() -> getActionView
    com.actionbarsherlock.view.MenuItem setActionProvider(com.actionbarsherlock.view.ActionProvider) -> setActionProvider
    com.actionbarsherlock.view.ActionProvider getActionProvider() -> getActionProvider
    boolean expandActionView() -> expandActionView
    boolean collapseActionView() -> collapseActionView
    boolean isActionViewExpanded() -> isActionViewExpanded
    com.actionbarsherlock.view.MenuItem setOnActionExpandListener(com.actionbarsherlock.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
com.actionbarsherlock.view.MenuItem$OnActionExpandListener -> com.actionbarsherlock.view.MenuItem$OnActionExpandListener:
    boolean onMenuItemActionExpand(com.actionbarsherlock.view.MenuItem) -> onMenuItemActionExpand
    boolean onMenuItemActionCollapse(com.actionbarsherlock.view.MenuItem) -> onMenuItemActionCollapse
com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener -> com.actionbarsherlock.view.MenuItem$OnMenuItemClickListener:
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.view.SubMenu -> com.actionbarsherlock.view.SubMenu:
    com.actionbarsherlock.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    com.actionbarsherlock.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    com.actionbarsherlock.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    void clearHeader() -> clearHeader
    com.actionbarsherlock.view.SubMenu setIcon(int) -> setIcon
    com.actionbarsherlock.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    com.actionbarsherlock.view.MenuItem getItem() -> getItem
com.actionbarsherlock.view.Window -> com.actionbarsherlock.view.Window:
    long FEATURE_ACTION_BAR -> FEATURE_ACTION_BAR
    long FEATURE_ACTION_BAR_OVERLAY -> FEATURE_ACTION_BAR_OVERLAY
    long FEATURE_ACTION_MODE_OVERLAY -> FEATURE_ACTION_MODE_OVERLAY
    long FEATURE_NO_TITLE -> FEATURE_NO_TITLE
    long FEATURE_PROGRESS -> FEATURE_PROGRESS
    long FEATURE_INDETERMINATE_PROGRESS -> FEATURE_INDETERMINATE_PROGRESS
com.actionbarsherlock.view.Window$Callback -> com.actionbarsherlock.view.Window$Callback:
    boolean onMenuItemSelected(int,com.actionbarsherlock.view.MenuItem) -> onMenuItemSelected
com.actionbarsherlock.widget.ActivityChooserModel -> com.actionbarsherlock.widget.ActivityChooserModel:
    boolean DEBUG -> DEBUG
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String TAG_HISTORICAL_RECORDS -> TAG_HISTORICAL_RECORDS
    java.lang.String TAG_HISTORICAL_RECORD -> TAG_HISTORICAL_RECORD
    java.lang.String ATTRIBUTE_ACTIVITY -> ATTRIBUTE_ACTIVITY
    java.lang.String ATTRIBUTE_TIME -> ATTRIBUTE_TIME
    java.lang.String ATTRIBUTE_WEIGHT -> ATTRIBUTE_WEIGHT
    java.lang.String DEFAULT_HISTORY_FILE_NAME -> DEFAULT_HISTORY_FILE_NAME
    int DEFAULT_HISTORY_MAX_LENGTH -> DEFAULT_HISTORY_MAX_LENGTH
    int DEFAULT_ACTIVITY_INFLATION -> DEFAULT_ACTIVITY_INFLATION
    float DEFAULT_HISTORICAL_RECORD_WEIGHT -> DEFAULT_HISTORICAL_RECORD_WEIGHT
    java.lang.String HISTORY_FILE_EXTENSION -> HISTORY_FILE_EXTENSION
    int INVALID_INDEX -> INVALID_INDEX
    java.lang.Object sRegistryLock -> sRegistryLock
    java.util.Map sDataModelRegistry -> sDataModelRegistry
    java.lang.Object mInstanceLock -> mInstanceLock
    java.util.List mActivites -> mActivites
    java.util.List mHistoricalRecords -> mHistoricalRecords
    android.content.Context mContext -> mContext
    java.lang.String mHistoryFileName -> mHistoryFileName
    android.content.Intent mIntent -> mIntent
    com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter mActivitySorter -> mActivitySorter
    int mHistoryMaxSize -> mHistoryMaxSize
    boolean mCanReadHistoricalData -> mCanReadHistoricalData
    boolean mReadShareHistoryCalled -> mReadShareHistoryCalled
    boolean mHistoricalRecordsChanged -> mHistoricalRecordsChanged
    android.os.Handler mHandler -> mHandler
    com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mActivityChoserModelPolicy -> mActivityChoserModelPolicy
    java.util.concurrent.Executor SERIAL_EXECUTOR -> SERIAL_EXECUTOR
    com.actionbarsherlock.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> get
    void setIntent(android.content.Intent) -> setIntent
    android.content.Intent getIntent() -> getIntent
    int getActivityCount() -> getActivityCount
    android.content.pm.ResolveInfo getActivity(int) -> getActivity
    int getActivityIndex(android.content.pm.ResolveInfo) -> getActivityIndex
    android.content.Intent chooseActivity(int) -> chooseActivity
    void setOnChooseActivityListener(com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener) -> setOnChooseActivityListener
    android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    void setDefaultActivity(int) -> setDefaultActivity
    void readHistoricalData() -> readHistoricalData
    void persistHistoricalData() -> persistHistoricalData
    void setActivitySorter(com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter) -> setActivitySorter
    void sortActivities() -> sortActivities
    void setHistoryMaxSize(int) -> setHistoryMaxSize
    int getHistoryMaxSize() -> getHistoryMaxSize
    int getHistorySize() -> getHistorySize
    boolean addHisoricalRecord(com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord) -> addHisoricalRecord
    void pruneExcessiveHistoricalRecordsLocked() -> pruneExcessiveHistoricalRecordsLocked
    void loadActivitiesLocked() -> loadActivitiesLocked
    android.content.Context access$0(com.actionbarsherlock.widget.ActivityChooserModel) -> access$0
    java.lang.String access$1(com.actionbarsherlock.widget.ActivityChooserModel) -> access$1
    java.lang.Object access$2(com.actionbarsherlock.widget.ActivityChooserModel) -> access$2
    java.util.List access$3(com.actionbarsherlock.widget.ActivityChooserModel) -> access$3
    void access$4(com.actionbarsherlock.widget.ActivityChooserModel,boolean) -> access$4
    android.os.Handler access$5(com.actionbarsherlock.widget.ActivityChooserModel) -> access$5
    void access$6(com.actionbarsherlock.widget.ActivityChooserModel) -> access$6
    void access$7(com.actionbarsherlock.widget.ActivityChooserModel) -> access$7
    java.lang.String access$8() -> access$8
com.actionbarsherlock.widget.ActivityChooserModel$ActivityChooserModelClient -> com.actionbarsherlock.widget.ActivityChooserModel$ActivityChooserModelClient:
    void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setActivityChooserModel
com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo -> com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo:
    android.content.pm.ResolveInfo resolveInfo -> resolveInfo
    float weight -> weight
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    int compareTo(com.actionbarsherlock.widget.ActivityChooserModel$ActivityResolveInfo) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter -> com.actionbarsherlock.widget.ActivityChooserModel$ActivitySorter:
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter -> com.actionbarsherlock.widget.ActivityChooserModel$DefaultSorter:
    float WEIGHT_DECAY_COEFFICIENT -> WEIGHT_DECAY_COEFFICIENT
    java.util.Map mPackageNameToActivityMap -> mPackageNameToActivityMap
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    void sort(android.content.Intent,java.util.List,java.util.List) -> sort
com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord -> com.actionbarsherlock.widget.ActivityChooserModel$HistoricalRecord:
    android.content.ComponentName activity -> activity
    long time -> time
    float weight -> weight
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader -> com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader:
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    void run() -> run
    com.actionbarsherlock.widget.ActivityChooserModel access$1(com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader) -> access$1
com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1 -> com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader$1:
    com.actionbarsherlock.widget.ActivityChooserModel$HistoryLoader this$1 -> this$1
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister -> com.actionbarsherlock.widget.ActivityChooserModel$HistoryPersister:
    com.actionbarsherlock.widget.ActivityChooserModel this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener -> com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener:
    boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
com.actionbarsherlock.widget.ActivityChooserView -> com.actionbarsherlock.widget.ActivityChooserView:
    com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter mAdapter -> mAdapter
    com.actionbarsherlock.widget.ActivityChooserView$Callbacks mCallbacks -> mCallbacks
    com.actionbarsherlock.internal.widget.IcsLinearLayout mActivityChooserContent -> mActivityChooserContent
    android.graphics.drawable.Drawable mActivityChooserContentBackground -> mActivityChooserContentBackground
    android.widget.FrameLayout mExpandActivityOverflowButton -> mExpandActivityOverflowButton
    android.widget.ImageView mExpandActivityOverflowButtonImage -> mExpandActivityOverflowButtonImage
    android.widget.FrameLayout mDefaultActivityButton -> mDefaultActivityButton
    android.widget.ImageView mDefaultActivityButtonImage -> mDefaultActivityButtonImage
    int mListPopupMaxWidth -> mListPopupMaxWidth
    com.actionbarsherlock.view.ActionProvider mProvider -> mProvider
    android.database.DataSetObserver mModelDataSetOberver -> mModelDataSetOberver
    android.view.ViewTreeObserver$OnGlobalLayoutListener mOnGlobalLayoutListener -> mOnGlobalLayoutListener
    com.actionbarsherlock.internal.widget.IcsListPopupWindow mListPopupWindow -> mListPopupWindow
    android.widget.PopupWindow$OnDismissListener mOnDismissListener -> mOnDismissListener
    boolean mIsSelectingDefaultActivity -> mIsSelectingDefaultActivity
    int mInitialActivityCount -> mInitialActivityCount
    boolean mIsAttachedToWindow -> mIsAttachedToWindow
    int mDefaultActionButtonContentDescription -> mDefaultActionButtonContentDescription
    android.content.Context mContext -> mContext
    boolean IS_HONEYCOMB -> IS_HONEYCOMB
    void setActivityChooserModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setActivityChooserModel
    void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    void setProvider(com.actionbarsherlock.view.ActionProvider) -> setProvider
    boolean showPopup() -> showPopup
    void showPopupUnchecked(int) -> showPopupUnchecked
    boolean dismissPopup() -> dismissPopup
    boolean isShowingPopup() -> isShowingPopup
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    com.actionbarsherlock.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    void setInitialActivityCount(int) -> setInitialActivityCount
    void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    com.actionbarsherlock.internal.widget.IcsListPopupWindow getListPopupWindow() -> getListPopupWindow
    void updateAppearance() -> updateAppearance
    com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter access$0(com.actionbarsherlock.widget.ActivityChooserView) -> access$0
    com.actionbarsherlock.internal.widget.IcsListPopupWindow access$1(com.actionbarsherlock.widget.ActivityChooserView) -> access$1
    void access$2(com.actionbarsherlock.widget.ActivityChooserView,int) -> access$2
    boolean access$3(com.actionbarsherlock.widget.ActivityChooserView) -> access$3
    android.content.Context access$4(com.actionbarsherlock.widget.ActivityChooserView) -> access$4
    android.widget.FrameLayout access$5(com.actionbarsherlock.widget.ActivityChooserView) -> access$5
    android.widget.FrameLayout access$6(com.actionbarsherlock.widget.ActivityChooserView) -> access$6
    void access$7(com.actionbarsherlock.widget.ActivityChooserView,boolean) -> access$7
    int access$8(com.actionbarsherlock.widget.ActivityChooserView) -> access$8
    android.widget.PopupWindow$OnDismissListener access$9(com.actionbarsherlock.widget.ActivityChooserView) -> access$9
    android.database.DataSetObserver access$10(com.actionbarsherlock.widget.ActivityChooserView) -> access$10
    boolean access$11() -> access$11
    void access$12(com.actionbarsherlock.widget.ActivityChooserView) -> access$12
com.actionbarsherlock.widget.ActivityChooserView$1 -> com.actionbarsherlock.widget.ActivityChooserView$1:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
com.actionbarsherlock.widget.ActivityChooserView$2 -> com.actionbarsherlock.widget.ActivityChooserView$2:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
com.actionbarsherlock.widget.ActivityChooserView$3 -> com.actionbarsherlock.widget.ActivityChooserView$3:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onChanged() -> onChanged
com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter -> com.actionbarsherlock.widget.ActivityChooserView$ActivityChooserViewAdapter:
    int MAX_ACTIVITY_COUNT_UNLIMITED -> MAX_ACTIVITY_COUNT_UNLIMITED
    int MAX_ACTIVITY_COUNT_DEFAULT -> MAX_ACTIVITY_COUNT_DEFAULT
    int ITEM_VIEW_TYPE_ACTIVITY -> ITEM_VIEW_TYPE_ACTIVITY
    int ITEM_VIEW_TYPE_FOOTER -> ITEM_VIEW_TYPE_FOOTER
    int ITEM_VIEW_TYPE_COUNT -> ITEM_VIEW_TYPE_COUNT
    com.actionbarsherlock.widget.ActivityChooserModel mDataModel -> mDataModel
    int mMaxActivityCount -> mMaxActivityCount
    boolean mShowDefaultActivity -> mShowDefaultActivity
    boolean mHighlightDefaultActivity -> mHighlightDefaultActivity
    boolean mShowFooterView -> mShowFooterView
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void setDataModel(com.actionbarsherlock.widget.ActivityChooserModel) -> setDataModel
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    int measureContentWidth() -> measureContentWidth
    void setMaxActivityCount(int) -> setMaxActivityCount
    android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    void setShowFooterView(boolean) -> setShowFooterView
    int getActivityCount() -> getActivityCount
    int getHistorySize() -> getHistorySize
    int getMaxActivityCount() -> getMaxActivityCount
    com.actionbarsherlock.widget.ActivityChooserModel getDataModel() -> getDataModel
    void setShowDefaultActivity(boolean,boolean) -> setShowDefaultActivity
    boolean getShowDefaultActivity() -> getShowDefaultActivity
com.actionbarsherlock.widget.ActivityChooserView$Callbacks -> com.actionbarsherlock.widget.ActivityChooserView$Callbacks:
    com.actionbarsherlock.widget.ActivityChooserView this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onClick(android.view.View) -> onClick
    boolean onLongClick(android.view.View) -> onLongClick
    void onDismiss() -> onDismiss
    void notifyOnDismissListener() -> notifyOnDismissListener
com.actionbarsherlock.widget.ActivityChooserView$SetActivated -> com.actionbarsherlock.widget.ActivityChooserView$SetActivated:
    void invoke(android.view.View,boolean) -> invoke
com.actionbarsherlock.widget.SearchView -> com.actionbarsherlock.widget.SearchView:
    boolean DBG -> DBG
    java.lang.String LOG_TAG -> LOG_TAG
    java.lang.String IME_OPTION_NO_MICROPHONE -> IME_OPTION_NO_MICROPHONE
    com.actionbarsherlock.widget.SearchView$OnQueryTextListener mOnQueryChangeListener -> mOnQueryChangeListener
    com.actionbarsherlock.widget.SearchView$OnCloseListener mOnCloseListener -> mOnCloseListener
    android.view.View$OnFocusChangeListener mOnQueryTextFocusChangeListener -> mOnQueryTextFocusChangeListener
    com.actionbarsherlock.widget.SearchView$OnSuggestionListener mOnSuggestionListener -> mOnSuggestionListener
    android.view.View$OnClickListener mOnSearchClickListener -> mOnSearchClickListener
    boolean mIconifiedByDefault -> mIconifiedByDefault
    boolean mIconified -> mIconified
    android.support.v4.widget.CursorAdapter mSuggestionsAdapter -> mSuggestionsAdapter
    android.view.View mSearchButton -> mSearchButton
    android.view.View mSubmitButton -> mSubmitButton
    android.view.View mSearchPlate -> mSearchPlate
    android.view.View mSubmitArea -> mSubmitArea
    android.widget.ImageView mCloseButton -> mCloseButton
    android.view.View mSearchEditFrame -> mSearchEditFrame
    android.view.View mVoiceButton -> mVoiceButton
    com.actionbarsherlock.widget.SearchView$SearchAutoComplete mQueryTextView -> mQueryTextView
    android.view.View mDropDownAnchor -> mDropDownAnchor
    android.widget.ImageView mSearchHintIcon -> mSearchHintIcon
    boolean mSubmitButtonEnabled -> mSubmitButtonEnabled
    java.lang.CharSequence mQueryHint -> mQueryHint
    boolean mQueryRefinement -> mQueryRefinement
    boolean mClearingFocus -> mClearingFocus
    int mMaxWidth -> mMaxWidth
    boolean mVoiceButtonEnabled -> mVoiceButtonEnabled
    java.lang.CharSequence mOldQueryText -> mOldQueryText
    java.lang.CharSequence mUserQuery -> mUserQuery
    boolean mExpandedInActionView -> mExpandedInActionView
    int mCollapsedImeOptions -> mCollapsedImeOptions
    android.app.SearchableInfo mSearchable -> mSearchable
    android.os.Bundle mAppSearchData -> mAppSearchData
    java.lang.Runnable mShowImeRunnable -> mShowImeRunnable
    java.lang.Runnable mUpdateDrawableStateRunnable -> mUpdateDrawableStateRunnable
    java.lang.Runnable mReleaseCursorRunnable -> mReleaseCursorRunnable
    android.content.Intent mVoiceWebSearchIntent -> mVoiceWebSearchIntent
    android.content.Intent mVoiceAppSearchIntent -> mVoiceAppSearchIntent
    java.util.WeakHashMap mOutsideDrawablesCache -> mOutsideDrawablesCache
    android.view.View$OnClickListener mOnClickListener -> mOnClickListener
    android.view.View$OnKeyListener mTextKeyListener -> mTextKeyListener
    android.widget.TextView$OnEditorActionListener mOnEditorActionListener -> mOnEditorActionListener
    android.widget.AdapterView$OnItemClickListener mOnItemClickListener -> mOnItemClickListener
    android.widget.AdapterView$OnItemSelectedListener mOnItemSelectedListener -> mOnItemSelectedListener
    android.text.TextWatcher mTextWatcher -> mTextWatcher
    void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    void setAppSearchData(android.os.Bundle) -> setAppSearchData
    void setImeOptions(int) -> setImeOptions
    int getImeOptions() -> getImeOptions
    void setInputType(int) -> setInputType
    int getInputType() -> getInputType
    boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    void clearFocus() -> clearFocus
    void setOnQueryTextListener(com.actionbarsherlock.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    void setOnCloseListener(com.actionbarsherlock.widget.SearchView$OnCloseListener) -> setOnCloseListener
    void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    void setOnSuggestionListener(com.actionbarsherlock.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    java.lang.CharSequence getQuery() -> getQuery
    void setQuery(java.lang.CharSequence,boolean) -> setQuery
    void setQueryHint(java.lang.CharSequence) -> setQueryHint
    java.lang.CharSequence getQueryHint() -> getQueryHint
    void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    boolean isIconfiedByDefault() -> isIconfiedByDefault
    void setIconified(boolean) -> setIconified
    boolean isIconified() -> isIconified
    void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    boolean isSubmitButtonEnabled() -> isSubmitButtonEnabled
    void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    boolean isQueryRefinementEnabled() -> isQueryRefinementEnabled
    void setSuggestionsAdapter(android.support.v4.widget.CursorAdapter) -> setSuggestionsAdapter
    android.support.v4.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    void setMaxWidth(int) -> setMaxWidth
    int getMaxWidth() -> getMaxWidth
    void onMeasure(int,int) -> onMeasure
    int getPreferredWidth() -> getPreferredWidth
    void updateViewsVisibility(boolean) -> updateViewsVisibility
    boolean hasVoiceSearch() -> hasVoiceSearch
    boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    void updateSubmitButton(boolean) -> updateSubmitButton
    void updateSubmitArea() -> updateSubmitArea
    void updateCloseButton() -> updateCloseButton
    void postUpdateFocusedState() -> postUpdateFocusedState
    void updateFocusedState() -> updateFocusedState
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setImeVisibility(boolean) -> setImeVisibility
    void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    int getSearchIconId() -> getSearchIconId
    java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    void updateQueryHint() -> updateQueryHint
    void updateSearchAutoComplete() -> updateSearchAutoComplete
    void updateVoiceButton(boolean) -> updateVoiceButton
    void onTextChanged(java.lang.CharSequence) -> onTextChanged
    void onSubmitQuery() -> onSubmitQuery
    void dismissSuggestions() -> dismissSuggestions
    void onCloseClicked() -> onCloseClicked
    void onSearchClicked() -> onSearchClicked
    void onVoiceClicked() -> onVoiceClicked
    void onTextFocusChanged() -> onTextFocusChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onActionViewCollapsed() -> onActionViewCollapsed
    void onActionViewExpanded() -> onActionViewExpanded
    void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    boolean onItemSelected(int) -> onItemSelected
    void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    void launchIntent(android.content.Intent) -> launchIntent
    void setQuery(java.lang.CharSequence) -> setQuery
    void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    void forceSuggestionQuery() -> forceSuggestionQuery
    boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> ensureImeVisible
    void showSoftInputUnchecked(android.view.View,android.view.inputmethod.InputMethodManager,int) -> showSoftInputUnchecked
    void setText(android.widget.AutoCompleteTextView,java.lang.CharSequence,boolean) -> setText
    void access$0(android.view.View,android.view.inputmethod.InputMethodManager,int) -> access$0
    void access$1(com.actionbarsherlock.widget.SearchView) -> access$1
    android.support.v4.widget.CursorAdapter access$2(com.actionbarsherlock.widget.SearchView) -> access$2
    android.view.View access$3(com.actionbarsherlock.widget.SearchView) -> access$3
    void access$4(com.actionbarsherlock.widget.SearchView) -> access$4
    android.widget.ImageView access$5(com.actionbarsherlock.widget.SearchView) -> access$5
    void access$6(com.actionbarsherlock.widget.SearchView) -> access$6
    android.view.View access$7(com.actionbarsherlock.widget.SearchView) -> access$7
    void access$8(com.actionbarsherlock.widget.SearchView) -> access$8
    android.view.View access$9(com.actionbarsherlock.widget.SearchView) -> access$9
    void access$10(com.actionbarsherlock.widget.SearchView) -> access$10
    com.actionbarsherlock.widget.SearchView$SearchAutoComplete access$11(com.actionbarsherlock.widget.SearchView) -> access$11
    void access$12(com.actionbarsherlock.widget.SearchView) -> access$12
    android.app.SearchableInfo access$13(com.actionbarsherlock.widget.SearchView) -> access$13
    boolean access$14(com.actionbarsherlock.widget.SearchView,android.view.View,int,android.view.KeyEvent) -> access$14
    void access$15(com.actionbarsherlock.widget.SearchView,int,java.lang.String,java.lang.String) -> access$15
    boolean access$16(com.actionbarsherlock.widget.SearchView,int,int,java.lang.String) -> access$16
    boolean access$17(com.actionbarsherlock.widget.SearchView,int) -> access$17
    void access$18(com.actionbarsherlock.widget.SearchView,java.lang.CharSequence) -> access$18
    void access$19(android.widget.AutoCompleteTextView,boolean) -> access$19
    void access$20(com.actionbarsherlock.widget.SearchView,boolean) -> access$20
    android.view.View$OnFocusChangeListener access$21(com.actionbarsherlock.widget.SearchView) -> access$21
    void access$22(com.actionbarsherlock.widget.SearchView) -> access$22
com.actionbarsherlock.widget.SearchView$1 -> com.actionbarsherlock.widget.SearchView$1:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.SearchView$10 -> com.actionbarsherlock.widget.SearchView$10:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.actionbarsherlock.widget.SearchView$11 -> com.actionbarsherlock.widget.SearchView$11:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.actionbarsherlock.widget.SearchView$12 -> com.actionbarsherlock.widget.SearchView$12:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onGlobalLayout() -> onGlobalLayout
com.actionbarsherlock.widget.SearchView$2 -> com.actionbarsherlock.widget.SearchView$2:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.SearchView$3 -> com.actionbarsherlock.widget.SearchView$3:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void run() -> run
com.actionbarsherlock.widget.SearchView$4 -> com.actionbarsherlock.widget.SearchView$4:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onClick(android.view.View) -> onClick
com.actionbarsherlock.widget.SearchView$5 -> com.actionbarsherlock.widget.SearchView$5:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.actionbarsherlock.widget.SearchView$6 -> com.actionbarsherlock.widget.SearchView$6:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.actionbarsherlock.widget.SearchView$7 -> com.actionbarsherlock.widget.SearchView$7:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.actionbarsherlock.widget.SearchView$8 -> com.actionbarsherlock.widget.SearchView$8:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
com.actionbarsherlock.widget.SearchView$9 -> com.actionbarsherlock.widget.SearchView$9:
    com.actionbarsherlock.widget.SearchView this$0 -> this$0
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.actionbarsherlock.widget.SearchView$OnCloseListener -> com.actionbarsherlock.widget.SearchView$OnCloseListener:
    boolean onClose() -> onClose
com.actionbarsherlock.widget.SearchView$OnQueryTextListener -> com.actionbarsherlock.widget.SearchView$OnQueryTextListener:
    boolean onQueryTextSubmit(java.lang.String) -> onQueryTextSubmit
    boolean onQueryTextChange(java.lang.String) -> onQueryTextChange
com.actionbarsherlock.widget.SearchView$OnSuggestionListener -> com.actionbarsherlock.widget.SearchView$OnSuggestionListener:
    boolean onSuggestionSelect(int) -> onSuggestionSelect
    boolean onSuggestionClick(int) -> onSuggestionClick
com.actionbarsherlock.widget.SearchView$SearchAutoComplete -> com.actionbarsherlock.widget.SearchView$SearchAutoComplete:
    int mThreshold -> mThreshold
    com.actionbarsherlock.widget.SearchView mSearchView -> mSearchView
    void setSearchView(com.actionbarsherlock.widget.SearchView) -> setSearchView
    void setThreshold(int) -> setThreshold
    boolean isEmpty() -> isEmpty
    void replaceText(java.lang.CharSequence) -> replaceText
    void performCompletion() -> performCompletion
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    boolean enoughToFilter() -> enoughToFilter
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    boolean access$0(com.actionbarsherlock.widget.SearchView$SearchAutoComplete) -> access$0
com.actionbarsherlock.widget.ShareActionProvider -> com.actionbarsherlock.widget.ShareActionProvider:
    int DEFAULT_INITIAL_ACTIVITY_COUNT -> DEFAULT_INITIAL_ACTIVITY_COUNT
    int mMaxShownActivityCount -> mMaxShownActivityCount
    com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener mOnMenuItemClickListener -> mOnMenuItemClickListener
    java.lang.String DEFAULT_SHARE_HISTORY_FILE_NAME -> DEFAULT_SHARE_HISTORY_FILE_NAME
    android.content.Context mContext -> mContext
    java.lang.String mShareHistoryFileName -> mShareHistoryFileName
    com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener mOnShareTargetSelectedListener -> mOnShareTargetSelectedListener
    com.actionbarsherlock.widget.ActivityChooserModel$OnChooseActivityListener mOnChooseActivityListener -> mOnChooseActivityListener
    void setOnShareTargetSelectedListener(com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener) -> setOnShareTargetSelectedListener
    android.view.View onCreateActionView() -> onCreateActionView
    boolean hasSubMenu() -> hasSubMenu
    void onPrepareSubMenu(com.actionbarsherlock.view.SubMenu) -> onPrepareSubMenu
    void setShareHistoryFileName(java.lang.String) -> setShareHistoryFileName
    void setShareIntent(android.content.Intent) -> setShareIntent
    void setActivityChooserPolicyIfNeeded() -> setActivityChooserPolicyIfNeeded
    android.content.Context access$0(com.actionbarsherlock.widget.ShareActionProvider) -> access$0
    java.lang.String access$1(com.actionbarsherlock.widget.ShareActionProvider) -> access$1
    com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener access$2(com.actionbarsherlock.widget.ShareActionProvider) -> access$2
com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener -> com.actionbarsherlock.widget.ShareActionProvider$OnShareTargetSelectedListener:
    boolean onShareTargetSelected(com.actionbarsherlock.widget.ShareActionProvider,android.content.Intent) -> onShareTargetSelected
com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy -> com.actionbarsherlock.widget.ShareActionProvider$ShareAcitivityChooserModelPolicy:
    com.actionbarsherlock.widget.ShareActionProvider this$0 -> this$0
    boolean onChooseActivity(com.actionbarsherlock.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> com.actionbarsherlock.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener:
    com.actionbarsherlock.widget.ShareActionProvider this$0 -> this$0
    boolean onMenuItemClick(com.actionbarsherlock.view.MenuItem) -> onMenuItemClick
com.actionbarsherlock.widget.SuggestionsAdapter -> com.actionbarsherlock.widget.SuggestionsAdapter:
    boolean DBG -> DBG
    java.lang.String LOG_TAG -> LOG_TAG
    int QUERY_LIMIT -> QUERY_LIMIT
    int REFINE_NONE -> REFINE_NONE
    int REFINE_BY_ENTRY -> REFINE_BY_ENTRY
    int REFINE_ALL -> REFINE_ALL
    android.app.SearchManager mSearchManager -> mSearchManager
    android.app.SearchableInfo mSearchable -> mSearchable
    com.actionbarsherlock.widget.SearchView mSearchView -> mSearchView
    android.content.Context mProviderContext -> mProviderContext
    java.util.WeakHashMap mOutsideDrawablesCache -> mOutsideDrawablesCache
    boolean mClosed -> mClosed
    int mQueryRefinement -> mQueryRefinement
    android.content.res.ColorStateList mUrlColor -> mUrlColor
    int INVALID_INDEX -> INVALID_INDEX
    int mText1Col -> mText1Col
    int mText2Col -> mText2Col
    int mText2UrlCol -> mText2UrlCol
    int mIconName1Col -> mIconName1Col
    int mIconName2Col -> mIconName2Col
    int mFlagsCol -> mFlagsCol
    void setQueryRefinement(int) -> setQueryRefinement
    int getQueryRefinement() -> getQueryRefinement
    boolean hasStableIds() -> hasStableIds
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    android.database.Cursor getSuggestions(java.lang.String,int) -> getSuggestions
    void close() -> close
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
    void changeCursor(android.database.Cursor) -> changeCursor
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    void onClick(android.view.View) -> onClick
    java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    android.graphics.drawable.Drawable getTheDrawable(android.net.Uri) -> getTheDrawable
    android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> getDefaultIcon1
    android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
com.actionbarsherlock.widget.SuggestionsAdapter$ChildViewCache -> com.actionbarsherlock.widget.SuggestionsAdapter$ChildViewCache:
    android.widget.TextView mText1 -> mText1
    android.widget.TextView mText2 -> mText2
    android.widget.ImageView mIcon1 -> mIcon1
    android.widget.ImageView mIcon2 -> mIcon2
    android.widget.ImageView mIconRefine -> mIconRefine
com.google.analytics.tracking.android.CampaignTrackingReceiver -> com.google.analytics.tracking.android.CampaignTrackingReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.analytics.tracking.android.CampaignTrackingService -> com.google.analytics.tracking.android.CampaignTrackingService:
    void onHandleIntent(android.content.Intent) -> onHandleIntent
com.google.analytics.tracking.android.Log -> com.google.analytics.tracking.android.a:
    int e(java.lang.String) -> a
    java.lang.String formatMessage(java.lang.String) -> b
com.google.android.gms.analytics.internal.Command -> com.google.android.gms.analytics.internal.Command:
    java.lang.String id -> a
    java.lang.String urlParam -> b
    java.lang.String value -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void readFromParcel(android.os.Parcel) -> a
com.google.android.gms.analytics.internal.Command$1 -> com.google.android.gms.analytics.internal.Command$1:
    com.google.android.gms.analytics.internal.Command createFromParcel(android.os.Parcel) -> a
    com.google.android.gms.analytics.internal.Command[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.nostra13.universalimageloader.cache.disc.BaseDiscCache -> com.a.a.a.a.a:
    java.io.File cacheDir -> a
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator fileNameGenerator -> b
    java.io.File get(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.DiscCacheAware -> com.a.a.a.a.b:
    void put(java.lang.String,java.io.File) -> a
    java.io.File get(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.LimitedDiscCache -> com.a.a.a.a.c:
    java.util.concurrent.atomic.AtomicInteger cacheSize -> b
    int sizeLimit -> c
    java.util.Map lastUsageDates -> d
    void calculateCacheSizeAndFillUsageMap() -> a
    void put(java.lang.String,java.io.File) -> a
    java.io.File get(java.lang.String) -> a
    int removeNext() -> b
    int getSize(java.io.File) -> a
com.nostra13.universalimageloader.cache.disc.impl.FileCountLimitedDiscCache -> com.a.a.a.a.a.a:
    int getSize(java.io.File) -> a
com.nostra13.universalimageloader.cache.disc.impl.TotalSizeLimitedDiscCache -> com.a.a.a.a.a.b:
    int getSize(java.io.File) -> a
com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiscCache -> com.a.a.a.a.a.c:
    void put(java.lang.String,java.io.File) -> a
com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator -> com.a.a.a.a.b.a:
    java.lang.String generate(java.lang.String) -> a
com.nostra13.universalimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.a.a.a.a.b.b:
    java.lang.String generate(java.lang.String) -> a
com.nostra13.universalimageloader.cache.memory.BaseMemoryCache -> com.a.a.a.b.a:
    java.util.Map softMap -> a
    java.lang.Object get(java.lang.Object) -> a
    boolean put(java.lang.Object,java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    java.util.Collection keys() -> a
    java.lang.ref.Reference createReference(java.lang.Object) -> c
com.nostra13.universalimageloader.cache.memory.LimitedMemoryCache -> com.a.a.a.b.b:
    int sizeLimit -> a
    java.util.concurrent.atomic.AtomicInteger cacheSize -> b
    java.util.List hardCache -> c
    boolean put(java.lang.Object,java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    int getSizeLimit() -> b
    int getSize(java.lang.Object) -> d
    java.lang.Object removeNext() -> c
com.nostra13.universalimageloader.cache.memory.MemoryCacheAware -> com.a.a.a.b.c:
    boolean put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    java.util.Collection keys() -> a
com.nostra13.universalimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.a.a.a.b.a.a:
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware cache -> a
    java.util.Comparator keyComparator -> b
    boolean put(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    void remove(java.lang.Object) -> b
    java.util.Collection keys() -> a
com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache -> com.a.a.a.b.a.b:
    java.util.Map usingCounts -> a
    boolean put(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap get(java.lang.String) -> a
    void remove(java.lang.String) -> b
    int getSize(android.graphics.Bitmap) -> a
    android.graphics.Bitmap removeNext() -> d
    java.lang.ref.Reference createReference(android.graphics.Bitmap) -> b
    java.lang.Object removeNext() -> c
    int getSize(java.lang.Object) -> d
    void remove(java.lang.Object) -> b
    boolean put(java.lang.Object,java.lang.Object) -> a
    java.lang.ref.Reference createReference(java.lang.Object) -> c
    java.lang.Object get(java.lang.Object) -> a
com.nostra13.universalimageloader.core.DefaultConfigurationFactory -> com.a.a.b.a:
    java.util.concurrent.Executor createExecutor(int,int,com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> a
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> a
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware createDiscCache(android.content.Context,com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator,int,int) -> a
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware createReserveDiscCache(android.content.Context) -> a
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware createMemoryCache(int,boolean) -> a
    com.nostra13.universalimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> b
    com.nostra13.universalimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> b
    java.util.concurrent.ThreadFactory createThreadFactory(int) -> a
com.nostra13.universalimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory -> com.a.a.b.a$a:
    java.util.concurrent.atomic.AtomicInteger poolNumber -> a
    java.lang.ThreadGroup group -> b
    java.util.concurrent.atomic.AtomicInteger threadNumber -> c
    java.lang.String namePrefix -> d
    int threadPriority -> e
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.universalimageloader.core.DisplayBitmapTask -> com.a.a.b.b:
    android.graphics.Bitmap bitmap -> a
    java.lang.String imageUri -> b
    android.widget.ImageView imageView -> c
    java.lang.String memoryCacheKey -> d
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> e
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> f
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> g
    boolean loggingEnabled -> h
    void run() -> run
    boolean isViewWasReused() -> a
    void setLoggingEnabled(boolean) -> a
com.nostra13.universalimageloader.core.DisplayImageOptions -> com.a.a.b.c:
    int stubImage -> a
    int imageForEmptyUri -> b
    int imageOnFail -> c
    boolean resetViewBeforeLoading -> d
    boolean cacheInMemory -> e
    boolean cacheOnDisc -> f
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> g
    android.graphics.Bitmap$Config bitmapConfig -> h
    int delayBeforeLoading -> i
    java.lang.Object extraForDownloader -> j
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> k
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> l
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> m
    boolean shouldShowStubImage() -> a
    boolean shouldShowImageForEmptyUri() -> b
    boolean shouldShowImageOnFail() -> c
    boolean shouldPreProcess() -> d
    boolean shouldPostProcess() -> e
    boolean shouldDelayBeforeLoading() -> f
    int getStubImage() -> g
    int getImageForEmptyUri() -> h
    int getImageOnFail() -> i
    boolean isResetViewBeforeLoading() -> j
    boolean isCacheInMemory() -> k
    boolean isCacheOnDisc() -> l
    com.nostra13.universalimageloader.core.assist.ImageScaleType getImageScaleType() -> m
    android.graphics.Bitmap$Config getBitmapConfig() -> n
    int getDelayBeforeLoading() -> o
    java.lang.Object getExtraForDownloader() -> p
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPreProcessor() -> q
    com.nostra13.universalimageloader.core.process.BitmapProcessor getPostProcessor() -> r
    com.nostra13.universalimageloader.core.display.BitmapDisplayer getDisplayer() -> s
    com.nostra13.universalimageloader.core.DisplayImageOptions createSimple() -> t
com.nostra13.universalimageloader.core.DisplayImageOptions$1 -> com.a.a.b.c$1:
com.nostra13.universalimageloader.core.DisplayImageOptions$Builder -> com.a.a.b.c$a:
    int stubImage -> a
    int imageForEmptyUri -> b
    int imageOnFail -> c
    boolean resetViewBeforeLoading -> d
    boolean cacheInMemory -> e
    boolean cacheOnDisc -> f
    com.nostra13.universalimageloader.core.assist.ImageScaleType imageScaleType -> g
    android.graphics.Bitmap$Config bitmapConfig -> h
    int delayBeforeLoading -> i
    java.lang.Object extraForDownloader -> j
    com.nostra13.universalimageloader.core.process.BitmapProcessor preProcessor -> k
    com.nostra13.universalimageloader.core.process.BitmapProcessor postProcessor -> l
    com.nostra13.universalimageloader.core.display.BitmapDisplayer displayer -> m
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheInMemory() -> a
    com.nostra13.universalimageloader.core.DisplayImageOptions$Builder cacheOnDisc() -> b
    com.nostra13.universalimageloader.core.DisplayImageOptions build() -> c
    int access$000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> a
    int access$100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> b
    int access$200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> c
    boolean access$300(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> d
    boolean access$400(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> e
    boolean access$500(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> f
    com.nostra13.universalimageloader.core.assist.ImageScaleType access$600(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> g
    android.graphics.Bitmap$Config access$700(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> h
    int access$800(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> i
    java.lang.Object access$900(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> j
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1000(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> k
    com.nostra13.universalimageloader.core.process.BitmapProcessor access$1100(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> l
    com.nostra13.universalimageloader.core.display.BitmapDisplayer access$1200(com.nostra13.universalimageloader.core.DisplayImageOptions$Builder) -> m
com.nostra13.universalimageloader.core.ImageDecoder -> com.a.a.b.d:
    java.lang.String imageUri -> a
    com.nostra13.universalimageloader.core.download.ImageDownloader imageDownloader -> b
    com.nostra13.universalimageloader.core.DisplayImageOptions displayOptions -> c
    boolean loggingEnabled -> d
    android.graphics.Bitmap decode(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageScaleType,com.nostra13.universalimageloader.core.assist.ViewScaleType) -> a
    android.graphics.BitmapFactory$Options getBitmapOptionsForImageDecoding(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageScaleType,com.nostra13.universalimageloader.core.assist.ViewScaleType) -> b
    int computeImageScale(com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageScaleType,com.nostra13.universalimageloader.core.assist.ViewScaleType) -> c
    android.graphics.Bitmap scaleImageExactly(android.graphics.Bitmap,com.nostra13.universalimageloader.core.assist.ImageSize,com.nostra13.universalimageloader.core.assist.ImageScaleType,com.nostra13.universalimageloader.core.assist.ViewScaleType) -> a
    void setLoggingEnabled(boolean) -> a
    void log(java.lang.String,java.lang.Object[]) -> a
com.nostra13.universalimageloader.core.ImageLoader -> com.a.a.b.e:
    java.lang.String TAG -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> b
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> c
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener emptyListener -> d
    com.nostra13.universalimageloader.core.display.BitmapDisplayer fakeBitmapDisplayer -> e
    com.nostra13.universalimageloader.core.ImageLoader instance -> f
    com.nostra13.universalimageloader.core.ImageLoader getInstance() -> a
    void init(com.nostra13.universalimageloader.core.ImageLoaderConfiguration) -> a
    void displayImage(java.lang.String,android.widget.ImageView) -> a
    void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.universalimageloader.core.DisplayImageOptions,com.nostra13.universalimageloader.core.assist.ImageLoadingListener) -> a
    void checkConfiguration() -> b
    com.nostra13.universalimageloader.core.assist.ImageSize getImageSizeScaleTo(android.widget.ImageView) -> a
    int getFieldValue(java.lang.Object,java.lang.String) -> a
com.nostra13.universalimageloader.core.ImageLoaderConfiguration -> com.a.a.b.f:
    android.content.Context context -> a
    int maxImageWidthForMemoryCache -> b
    int maxImageHeightForMemoryCache -> c
    int maxImageWidthForDiscCache -> d
    int maxImageHeightForDiscCache -> e
    android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache -> f
    int imageQualityForDiscCache -> g
    java.util.concurrent.Executor taskExecutor -> h
    java.util.concurrent.Executor taskExecutorForCachedImages -> i
    boolean customExecutor -> j
    boolean customExecutorForCachedImages -> k
    int threadPoolSize -> l
    int threadPriority -> m
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> n
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> o
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> p
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> q
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> r
    boolean loggingEnabled -> s
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware reserveDiscCache -> t
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> u
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> v
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$1 -> com.a.a.b.f$1:
com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder -> com.a.a.b.f$a:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType DEFAULT_TASK_PROCESSING_TYPE -> a
    android.content.Context context -> b
    int maxImageWidthForMemoryCache -> c
    int maxImageHeightForMemoryCache -> d
    int maxImageWidthForDiscCache -> e
    int maxImageHeightForDiscCache -> f
    android.graphics.Bitmap$CompressFormat imageCompressFormatForDiscCache -> g
    int imageQualityForDiscCache -> h
    java.util.concurrent.Executor taskExecutor -> i
    java.util.concurrent.Executor taskExecutorForCachedImages -> j
    boolean customExecutor -> k
    boolean customExecutorForCachedImages -> l
    int threadPoolSize -> m
    int threadPriority -> n
    boolean denyCacheImageMultipleSizesInMemory -> o
    com.nostra13.universalimageloader.core.assist.QueueProcessingType tasksProcessingType -> p
    int memoryCacheSize -> q
    int discCacheSize -> r
    int discCacheFileCount -> s
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware memoryCache -> t
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware discCache -> u
    com.nostra13.universalimageloader.cache.disc.naming.FileNameGenerator discCacheFileNameGenerator -> v
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> w
    com.nostra13.universalimageloader.core.DisplayImageOptions defaultDisplayImageOptions -> x
    boolean loggingEnabled -> y
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCacheExtraOptions(int,int) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCacheExtraOptions(int,int,android.graphics.Bitmap$CompressFormat,int) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPoolSize(int) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> b
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder denyCacheImageMultipleSizesInMemory() -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.universalimageloader.core.assist.QueueProcessingType) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder memoryCache(com.nostra13.universalimageloader.cache.memory.MemoryCacheAware) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder imageDownloader(com.nostra13.universalimageloader.core.download.ImageDownloader) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder discCache(com.nostra13.universalimageloader.cache.disc.DiscCacheAware) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder defaultDisplayImageOptions(com.nostra13.universalimageloader.core.DisplayImageOptions) -> a
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration build() -> b
    void initEmptyFiledsWithDefaultValues() -> c
    android.content.Context access$000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> a
    int access$100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> b
    int access$200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> c
    int access$300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> d
    int access$400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> e
    android.graphics.Bitmap$CompressFormat access$500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> f
    int access$600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> g
    java.util.concurrent.Executor access$700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> h
    java.util.concurrent.Executor access$800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> i
    int access$900(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> j
    int access$1000(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> k
    com.nostra13.universalimageloader.core.assist.QueueProcessingType access$1100(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> l
    com.nostra13.universalimageloader.cache.disc.DiscCacheAware access$1200(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> m
    com.nostra13.universalimageloader.cache.memory.MemoryCacheAware access$1300(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> n
    com.nostra13.universalimageloader.core.DisplayImageOptions access$1400(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> o
    boolean access$1500(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> p
    com.nostra13.universalimageloader.core.download.ImageDownloader access$1600(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> q
    boolean access$1700(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> r
    boolean access$1800(com.nostra13.universalimageloader.core.ImageLoaderConfiguration$Builder) -> s
com.nostra13.universalimageloader.core.ImageLoaderEngine -> com.a.a.b.g:
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> a
    java.util.concurrent.Executor taskExecutor -> b
    java.util.concurrent.Executor taskExecutorForCachedImages -> c
    java.util.concurrent.ExecutorService taskDistributor -> d
    java.util.Map cacheKeysForImageViews -> e
    java.util.Map uriLocks -> f
    java.util.concurrent.atomic.AtomicBoolean paused -> g
    java.util.concurrent.atomic.AtomicBoolean networkDenied -> h
    java.util.concurrent.atomic.AtomicBoolean slowNetwork -> i
    void submit(com.nostra13.universalimageloader.core.LoadAndDisplayImageTask) -> a
    void submit(com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask) -> a
    void initExecutorsIfNeed() -> d
    java.util.concurrent.Executor createTaskExecutor() -> e
    java.lang.String getLoadingUriForView(android.widget.ImageView) -> a
    void prepareDisplayTaskFor(android.widget.ImageView,java.lang.String) -> a
    void cancelDisplayTaskFor(android.widget.ImageView) -> b
    java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> a
    java.util.concurrent.atomic.AtomicBoolean getPause() -> a
    boolean isNetworkDenied() -> b
    boolean isSlowNetwork() -> c
    void access$000(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> a
    java.util.concurrent.Executor access$100(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> b
    java.util.concurrent.Executor access$200(com.nostra13.universalimageloader.core.ImageLoaderEngine) -> c
com.nostra13.universalimageloader.core.ImageLoaderEngine$1 -> com.a.a.b.g$1:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask val$task -> a
    com.nostra13.universalimageloader.core.ImageLoaderEngine this$0 -> b
    void run() -> run
com.nostra13.universalimageloader.core.ImageLoadingInfo -> com.a.a.b.h:
    java.lang.String uri -> a
    java.lang.String memoryCacheKey -> b
    android.widget.ImageView imageView -> c
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> d
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> e
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> f
    java.util.concurrent.locks.ReentrantLock loadFromUriLock -> g
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask -> com.a.a.b.i:
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> e
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> f
    android.os.Handler handler -> g
    com.nostra13.universalimageloader.core.ImageLoaderConfiguration configuration -> h
    com.nostra13.universalimageloader.core.download.ImageDownloader downloader -> i
    com.nostra13.universalimageloader.core.download.ImageDownloader networkDeniedDownloader -> j
    com.nostra13.universalimageloader.core.download.ImageDownloader slowNetworkDownloader -> k
    boolean loggingEnabled -> l
    java.lang.String uri -> a
    java.lang.String memoryCacheKey -> m
    android.widget.ImageView imageView -> b
    com.nostra13.universalimageloader.core.assist.ImageSize targetSize -> n
    com.nostra13.universalimageloader.core.DisplayImageOptions options -> c
    com.nostra13.universalimageloader.core.assist.ImageLoadingListener listener -> d
    void run() -> run
    boolean checkTaskIsNotActual() -> b
    boolean checkTaskIsInterrupted() -> c
    android.graphics.Bitmap tryLoadBitmap() -> d
    android.graphics.Bitmap decodeImage(java.lang.String) -> a
    void saveImageOnDisc(java.io.File) -> a
    void fireImageLoadingFailedEvent(com.nostra13.universalimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> a
    com.nostra13.universalimageloader.core.download.ImageDownloader getDownloader() -> e
    java.lang.String getLoadingUri() -> a
    void log(java.lang.String,java.lang.Object[]) -> a
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$1 -> com.a.a.b.i$1:
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> a
    void run() -> run
com.nostra13.universalimageloader.core.LoadAndDisplayImageTask$2 -> com.a.a.b.i$2:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType val$failType -> a
    java.lang.Throwable val$failCause -> b
    com.nostra13.universalimageloader.core.LoadAndDisplayImageTask this$0 -> c
    void run() -> run
com.nostra13.universalimageloader.core.ProcessAndDisplayImageTask -> com.a.a.b.j:
    com.nostra13.universalimageloader.core.ImageLoaderEngine engine -> a
    android.graphics.Bitmap bitmap -> b
    com.nostra13.universalimageloader.core.ImageLoadingInfo imageLoadingInfo -> c
    android.os.Handler handler -> d
    void run() -> run
com.nostra13.universalimageloader.core.assist.FailReason -> com.a.a.b.a.a:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType type -> a
    java.lang.Throwable cause -> b
com.nostra13.universalimageloader.core.assist.FailReason$FailType -> com.a.a.b.a.a$a:
    com.nostra13.universalimageloader.core.assist.FailReason$FailType IO_ERROR -> a
    com.nostra13.universalimageloader.core.assist.FailReason$FailType DECODING_ERROR -> b
    com.nostra13.universalimageloader.core.assist.FailReason$FailType NETWORK_DENIED -> c
    com.nostra13.universalimageloader.core.assist.FailReason$FailType OUT_OF_MEMORY -> d
    com.nostra13.universalimageloader.core.assist.FailReason$FailType UNKNOWN -> e
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] $VALUES -> f
    com.nostra13.universalimageloader.core.assist.FailReason$FailType[] values() -> values
    com.nostra13.universalimageloader.core.assist.FailReason$FailType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.FlushedInputStream -> com.a.a.b.a.b:
    long skip(long) -> skip
com.nostra13.universalimageloader.core.assist.ImageLoadingListener -> com.a.a.b.a.c:
    void onLoadingStarted(java.lang.String,android.view.View) -> a
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> a
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> a
    void onLoadingCancelled(java.lang.String,android.view.View) -> b
com.nostra13.universalimageloader.core.assist.ImageScaleType -> com.a.a.b.a.d:
    com.nostra13.universalimageloader.core.assist.ImageScaleType NONE -> a
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_POWER_OF_2 -> b
    com.nostra13.universalimageloader.core.assist.ImageScaleType IN_SAMPLE_INT -> c
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY -> d
    com.nostra13.universalimageloader.core.assist.ImageScaleType EXACTLY_STRETCHED -> e
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] $VALUES -> f
    com.nostra13.universalimageloader.core.assist.ImageScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.ImageSize -> com.a.a.b.a.e:
    int width -> a
    int height -> b
    int getWidth() -> a
    int getHeight() -> b
    java.lang.String toString() -> toString
com.nostra13.universalimageloader.core.assist.MemoryCacheUtil -> com.a.a.b.a.f:
    java.lang.String generateKey(java.lang.String,com.nostra13.universalimageloader.core.assist.ImageSize) -> a
    java.util.Comparator createFuzzyKeyComparator() -> a
com.nostra13.universalimageloader.core.assist.MemoryCacheUtil$1 -> com.a.a.b.a.f$1:
    int compare(java.lang.String,java.lang.String) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.nostra13.universalimageloader.core.assist.QueueProcessingType -> com.a.a.b.a.g:
    com.nostra13.universalimageloader.core.assist.QueueProcessingType FIFO -> a
    com.nostra13.universalimageloader.core.assist.QueueProcessingType LIFO -> b
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] $VALUES -> c
    com.nostra13.universalimageloader.core.assist.QueueProcessingType[] values() -> values
    com.nostra13.universalimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
com.nostra13.universalimageloader.core.assist.SimpleImageLoadingListener -> com.a.a.b.a.h:
    void onLoadingStarted(java.lang.String,android.view.View) -> a
    void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.universalimageloader.core.assist.FailReason) -> a
    void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> a
    void onLoadingCancelled(java.lang.String,android.view.View) -> b
com.nostra13.universalimageloader.core.assist.ViewScaleType -> com.a.a.b.a.i:
    com.nostra13.universalimageloader.core.assist.ViewScaleType FIT_INSIDE -> a
    com.nostra13.universalimageloader.core.assist.ViewScaleType CROP -> b
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] $VALUES -> c
    com.nostra13.universalimageloader.core.assist.ViewScaleType[] values() -> values
    com.nostra13.universalimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> a
com.nostra13.universalimageloader.core.assist.ViewScaleType$1 -> com.a.a.b.a.i$1:
    int[] $SwitchMap$android$widget$ImageView$ScaleType -> a
com.nostra13.universalimageloader.core.assist.deque.BlockingDeque -> com.a.a.b.a.a.a:
com.nostra13.universalimageloader.core.assist.deque.Deque -> com.a.a.b.a.a.b:
com.nostra13.universalimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> com.a.a.b.a.a.c:
    boolean offer(java.lang.Object) -> offer
    java.lang.Object remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque -> com.a.a.b.a.a.d:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node first -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node last -> b
    int count -> d
    int capacity -> e
    java.util.concurrent.locks.ReentrantLock lock -> c
    java.util.concurrent.locks.Condition notEmpty -> f
    java.util.concurrent.locks.Condition notFull -> g
    boolean linkFirst(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> b
    boolean linkLast(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> c
    java.lang.Object unlinkFirst() -> f
    java.lang.Object unlinkLast() -> g
    void unlink(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> a
    void addLast(java.lang.Object) -> a
    boolean offerFirst(java.lang.Object) -> b
    boolean offerLast(java.lang.Object) -> c
    void putLast(java.lang.Object) -> d
    boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> a
    java.lang.Object removeFirst() -> a
    java.lang.Object pollFirst() -> b
    java.lang.Object takeFirst() -> c
    java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> a
    java.lang.Object getFirst() -> d
    java.lang.Object peekFirst() -> e
    boolean removeFirstOccurrence(java.lang.Object) -> e
    boolean add(java.lang.Object) -> add
    boolean offer(java.lang.Object) -> offer
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    java.lang.Object remove() -> remove
    java.lang.Object poll() -> poll
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object element() -> element
    java.lang.Object peek() -> peek
    int remainingCapacity() -> remainingCapacity
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    boolean remove(java.lang.Object) -> remove
    int size() -> size
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.lang.String toString() -> toString
    void clear() -> clear
    java.util.Iterator iterator() -> iterator
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$1 -> com.a.a.b.a.a.d$1:
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> com.a.a.b.a.a.d$a:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> a
    java.lang.Object nextItem -> b
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node lastRet -> d
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> c
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> b
    void advance() -> b
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> com.a.a.b.a.a.d$b:
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque this$0 -> d
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> a
com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node -> com.a.a.b.a.a.d$c:
    java.lang.Object item -> a
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node prev -> b
    com.nostra13.universalimageloader.core.assist.deque.LinkedBlockingDeque$Node next -> c
com.nostra13.universalimageloader.core.display.BitmapDisplayer -> com.a.a.b.b.a:
    android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView) -> a
com.nostra13.universalimageloader.core.display.FakeBitmapDisplayer -> com.a.a.b.b.b:
    android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView) -> a
com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer -> com.a.a.b.b.c:
    android.graphics.Bitmap display(android.graphics.Bitmap,android.widget.ImageView) -> a
com.nostra13.universalimageloader.core.download.BaseImageDownloader -> com.a.a.b.c.a:
    android.content.Context context -> a
    int connectTimeout -> b
    int readTimeout -> c
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> a
    java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> b
    java.net.HttpURLConnection connectTo(java.lang.String) -> a
    java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object) -> c
    java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object) -> d
    java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object) -> e
    java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object) -> f
    java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object) -> g
com.nostra13.universalimageloader.core.download.BaseImageDownloader$1 -> com.a.a.b.c.a$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> a
com.nostra13.universalimageloader.core.download.ImageDownloader -> com.a.a.b.c.b:
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> a
com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme -> com.a.a.b.c.b$a:
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTP -> a
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme HTTPS -> b
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme FILE -> c
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme CONTENT -> d
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ASSETS -> e
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme DRAWABLE -> f
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme UNKNOWN -> g
    java.lang.String scheme -> h
    java.lang.String uriPrefix -> i
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] $VALUES -> j
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme[] values() -> values
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String) -> valueOf
    com.nostra13.universalimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String) -> a
    boolean belongsTo(java.lang.String) -> d
    java.lang.String wrap(java.lang.String) -> b
    java.lang.String crop(java.lang.String) -> c
com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader -> com.a.a.b.c.c:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> a
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> a
com.nostra13.universalimageloader.core.download.NetworkDeniedImageDownloader$1 -> com.a.a.b.c.c$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> a
com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader -> com.a.a.b.c.d:
    com.nostra13.universalimageloader.core.download.ImageDownloader wrappedDownloader -> a
    java.io.InputStream getStream(java.lang.String,java.lang.Object) -> a
com.nostra13.universalimageloader.core.download.SlowNetworkImageDownloader$1 -> com.a.a.b.c.d$1:
    int[] $SwitchMap$com$nostra13$universalimageloader$core$download$ImageDownloader$Scheme -> a
com.nostra13.universalimageloader.core.process.BitmapProcessor -> com.a.a.b.d.a:
    android.graphics.Bitmap process(android.graphics.Bitmap) -> a
com.nostra13.universalimageloader.utils.IoUtils -> com.a.a.c.a:
    void copyStream(java.io.InputStream,java.io.OutputStream) -> a
    void closeSilently(java.io.Closeable) -> a
com.nostra13.universalimageloader.utils.L -> com.a.a.c.b:
    void d(java.lang.String,java.lang.Object[]) -> a
    void i(java.lang.String,java.lang.Object[]) -> b
    void w(java.lang.String,java.lang.Object[]) -> c
    void e(java.lang.Throwable) -> a
    void e(java.lang.String,java.lang.Object[]) -> d
    void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> a
com.nostra13.universalimageloader.utils.StorageUtils -> com.a.a.c.c:
    java.io.File getCacheDirectory(android.content.Context) -> a
    java.io.File getIndividualCacheDirectory(android.content.Context) -> b
    java.io.File getExternalCacheDir(android.content.Context) -> c
com.thoughtworks.xstream.InitializationException -> com.thoughtworks.xstream.InitializationException:
com.thoughtworks.xstream.MarshallingStrategy -> com.thoughtworks.xstream.MarshallingStrategy:
    java.lang.Object unmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> unmarshal
    void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.DataHolder) -> marshal
com.thoughtworks.xstream.XStream -> com.thoughtworks.xstream.XStream:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    com.thoughtworks.xstream.io.HierarchicalStreamDriver hierarchicalStreamDriver -> hierarchicalStreamDriver
    com.thoughtworks.xstream.core.util.ClassLoaderReference classLoaderReference -> classLoaderReference
    com.thoughtworks.xstream.MarshallingStrategy marshallingStrategy -> marshallingStrategy
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    com.thoughtworks.xstream.converters.ConverterRegistry converterRegistry -> converterRegistry
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.mapper.PackageAliasingMapper packageAliasingMapper -> packageAliasingMapper
    com.thoughtworks.xstream.mapper.ClassAliasingMapper classAliasingMapper -> classAliasingMapper
    com.thoughtworks.xstream.mapper.FieldAliasingMapper fieldAliasingMapper -> fieldAliasingMapper
    com.thoughtworks.xstream.mapper.AttributeAliasingMapper attributeAliasingMapper -> attributeAliasingMapper
    com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper systemAttributeAliasingMapper -> systemAttributeAliasingMapper
    com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper -> attributeMapper
    com.thoughtworks.xstream.mapper.DefaultImplementationsMapper defaultImplementationsMapper -> defaultImplementationsMapper
    com.thoughtworks.xstream.mapper.ImmutableTypesMapper immutableTypesMapper -> immutableTypesMapper
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper implicitCollectionMapper -> implicitCollectionMapper
    com.thoughtworks.xstream.mapper.LocalConversionMapper localConversionMapper -> localConversionMapper
    com.thoughtworks.xstream.mapper.AnnotationConfiguration annotationConfiguration -> annotationConfiguration
    com.thoughtworks.xstream.core.JVM jvm -> jvm
    int NO_REFERENCES -> NO_REFERENCES
    int ID_REFERENCES -> ID_REFERENCES
    int XPATH_RELATIVE_REFERENCES -> XPATH_RELATIVE_REFERENCES
    int XPATH_ABSOLUTE_REFERENCES -> XPATH_ABSOLUTE_REFERENCES
    int SINGLE_NODE_XPATH_RELATIVE_REFERENCES -> SINGLE_NODE_XPATH_RELATIVE_REFERENCES
    int SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES -> SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES
    int PRIORITY_VERY_HIGH -> PRIORITY_VERY_HIGH
    int PRIORITY_NORMAL -> PRIORITY_NORMAL
    int PRIORITY_LOW -> PRIORITY_LOW
    int PRIORITY_VERY_LOW -> PRIORITY_VERY_LOW
    java.lang.String ANNOTATION_MAPPER_TYPE -> ANNOTATION_MAPPER_TYPE
    com.thoughtworks.xstream.mapper.Mapper buildMapper() -> buildMapper
    com.thoughtworks.xstream.mapper.Mapper buildMapperDynamically(java.lang.String,java.lang.Class[],java.lang.Object[]) -> buildMapperDynamically
    com.thoughtworks.xstream.mapper.MapperWrapper wrapMapper(com.thoughtworks.xstream.mapper.MapperWrapper) -> wrapMapper
    boolean useXStream11XmlFriendlyMapper() -> useXStream11XmlFriendlyMapper
    void setupMappers() -> setupMappers
    void setupAliases() -> setupAliases
    void aliasDynamically(java.lang.String,java.lang.String) -> aliasDynamically
    void setupDefaultImplementations() -> setupDefaultImplementations
    void setupConverters() -> setupConverters
    void registerConverterDynamically(java.lang.String,int,java.lang.Class[],java.lang.Object[]) -> registerConverterDynamically
    void setupImmutableTypes() -> setupImmutableTypes
    void addImmutableTypeDynamically(java.lang.String) -> addImmutableTypeDynamically
    void setMarshallingStrategy(com.thoughtworks.xstream.MarshallingStrategy) -> setMarshallingStrategy
    java.lang.String toXML(java.lang.Object) -> toXML
    void toXML(java.lang.Object,java.io.Writer) -> toXML
    void toXML(java.lang.Object,java.io.OutputStream) -> toXML
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> marshal
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.DataHolder) -> marshal
    java.lang.Object fromXML(java.lang.String) -> fromXML
    java.lang.Object fromXML(java.io.Reader) -> fromXML
    java.lang.Object fromXML(java.io.InputStream) -> fromXML
    java.lang.Object fromXML(java.net.URL) -> fromXML
    java.lang.Object fromXML(java.io.File) -> fromXML
    java.lang.Object fromXML(java.lang.String,java.lang.Object) -> fromXML
    java.lang.Object fromXML(java.io.Reader,java.lang.Object) -> fromXML
    java.lang.Object fromXML(java.net.URL,java.lang.Object) -> fromXML
    java.lang.Object fromXML(java.io.File,java.lang.Object) -> fromXML
    java.lang.Object fromXML(java.io.InputStream,java.lang.Object) -> fromXML
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> unmarshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object) -> unmarshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,com.thoughtworks.xstream.converters.DataHolder) -> unmarshal
    void alias(java.lang.String,java.lang.Class) -> alias
    void aliasType(java.lang.String,java.lang.Class) -> aliasType
    void alias(java.lang.String,java.lang.Class,java.lang.Class) -> alias
    void aliasPackage(java.lang.String,java.lang.String) -> aliasPackage
    void aliasField(java.lang.String,java.lang.Class,java.lang.String) -> aliasField
    void aliasAttribute(java.lang.String,java.lang.String) -> aliasAttribute
    void aliasSystemAttribute(java.lang.String,java.lang.String) -> aliasSystemAttribute
    void aliasAttribute(java.lang.Class,java.lang.String,java.lang.String) -> aliasAttribute
    void useAttributeFor(java.lang.String,java.lang.Class) -> useAttributeFor
    void useAttributeFor(java.lang.Class,java.lang.String) -> useAttributeFor
    void useAttributeFor(java.lang.Class) -> useAttributeFor
    void addDefaultImplementation(java.lang.Class,java.lang.Class) -> addDefaultImplementation
    void addImmutableType(java.lang.Class) -> addImmutableType
    void registerConverter(com.thoughtworks.xstream.converters.Converter) -> registerConverter
    void registerConverter(com.thoughtworks.xstream.converters.Converter,int) -> registerConverter
    void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter) -> registerConverter
    void registerConverter(com.thoughtworks.xstream.converters.SingleValueConverter,int) -> registerConverter
    void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.Converter) -> registerLocalConverter
    void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.SingleValueConverter) -> registerLocalConverter
    com.thoughtworks.xstream.mapper.Mapper getMapper() -> getMapper
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider getReflectionProvider() -> getReflectionProvider
    com.thoughtworks.xstream.converters.ConverterLookup getConverterLookup() -> getConverterLookup
    void setMode(int) -> setMode
    void addImplicitCollection(java.lang.Class,java.lang.String) -> addImplicitCollection
    void addImplicitCollection(java.lang.Class,java.lang.String,java.lang.Class) -> addImplicitCollection
    void addImplicitCollection(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class) -> addImplicitCollection
    void addImplicitArray(java.lang.Class,java.lang.String) -> addImplicitArray
    void addImplicitArray(java.lang.Class,java.lang.String,java.lang.Class) -> addImplicitArray
    void addImplicitArray(java.lang.Class,java.lang.String,java.lang.String) -> addImplicitArray
    void addImplicitMap(java.lang.Class,java.lang.String,java.lang.Class,java.lang.String) -> addImplicitMap
    void addImplicitMap(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String) -> addImplicitMap
    com.thoughtworks.xstream.converters.DataHolder newDataHolder() -> newDataHolder
    java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(java.io.Writer,java.lang.String) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(java.io.OutputStream,java.lang.String) -> createObjectOutputStream
    java.io.ObjectOutputStream createObjectOutputStream(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String) -> createObjectOutputStream
    java.io.ObjectInputStream createObjectInputStream(java.io.Reader) -> createObjectInputStream
    java.io.ObjectInputStream createObjectInputStream(java.io.InputStream) -> createObjectInputStream
    java.io.ObjectInputStream createObjectInputStream(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> createObjectInputStream
    void setClassLoader(java.lang.ClassLoader) -> setClassLoader
    java.lang.ClassLoader getClassLoader() -> getClassLoader
    void omitField(java.lang.Class,java.lang.String) -> omitField
    void processAnnotations(java.lang.Class[]) -> processAnnotations
    void processAnnotations(java.lang.Class) -> processAnnotations
    void autodetectAnnotations(boolean) -> autodetectAnnotations
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.XStream$1 -> com.thoughtworks.xstream.XStream$1:
    com.thoughtworks.xstream.io.StatefulWriter val$statefulWriter -> val$statefulWriter
    com.thoughtworks.xstream.XStream this$0 -> this$0
    void writeToStream(java.lang.Object) -> writeToStream
    void writeFieldsToStream(java.util.Map) -> writeFieldsToStream
    void defaultWriteObject() -> defaultWriteObject
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.XStream$2 -> com.thoughtworks.xstream.XStream$2:
    com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader -> val$reader
    com.thoughtworks.xstream.XStream this$0 -> this$0
    java.lang.Object readFromStream() -> readFromStream
    java.util.Map readFieldsFromStream() -> readFieldsFromStream
    void defaultReadObject() -> defaultReadObject
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
com.thoughtworks.xstream.XStream$InitializationException -> com.thoughtworks.xstream.XStream$InitializationException:
com.thoughtworks.xstream.XStreamException -> com.thoughtworks.xstream.XStreamException:
    java.lang.Throwable cause -> cause
    java.lang.Throwable getCause() -> getCause
com.thoughtworks.xstream.XStreamer -> com.thoughtworks.xstream.XStreamer:
    java.lang.String toXML(com.thoughtworks.xstream.XStream,java.lang.Object) -> toXML
    void toXML(com.thoughtworks.xstream.XStream,java.lang.Object,java.io.Writer) -> toXML
    java.lang.Object fromXML(java.lang.String) -> fromXML
    java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.lang.String) -> fromXML
    java.lang.Object fromXML(java.io.Reader) -> fromXML
    java.lang.Object fromXML(com.thoughtworks.xstream.io.HierarchicalStreamDriver,java.io.Reader) -> fromXML
com.thoughtworks.xstream.annotations.AnnotationProvider -> com.thoughtworks.xstream.annotations.AnnotationProvider:
    java.lang.annotation.Annotation getAnnotation(java.lang.reflect.Field,java.lang.Class) -> getAnnotation
com.thoughtworks.xstream.annotations.AnnotationReflectionConverter -> com.thoughtworks.xstream.annotations.AnnotationReflectionConverter:
    com.thoughtworks.xstream.annotations.AnnotationProvider annotationProvider -> annotationProvider
    java.util.Map cachedConverters -> cachedConverters
    void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field) -> marshallField
    void ensureCache(java.lang.Class) -> ensureCache
    java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field) -> unmarshallField
    com.thoughtworks.xstream.converters.Converter newInstance(java.lang.Class) -> newInstance
com.thoughtworks.xstream.annotations.Annotations -> com.thoughtworks.xstream.annotations.Annotations:
    void configureAliases(com.thoughtworks.xstream.XStream,java.lang.Class[]) -> configureAliases
com.thoughtworks.xstream.annotations.XStreamAlias -> com.thoughtworks.xstream.annotations.XStreamAlias:
    java.lang.String value() -> value
    java.lang.Class impl() -> impl
com.thoughtworks.xstream.annotations.XStreamAsAttribute -> com.thoughtworks.xstream.annotations.XStreamAsAttribute:
com.thoughtworks.xstream.annotations.XStreamContainedType -> com.thoughtworks.xstream.annotations.XStreamContainedType:
com.thoughtworks.xstream.annotations.XStreamConverter -> com.thoughtworks.xstream.annotations.XStreamConverter:
    java.lang.Class value() -> value
com.thoughtworks.xstream.annotations.XStreamConverters -> com.thoughtworks.xstream.annotations.XStreamConverters:
    com.thoughtworks.xstream.annotations.XStreamConverter[] value() -> value
com.thoughtworks.xstream.annotations.XStreamImplicit -> com.thoughtworks.xstream.annotations.XStreamImplicit:
    java.lang.String itemFieldName() -> itemFieldName
    java.lang.String keyFieldName() -> keyFieldName
com.thoughtworks.xstream.annotations.XStreamImplicitCollection -> com.thoughtworks.xstream.annotations.XStreamImplicitCollection:
    java.lang.String value() -> value
    java.lang.String item() -> item
com.thoughtworks.xstream.annotations.XStreamInclude -> com.thoughtworks.xstream.annotations.XStreamInclude:
    java.lang.Class[] value() -> value
com.thoughtworks.xstream.annotations.XStreamOmitField -> com.thoughtworks.xstream.annotations.XStreamOmitField:
com.thoughtworks.xstream.converters.ConversionException -> com.thoughtworks.xstream.converters.ConversionException:
    java.lang.String SEPARATOR -> SEPARATOR
    java.util.Map stuff -> stuff
    java.lang.String get(java.lang.String) -> get
    void add(java.lang.String,java.lang.String) -> add
    void set(java.lang.String,java.lang.String) -> set
    java.util.Iterator keys() -> keys
    java.lang.String getMessage() -> getMessage
    java.lang.String getShortMessage() -> getShortMessage
com.thoughtworks.xstream.converters.Converter -> com.thoughtworks.xstream.converters.Converter:
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.ConverterLookup -> com.thoughtworks.xstream.converters.ConverterLookup:
    com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class) -> lookupConverterForType
com.thoughtworks.xstream.converters.ConverterMatcher -> com.thoughtworks.xstream.converters.ConverterMatcher:
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.ConverterRegistry -> com.thoughtworks.xstream.converters.ConverterRegistry:
    void registerConverter(com.thoughtworks.xstream.converters.Converter,int) -> registerConverter
com.thoughtworks.xstream.converters.DataHolder -> com.thoughtworks.xstream.converters.DataHolder:
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
com.thoughtworks.xstream.converters.ErrorReporter -> com.thoughtworks.xstream.converters.ErrorReporter:
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.converters.ErrorWriter -> com.thoughtworks.xstream.converters.ErrorWriter:
    void add(java.lang.String,java.lang.String) -> add
    void set(java.lang.String,java.lang.String) -> set
    java.lang.String get(java.lang.String) -> get
    java.util.Iterator keys() -> keys
com.thoughtworks.xstream.converters.MarshallingContext -> com.thoughtworks.xstream.converters.MarshallingContext:
    void convertAnother(java.lang.Object) -> convertAnother
    void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convertAnother
com.thoughtworks.xstream.converters.SingleValueConverter -> com.thoughtworks.xstream.converters.SingleValueConverter:
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.SingleValueConverterWrapper -> com.thoughtworks.xstream.converters.SingleValueConverterWrapper:
    com.thoughtworks.xstream.converters.SingleValueConverter wrapped -> wrapped
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.converters.UnmarshallingContext -> com.thoughtworks.xstream.converters.UnmarshallingContext:
    java.lang.Object convertAnother(java.lang.Object,java.lang.Class) -> convertAnother
    java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter) -> convertAnother
    java.lang.Object currentObject() -> currentObject
    java.lang.Class getRequiredType() -> getRequiredType
    void addCompletionCallback(java.lang.Runnable,int) -> addCompletionCallback
com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter -> com.thoughtworks.xstream.converters.basic.AbstractSingleValueConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.BigDecimalConverter -> com.thoughtworks.xstream.converters.basic.BigDecimalConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.BigIntegerConverter -> com.thoughtworks.xstream.converters.basic.BigIntegerConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.BooleanConverter -> com.thoughtworks.xstream.converters.basic.BooleanConverter:
    com.thoughtworks.xstream.converters.basic.BooleanConverter TRUE_FALSE -> TRUE_FALSE
    com.thoughtworks.xstream.converters.basic.BooleanConverter YES_NO -> YES_NO
    com.thoughtworks.xstream.converters.basic.BooleanConverter BINARY -> BINARY
    java.lang.String positive -> positive
    java.lang.String negative -> negative
    boolean caseSensitive -> caseSensitive
    boolean shouldConvert(java.lang.Class,java.lang.Object) -> shouldConvert
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.basic.ByteConverter -> com.thoughtworks.xstream.converters.basic.ByteConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.CharConverter -> com.thoughtworks.xstream.converters.basic.CharConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.basic.DateConverter -> com.thoughtworks.xstream.converters.basic.DateConverter:
    java.lang.String[] DEFAULT_ACCEPTABLE_FORMATS -> DEFAULT_ACCEPTABLE_FORMATS
    java.lang.String DEFAULT_PATTERN -> DEFAULT_PATTERN
    java.util.TimeZone UTC -> UTC
    com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat defaultFormat -> defaultFormat
    com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat[] acceptableFormats -> acceptableFormats
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.converters.basic.DoubleConverter -> com.thoughtworks.xstream.converters.basic.DoubleConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.FloatConverter -> com.thoughtworks.xstream.converters.basic.FloatConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.IntConverter -> com.thoughtworks.xstream.converters.basic.IntConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.LongConverter -> com.thoughtworks.xstream.converters.basic.LongConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.NullConverter -> com.thoughtworks.xstream.converters.basic.NullConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.basic.ShortConverter -> com.thoughtworks.xstream.converters.basic.ShortConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.StringBufferConverter -> com.thoughtworks.xstream.converters.basic.StringBufferConverter:
    java.lang.Object fromString(java.lang.String) -> fromString
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.basic.StringBuilderConverter -> com.thoughtworks.xstream.converters.basic.StringBuilderConverter:
    java.lang.Object fromString(java.lang.String) -> fromString
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.basic.StringConverter -> com.thoughtworks.xstream.converters.basic.StringConverter:
    java.util.Map cache -> cache
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.URIConverter -> com.thoughtworks.xstream.converters.basic.URIConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.URLConverter -> com.thoughtworks.xstream.converters.basic.URLConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.basic.UUIDConverter -> com.thoughtworks.xstream.converters.basic.UUIDConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter -> com.thoughtworks.xstream.converters.collections.AbstractCollectionConverter:
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    boolean canConvert(java.lang.Class) -> canConvert
    com.thoughtworks.xstream.mapper.Mapper mapper() -> mapper
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> writeItem
    java.lang.Object readItem(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object) -> readItem
    java.lang.Object createCollection(java.lang.Class) -> createCollection
com.thoughtworks.xstream.converters.collections.ArrayConverter -> com.thoughtworks.xstream.converters.collections.ArrayConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.BitSetConverter -> com.thoughtworks.xstream.converters.collections.BitSetConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.CharArrayConverter -> com.thoughtworks.xstream.converters.collections.CharArrayConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.CollectionConverter -> com.thoughtworks.xstream.converters.collections.CollectionConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection) -> populateCollection
    void populateCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection) -> populateCollection
    void addCurrentElementToCollection(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Collection,java.util.Collection) -> addCurrentElementToCollection
com.thoughtworks.xstream.converters.collections.MapConverter -> com.thoughtworks.xstream.converters.collections.MapConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map) -> populateMap
    void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map) -> populateMap
    void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map) -> putCurrentEntryIntoMap
com.thoughtworks.xstream.converters.collections.PropertiesConverter -> com.thoughtworks.xstream.converters.collections.PropertiesConverter:
    java.lang.reflect.Field defaultsField -> defaultsField
    boolean sort -> sort
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.collections.TreeMapConverter -> com.thoughtworks.xstream.converters.collections.TreeMapConverter:
    java.util.Comparator NULL_MARKER -> NULL_MARKER
    java.lang.reflect.Field comparatorField -> comparatorField
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void marshalComparator(java.util.Comparator,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshalComparator
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.util.Comparator unmarshalComparator(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap) -> unmarshalComparator
    void populateTreeMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.TreeMap,java.util.Comparator) -> populateTreeMap
com.thoughtworks.xstream.converters.collections.TreeMapConverter$1 -> com.thoughtworks.xstream.converters.collections.TreeMapConverter$1:
com.thoughtworks.xstream.converters.collections.TreeMapConverter$NullComparator -> com.thoughtworks.xstream.converters.collections.TreeMapConverter$NullComparator:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.converters.collections.TreeSetConverter -> com.thoughtworks.xstream.converters.collections.TreeSetConverter:
    com.thoughtworks.xstream.converters.collections.TreeMapConverter treeMapConverter -> treeMapConverter
    java.lang.reflect.Field sortedMapField -> sortedMapField
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.collections.TreeSetConverter$1 -> com.thoughtworks.xstream.converters.collections.TreeSetConverter$1:
    com.thoughtworks.xstream.converters.collections.TreeSetConverter this$0 -> this$0
    void populateMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map) -> populateMap
    void putCurrentEntryIntoMap(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.Map,java.util.Map) -> putCurrentEntryIntoMap
com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1 -> com.thoughtworks.xstream.converters.collections.TreeSetConverter$1$1:
    java.util.Map val$target -> val$target
    com.thoughtworks.xstream.converters.collections.TreeSetConverter$1 this$1 -> this$1
    boolean add(java.lang.Object) -> add
    java.lang.Object get(int) -> get
    int size() -> size
com.thoughtworks.xstream.converters.enums.EnumConverter -> com.thoughtworks.xstream.converters.enums.EnumConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.enums.EnumMapConverter -> com.thoughtworks.xstream.converters.enums.EnumMapConverter:
    java.lang.reflect.Field typeField -> typeField
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.enums.EnumSetConverter -> com.thoughtworks.xstream.converters.enums.EnumSetConverter:
    java.lang.reflect.Field typeField -> typeField
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.String joinEnumValues(java.util.EnumSet) -> joinEnumValues
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.enums.EnumSingleValueConverter -> com.thoughtworks.xstream.converters.enums.EnumSingleValueConverter:
    java.lang.Class enumType -> enumType
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.CharsetConverter -> com.thoughtworks.xstream.converters.extended.CharsetConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.ColorConverter -> com.thoughtworks.xstream.converters.extended.ColorConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void write(java.lang.String,int,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> write
com.thoughtworks.xstream.converters.extended.CurrencyConverter -> com.thoughtworks.xstream.converters.extended.CurrencyConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.DurationConverter -> com.thoughtworks.xstream.converters.extended.DurationConverter:
    javax.xml.datatype.DatatypeFactory factory -> factory
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.DurationConverter$1 -> com.thoughtworks.xstream.converters.extended.DurationConverter$1:
    javax.xml.datatype.DatatypeFactory getFactory() -> getFactory
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter -> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter:
    java.lang.ClassLoader classLoader -> classLoader
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    java.lang.reflect.Field HANDLER -> HANDLER
    java.lang.reflect.InvocationHandler DUMMY -> DUMMY
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void addInterfacesToXml(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> addInterfacesToXml
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.DynamicProxyConverter$1 -> com.thoughtworks.xstream.converters.extended.DynamicProxyConverter$1:
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter -> com.thoughtworks.xstream.converters.extended.EncodedByteArrayConverter:
    com.thoughtworks.xstream.core.util.Base64Encoder base64 -> base64
    com.thoughtworks.xstream.converters.basic.ByteConverter byteConverter -> byteConverter
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object unmarshalIndividualByteElements(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshalIndividualByteElements
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.FileConverter -> com.thoughtworks.xstream.converters.extended.FileConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.FontConverter -> com.thoughtworks.xstream.converters.extended.FontConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter -> com.thoughtworks.xstream.converters.extended.GregorianCalendarConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.ISO8601DateConverter -> com.thoughtworks.xstream.converters.extended.ISO8601DateConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.ISO8601GregorianCalendarConverter -> com.thoughtworks.xstream.converters.extended.ISO8601GregorianCalendarConverter:
    org.joda.time.format.DateTimeFormatter[] formattersUTC -> formattersUTC
    org.joda.time.format.DateTimeFormatter[] formattersNoUTC -> formattersNoUTC
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.ISO8601SqlTimestampConverter -> com.thoughtworks.xstream.converters.extended.ISO8601SqlTimestampConverter:
    java.lang.String PADDING -> PADDING
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.JavaClassConverter -> com.thoughtworks.xstream.converters.extended.JavaClassConverter:
    java.lang.ClassLoader classLoader -> classLoader
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.Class loadClass(java.lang.String) -> loadClass
com.thoughtworks.xstream.converters.extended.JavaFieldConverter -> com.thoughtworks.xstream.converters.extended.JavaFieldConverter:
    com.thoughtworks.xstream.converters.SingleValueConverter javaClassConverter -> javaClassConverter
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.JavaMethodConverter -> com.thoughtworks.xstream.converters.extended.JavaMethodConverter:
    com.thoughtworks.xstream.converters.SingleValueConverter javaClassConverter -> javaClassConverter
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void marshalMethod(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.String,java.lang.Class[]) -> marshalMethod
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.LocaleConverter -> com.thoughtworks.xstream.converters.extended.LocaleConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    int[] underscorePositions(java.lang.String) -> underscorePositions
com.thoughtworks.xstream.converters.extended.LookAndFeelConverter -> com.thoughtworks.xstream.converters.extended.LookAndFeelConverter:
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.extended.PropertyEditorCapableConverter -> com.thoughtworks.xstream.converters.extended.PropertyEditorCapableConverter:
    com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor editor -> editor
    java.lang.Class type -> type
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.String toString(java.lang.Object) -> toString
com.thoughtworks.xstream.converters.extended.RegexPatternConverter -> com.thoughtworks.xstream.converters.extended.RegexPatternConverter:
    com.thoughtworks.xstream.converters.Converter defaultConverter -> defaultConverter
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.SqlDateConverter -> com.thoughtworks.xstream.converters.extended.SqlDateConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.SqlTimeConverter -> com.thoughtworks.xstream.converters.extended.SqlTimeConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.SqlTimestampConverter -> com.thoughtworks.xstream.converters.extended.SqlTimestampConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.StackTraceElementConverter -> com.thoughtworks.xstream.converters.extended.StackTraceElementConverter:
    java.util.regex.Pattern PATTERN -> PATTERN
    com.thoughtworks.xstream.converters.extended.StackTraceElementFactory FACTORY -> FACTORY
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.extended.StackTraceElementFactory -> com.thoughtworks.xstream.converters.extended.StackTraceElementFactory:
    java.lang.StackTraceElement nativeMethodElement(java.lang.String,java.lang.String) -> nativeMethodElement
    java.lang.StackTraceElement unknownSourceElement(java.lang.String,java.lang.String) -> unknownSourceElement
    java.lang.StackTraceElement element(java.lang.String,java.lang.String,java.lang.String) -> element
    java.lang.StackTraceElement element(java.lang.String,java.lang.String,java.lang.String,int) -> element
    java.lang.StackTraceElement create(java.lang.String,java.lang.String,java.lang.String,int) -> create
    void setField(java.lang.StackTraceElement,java.lang.String,java.lang.Object) -> setField
com.thoughtworks.xstream.converters.extended.SubjectConverter -> com.thoughtworks.xstream.converters.extended.SubjectConverter:
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void marshalPrincipals(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshalPrincipals
    void marshalPublicCredentials(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshalPublicCredentials
    void marshalPrivateCredentials(java.util.Set,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshalPrivateCredentials
    void marshalReadOnly(boolean,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> marshalReadOnly
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.util.Set unmarshalPrincipals(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshalPrincipals
    java.util.Set unmarshalPublicCredentials(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshalPublicCredentials
    java.util.Set unmarshalPrivateCredentials(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshalPrivateCredentials
    boolean unmarshalReadOnly(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> unmarshalReadOnly
    java.util.Set populateSet(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> populateSet
com.thoughtworks.xstream.converters.extended.TextAttributeConverter -> com.thoughtworks.xstream.converters.extended.TextAttributeConverter:
com.thoughtworks.xstream.converters.extended.ThrowableConverter -> com.thoughtworks.xstream.converters.extended.ThrowableConverter:
    com.thoughtworks.xstream.converters.Converter defaultConverter -> defaultConverter
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter -> com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter:
    java.lang.Class type -> type
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    com.thoughtworks.xstream.converters.ConverterLookup lookup -> lookup
    java.lang.reflect.Field valueField -> valueField
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    boolean fieldIsEqual(com.thoughtworks.xstream.core.util.FastField) -> fieldIsEqual
    com.thoughtworks.xstream.mapper.Mapper access$000(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter) -> access$000
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider access$100(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter) -> access$100
    boolean access$200(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter,com.thoughtworks.xstream.core.util.FastField) -> access$200
    com.thoughtworks.xstream.converters.ConverterLookup access$300(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter) -> access$300
    java.lang.reflect.Field access$400(com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter) -> access$400
com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1 -> com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter$1:
    java.util.Map val$defaultFieldDefinition -> val$defaultFieldDefinition
    java.lang.Class val$sourceType -> val$sourceType
    java.lang.Class[] val$definingType -> val$definingType
    java.lang.Class[] val$fieldType -> val$fieldType
    java.lang.Object[] val$realValue -> val$realValue
    java.lang.String[] val$tagValue -> val$tagValue
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> val$context
    com.thoughtworks.xstream.converters.extended.ToAttributedValueConverter this$0 -> this$0
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.extended.ToStringConverter -> com.thoughtworks.xstream.converters.extended.ToStringConverter:
    java.lang.Class clazz -> clazz
    java.lang.reflect.Constructor ctor -> ctor
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
com.thoughtworks.xstream.converters.javabean.BeanProperty -> com.thoughtworks.xstream.converters.javabean.BeanProperty:
    java.lang.Class memberClass -> memberClass
    java.lang.String propertyName -> propertyName
    java.lang.Class type -> type
    java.lang.reflect.Method getter -> getter
    java.lang.reflect.Method setter -> setter
    java.lang.Object[] EMPTY_ARGS -> EMPTY_ARGS
    java.lang.Class getBeanClass() -> getBeanClass
    java.lang.Class getType() -> getType
    java.lang.String getName() -> getName
    boolean isReadable() -> isReadable
    boolean isWritable() -> isWritable
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object set(java.lang.Object,java.lang.Object) -> set
    void setGetterMethod(java.lang.reflect.Method) -> setGetterMethod
    void setSetterMethod(java.lang.reflect.Method) -> setSetterMethod
com.thoughtworks.xstream.converters.javabean.BeanProvider -> com.thoughtworks.xstream.converters.javabean.BeanProvider:
    java.lang.Object[] NO_PARAMS -> NO_PARAMS
    com.thoughtworks.xstream.converters.javabean.PropertyDictionary propertyDictionary -> propertyDictionary
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void visitSerializableProperties(java.lang.Object,com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor) -> visitSerializableProperties
    void writeProperty(java.lang.Object,java.lang.String,java.lang.Object) -> writeProperty
    java.lang.Class getPropertyType(java.lang.Object,java.lang.String) -> getPropertyType
    boolean propertyDefinedInClass(java.lang.String,java.lang.Class) -> propertyDefinedInClass
    boolean canInstantiate(java.lang.Class) -> canInstantiate
    java.lang.reflect.Constructor getDefaultConstrutor(java.lang.Class) -> getDefaultConstrutor
    java.beans.PropertyDescriptor[] getSerializableProperties(java.lang.Object) -> getSerializableProperties
    boolean canStreamProperty(java.beans.PropertyDescriptor) -> canStreamProperty
    boolean propertyWriteable(java.lang.String,java.lang.Class) -> propertyWriteable
    java.beans.PropertyDescriptor getProperty(java.lang.String,java.lang.Class) -> getProperty
com.thoughtworks.xstream.converters.javabean.BeanProvider$Visitor -> com.thoughtworks.xstream.converters.javabean.BeanProvider$Visitor:
com.thoughtworks.xstream.converters.javabean.ComparingPropertySorter -> com.thoughtworks.xstream.converters.javabean.ComparingPropertySorter:
    java.util.Comparator comparator -> comparator
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter -> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter:
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.converters.javabean.JavaBeanProvider beanProvider -> beanProvider
    java.lang.String classAttributeIdentifier -> classAttributeIdentifier
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.converters.UnmarshallingContext) -> instantiateNewInstance
    java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,java.lang.Object,java.lang.String) -> determineType
    com.thoughtworks.xstream.mapper.Mapper access$000(com.thoughtworks.xstream.converters.javabean.JavaBeanConverter) -> access$000
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1 -> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$1:
    java.lang.Object val$source -> val$source
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    java.lang.String val$classAttributeName -> val$classAttributeName
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> val$context
    com.thoughtworks.xstream.converters.javabean.JavaBeanConverter this$0 -> this$0
    boolean shouldVisit(java.lang.String,java.lang.Class) -> shouldVisit
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
    void writeField(java.lang.String,java.lang.Class,java.lang.Object,java.lang.Class) -> writeField
com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicateFieldException -> com.thoughtworks.xstream.converters.javabean.JavaBeanConverter$DuplicateFieldException:
com.thoughtworks.xstream.converters.javabean.JavaBeanProvider -> com.thoughtworks.xstream.converters.javabean.JavaBeanProvider:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void visitSerializableProperties(java.lang.Object,com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor) -> visitSerializableProperties
    void writeProperty(java.lang.Object,java.lang.String,java.lang.Object) -> writeProperty
    java.lang.Class getPropertyType(java.lang.Object,java.lang.String) -> getPropertyType
    boolean propertyDefinedInClass(java.lang.String,java.lang.Class) -> propertyDefinedInClass
    boolean canInstantiate(java.lang.Class) -> canInstantiate
com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor -> com.thoughtworks.xstream.converters.javabean.JavaBeanProvider$Visitor:
    boolean shouldVisit(java.lang.String,java.lang.Class) -> shouldVisit
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.javabean.NativePropertySorter -> com.thoughtworks.xstream.converters.javabean.NativePropertySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.javabean.PropertyDictionary -> com.thoughtworks.xstream.converters.javabean.PropertyDictionary:
    java.util.Map propertyNameCache -> propertyNameCache
    com.thoughtworks.xstream.converters.javabean.PropertySorter sorter -> sorter
    java.util.Iterator serializablePropertiesFor(java.lang.Class) -> serializablePropertiesFor
    com.thoughtworks.xstream.converters.javabean.BeanProperty property(java.lang.Class,java.lang.String) -> property
    java.util.Iterator propertiesFor(java.lang.Class) -> propertiesFor
    java.beans.PropertyDescriptor propertyDescriptor(java.lang.Class,java.lang.String) -> propertyDescriptor
    java.util.Map buildMap(java.lang.Class) -> buildMap
    void flushCache() -> flushCache
com.thoughtworks.xstream.converters.javabean.PropertySorter -> com.thoughtworks.xstream.converters.javabean.PropertySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter -> com.thoughtworks.xstream.converters.reflection.AbstractAttributedCharacterIteratorAttributeConverter:
    java.lang.reflect.Method getName -> getName
    java.lang.Class type -> type
    java.util.Map attributeMap -> attributeMap
    com.thoughtworks.xstream.converters.reflection.FieldDictionary fieldDictionary -> fieldDictionary
    boolean canConvert(java.lang.Class) -> canConvert
    java.lang.String toString(java.lang.Object) -> toString
    java.lang.Object fromString(java.lang.String) -> fromString
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker serializationMethodInvoker -> serializationMethodInvoker
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider pureJavaReflectionProvider -> pureJavaReflectionProvider
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> doMarshal
    void marshallField(com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object,java.lang.reflect.Field) -> marshallField
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> doUnmarshal
    java.lang.Object unmarshallField(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.lang.Class,java.lang.reflect.Field) -> unmarshallField
    boolean shouldUnmarshalTransientFields() -> shouldUnmarshalTransientFields
    java.util.Map writeValueToImplicitCollection(com.thoughtworks.xstream.converters.UnmarshallingContext,java.lang.Object,java.util.Map,java.lang.Object,java.lang.String) -> writeValueToImplicitCollection
    java.lang.Class determineWhichClassDefinesField(com.thoughtworks.xstream.io.HierarchicalStreamReader) -> determineWhichClassDefinesField
    java.lang.Object instantiateNewInstance(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> instantiateNewInstance
    java.lang.Class determineType(com.thoughtworks.xstream.io.HierarchicalStreamReader,boolean,java.lang.Object,java.lang.String,java.lang.Class) -> determineType
    void flushCache() -> flushCache
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1 -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$1:
    java.util.Set writtenAttributes -> writtenAttributes
    java.util.Map val$defaultFieldDefinition -> val$defaultFieldDefinition
    java.lang.Object val$source -> val$source
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    java.util.List val$fields -> val$fields
    com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0 -> this$0
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2 -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$2:
    java.util.List val$fields -> val$fields
    java.lang.Object val$source -> val$source
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> val$context
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    java.util.Map val$defaultFieldDefinition -> val$defaultFieldDefinition
    com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0 -> this$0
    void writeField(java.lang.String,java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> writeField
    void writeItem(java.lang.Object,com.thoughtworks.xstream.converters.MarshallingContext,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> writeItem
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$3 -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$3:
    com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0 -> this$0
    boolean add(java.lang.Object) -> add
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$ArraysList -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$ArraysList:
    java.lang.Class physicalFieldType -> physicalFieldType
    java.lang.Object toPhysicalArray() -> toPhysicalArray
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$DuplicateFieldException -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$DuplicateFieldException:
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$FieldInfo -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$FieldInfo:
    java.lang.String fieldName -> fieldName
    java.lang.Class type -> type
    java.lang.Class definedIn -> definedIn
    java.lang.Object value -> value
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$MappingList:
    java.util.Map map -> map
    java.lang.String keyFieldName -> keyFieldName
    java.util.Map fieldCache -> fieldCache
    com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter this$0 -> this$0
    boolean add(java.lang.Object) -> add
    java.lang.Object get(int) -> get
    int size() -> size
com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$UnknownFieldException -> com.thoughtworks.xstream.converters.reflection.AbstractReflectionConverter$UnknownFieldException:
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter -> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter:
    java.lang.String DEFAULT_NAMING_MARKER -> DEFAULT_NAMING_MARKER
    java.lang.String CALLBACK_MARKER -> CALLBACK_MARKER
    java.util.Map fieldCache -> fieldCache
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    net.sf.cglib.proxy.Callback[] getCallbacks(java.lang.Object) -> getCallbacks
    java.util.Map createCallbackIndexMap(net.sf.cglib.proxy.Factory) -> createCallbackIndexMap
    java.lang.Object[] createNullArguments(java.lang.Class[]) -> createNullArguments
    net.sf.cglib.proxy.Callback createReverseEngineeredCallbackOfProperType(net.sf.cglib.proxy.Callback,int,java.util.Map) -> createReverseEngineeredCallbackOfProperType
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    void readCallback(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext,java.util.List,java.util.List) -> readCallback
    java.lang.Object create(net.sf.cglib.proxy.Enhancer,java.util.List,boolean) -> create
    java.util.List hierarchyFor(java.lang.Class) -> hierarchyFor
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider -> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider:
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider$1 -> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider$1:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor val$visitor -> val$visitor
    com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$CGLIBFilteringReflectionProvider this$0 -> this$0
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeredCallbackFilter -> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeredCallbackFilter:
    java.util.Map callbackIndexMap -> callbackIndexMap
    int accept(java.lang.reflect.Method) -> accept
com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeringInvocationHandler -> com.thoughtworks.xstream.converters.reflection.CGLIBEnhancedConverter$ReverseEngineeringInvocationHandler:
    java.lang.Integer index -> index
    java.util.Map indexMap -> indexMap
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter -> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter:
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    java.lang.ClassLoader classLoader -> classLoader
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
    com.thoughtworks.xstream.mapper.Mapper access$000(com.thoughtworks.xstream.converters.reflection.ExternalizableConverter) -> access$000
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1 -> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$1:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> val$context
    com.thoughtworks.xstream.converters.reflection.ExternalizableConverter this$0 -> this$0
    void writeToStream(java.lang.Object) -> writeToStream
    void writeFieldsToStream(java.util.Map) -> writeFieldsToStream
    void defaultWriteObject() -> defaultWriteObject
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2 -> com.thoughtworks.xstream.converters.reflection.ExternalizableConverter$2:
    com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader -> val$reader
    com.thoughtworks.xstream.converters.UnmarshallingContext val$context -> val$context
    java.io.Externalizable val$externalizable -> val$externalizable
    com.thoughtworks.xstream.converters.reflection.ExternalizableConverter this$0 -> this$0
    java.lang.Object readFromStream() -> readFromStream
    java.util.Map readFieldsFromStream() -> readFieldsFromStream
    void defaultReadObject() -> defaultReadObject
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
com.thoughtworks.xstream.converters.reflection.FieldDictionary -> com.thoughtworks.xstream.converters.reflection.FieldDictionary:
    java.util.Map keyedByFieldNameCache -> keyedByFieldNameCache
    java.util.Map keyedByFieldKeyCache -> keyedByFieldKeyCache
    com.thoughtworks.xstream.converters.reflection.FieldKeySorter sorter -> sorter
    void init() -> init
    java.util.Iterator serializableFieldsFor(java.lang.Class) -> serializableFieldsFor
    java.util.Iterator fieldsFor(java.lang.Class) -> fieldsFor
    java.lang.reflect.Field field(java.lang.Class,java.lang.String,java.lang.Class) -> field
    java.lang.reflect.Field fieldOrNull(java.lang.Class,java.lang.String,java.lang.Class) -> fieldOrNull
    java.util.Map buildMap(java.lang.Class,boolean) -> buildMap
    void flushCache() -> flushCache
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.FieldKey -> com.thoughtworks.xstream.converters.reflection.FieldKey:
    java.lang.String fieldName -> fieldName
    java.lang.Class declaringClass -> declaringClass
    int depth -> depth
    int order -> order
    java.lang.String getFieldName() -> getFieldName
    java.lang.Class getDeclaringClass() -> getDeclaringClass
    int getDepth() -> getDepth
    int getOrder() -> getOrder
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.thoughtworks.xstream.converters.reflection.FieldKeySorter -> com.thoughtworks.xstream.converters.reflection.FieldKeySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.ImmutableFieldKeySorter -> com.thoughtworks.xstream.converters.reflection.ImmutableFieldKeySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter -> com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter$1 -> com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter$1:
    com.thoughtworks.xstream.converters.reflection.NativeFieldKeySorter this$0 -> this$0
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.converters.reflection.ObjectAccessException -> com.thoughtworks.xstream.converters.reflection.ObjectAccessException:
com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider -> com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider:
    java.util.Map serializedDataCache -> serializedDataCache
    com.thoughtworks.xstream.converters.reflection.FieldDictionary fieldDictionary -> fieldDictionary
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    java.lang.Object instantiateUsingSerialization(java.lang.Class) -> instantiateUsingSerialization
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class) -> writeField
    java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class) -> getFieldType
    boolean fieldDefinedInClass(java.lang.String,java.lang.Class) -> fieldDefinedInClass
    boolean fieldModifiersSupported(java.lang.reflect.Field) -> fieldModifiersSupported
    void validateFieldAccess(java.lang.reflect.Field) -> validateFieldAccess
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    void setFieldDictionary(com.thoughtworks.xstream.converters.reflection.FieldDictionary) -> setFieldDictionary
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider$1 -> com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider$1:
    java.lang.Class val$type -> val$type
    com.thoughtworks.xstream.converters.reflection.PureJavaReflectionProvider this$0 -> this$0
    java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
com.thoughtworks.xstream.converters.reflection.ReflectionConverter -> com.thoughtworks.xstream.converters.reflection.ReflectionConverter:
    boolean canConvert(java.lang.Class) -> canConvert
com.thoughtworks.xstream.converters.reflection.ReflectionProvider -> com.thoughtworks.xstream.converters.reflection.ReflectionProvider:
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class) -> writeField
    java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class) -> getFieldType
    boolean fieldDefinedInClass(java.lang.String,java.lang.Class) -> fieldDefinedInClass
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor -> com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor:
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper -> com.thoughtworks.xstream.converters.reflection.ReflectionProviderWrapper:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider wrapped -> wrapped
    boolean fieldDefinedInClass(java.lang.String,java.lang.Class) -> fieldDefinedInClass
    java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    java.lang.Class getFieldType(java.lang.Object,java.lang.String,java.lang.Class) -> getFieldType
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class) -> writeField
com.thoughtworks.xstream.converters.reflection.SelfStreamingInstanceChecker -> com.thoughtworks.xstream.converters.reflection.SelfStreamingInstanceChecker:
    java.lang.Object self -> self
    com.thoughtworks.xstream.converters.Converter defaultConverter -> defaultConverter
    boolean canConvert(java.lang.Class) -> canConvert
    void marshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> marshal
    java.lang.Object unmarshal(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> unmarshal
com.thoughtworks.xstream.converters.reflection.SerializableConverter -> com.thoughtworks.xstream.converters.reflection.SerializableConverter:
    java.lang.String ELEMENT_NULL -> ELEMENT_NULL
    java.lang.String ELEMENT_DEFAULT -> ELEMENT_DEFAULT
    java.lang.String ELEMENT_UNSERIALIZABLE_PARENTS -> ELEMENT_UNSERIALIZABLE_PARENTS
    java.lang.String ATTRIBUTE_CLASS -> ATTRIBUTE_CLASS
    java.lang.String ATTRIBUTE_SERIALIZATION -> ATTRIBUTE_SERIALIZATION
    java.lang.String ATTRIBUTE_VALUE_CUSTOM -> ATTRIBUTE_VALUE_CUSTOM
    java.lang.String ELEMENT_FIELDS -> ELEMENT_FIELDS
    java.lang.String ELEMENT_FIELD -> ELEMENT_FIELD
    java.lang.String ATTRIBUTE_NAME -> ATTRIBUTE_NAME
    java.lang.ClassLoader classLoader -> classLoader
    boolean canConvert(java.lang.Class) -> canConvert
    boolean isSerializable(java.lang.Class) -> isSerializable
    void doMarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> doMarshal
    void marshalUnserializableParent(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext,java.lang.Object) -> marshalUnserializableParent
    java.lang.Object readField(java.io.ObjectStreamField,java.lang.Class,java.lang.Object) -> readField
    java.util.List hierarchyFor(java.lang.Class) -> hierarchyFor
    java.lang.Object doUnmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> doUnmarshal
    void doMarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.MarshallingContext) -> doMarshalConditionally
    java.lang.Object doUnmarshalConditionally(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.UnmarshallingContext) -> doUnmarshalConditionally
    java.lang.Object access$000(com.thoughtworks.xstream.converters.reflection.SerializableConverter,java.io.ObjectStreamField,java.lang.Class,java.lang.Object) -> access$000
com.thoughtworks.xstream.converters.reflection.SerializableConverter$1 -> com.thoughtworks.xstream.converters.reflection.SerializableConverter$1:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter val$writer -> val$writer
    com.thoughtworks.xstream.converters.MarshallingContext val$context -> val$context
    java.lang.Class[] val$currentType -> val$currentType
    java.lang.Object val$source -> val$source
    boolean[] val$writtenClassWrapper -> val$writtenClassWrapper
    com.thoughtworks.xstream.converters.reflection.SerializableConverter this$0 -> this$0
    void writeToStream(java.lang.Object) -> writeToStream
    void writeFieldsToStream(java.util.Map) -> writeFieldsToStream
    void defaultWriteObject() -> defaultWriteObject
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2 -> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2:
    com.thoughtworks.xstream.io.HierarchicalStreamReader val$reader -> val$reader
    com.thoughtworks.xstream.converters.UnmarshallingContext val$context -> val$context
    java.lang.Object val$result -> val$result
    java.lang.Class[] val$currentType -> val$currentType
    com.thoughtworks.xstream.converters.reflection.SerializableConverter this$0 -> this$0
    java.lang.Object readFromStream() -> readFromStream
    java.util.Map readFieldsFromStream() -> readFieldsFromStream
    void defaultReadObject() -> defaultReadObject
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
com.thoughtworks.xstream.converters.reflection.SerializableConverter$2$1 -> com.thoughtworks.xstream.converters.reflection.SerializableConverter$2$1:
    java.io.ObjectInputValidation val$validation -> val$validation
    com.thoughtworks.xstream.converters.reflection.SerializableConverter$2 this$1 -> this$1
    void run() -> run
com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider -> com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider:
    void visitSerializableFields(java.lang.Object,com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor) -> visitSerializableFields
com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider$1 -> com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider$1:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor val$visitor -> val$visitor
    com.thoughtworks.xstream.converters.reflection.SerializableConverter$UnserializableParentsReflectionProvider this$0 -> this$0
    void visit(java.lang.String,java.lang.Class,java.lang.Class,java.lang.Object) -> visit
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker -> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker:
    java.lang.reflect.Method NO_METHOD -> NO_METHOD
    java.lang.Object[] EMPTY_ARGS -> EMPTY_ARGS
    com.thoughtworks.xstream.core.util.FastField[] OBJECT_TYPE_FIELDS -> OBJECT_TYPE_FIELDS
    java.util.Map cache -> cache
    java.lang.Object callReadResolve(java.lang.Object) -> callReadResolve
    java.lang.Object callWriteReplace(java.lang.Object) -> callWriteReplace
    boolean supportsReadObject(java.lang.Class,boolean) -> supportsReadObject
    void callReadObject(java.lang.Class,java.lang.Object,java.io.ObjectInputStream) -> callReadObject
    boolean supportsWriteObject(java.lang.Class,boolean) -> supportsWriteObject
    void callWriteObject(java.lang.Class,java.lang.Object,java.io.ObjectOutputStream) -> callWriteObject
    java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[],boolean) -> getMethod
    java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    void flushCache() -> flushCache
com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker$1 -> com.thoughtworks.xstream.converters.reflection.SerializationMethodInvoker$1:
    void noMethod() -> noMethod
com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter -> com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter:
    java.util.Map map -> map
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
    void registerFieldOrder(java.lang.Class,java.lang.String[]) -> registerFieldOrder
    void flushCache() -> flushCache
com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter$FieldComparator -> com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter$FieldComparator:
    java.lang.String[] fieldOrder -> fieldOrder
    com.thoughtworks.xstream.converters.reflection.SortableFieldKeySorter this$0 -> this$0
    int compare(java.lang.String,java.lang.String) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider -> com.thoughtworks.xstream.converters.reflection.Sun14ReflectionProvider:
    sun.misc.Unsafe unsafe -> unsafe
    java.lang.Exception exception -> exception
    java.util.Map fieldOffsetCache -> fieldOffsetCache
    sun.reflect.ReflectionFactory reflectionFactory -> reflectionFactory
    java.util.Map constructorCache -> constructorCache
    java.lang.Object newInstance(java.lang.Class) -> newInstance
    java.lang.reflect.Constructor getMungedConstructor(java.lang.Class) -> getMungedConstructor
    void writeField(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Class) -> writeField
    void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object) -> write
    long getFieldOffset(java.lang.reflect.Field) -> getFieldOffset
    void validateFieldAccess(java.lang.reflect.Field) -> validateFieldAccess
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter -> com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter:
    java.util.Map sort(java.lang.Class,java.util.Map) -> sort
com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter$1 -> com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter$1:
    com.thoughtworks.xstream.converters.reflection.XStream12FieldKeySorter this$0 -> this$0
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.core.AbstractReferenceMarshaller -> com.thoughtworks.xstream.core.AbstractReferenceMarshaller:
    com.thoughtworks.xstream.core.util.ObjectIdDictionary references -> references
    com.thoughtworks.xstream.core.util.ObjectIdDictionary implicitElements -> implicitElements
    com.thoughtworks.xstream.io.path.PathTracker pathTracker -> pathTracker
    com.thoughtworks.xstream.io.path.Path lastPath -> lastPath
    void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convert
    java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReference
    java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReferenceKey
    void fireValidReference(java.lang.Object) -> fireValidReference
    com.thoughtworks.xstream.core.util.ObjectIdDictionary access$000(com.thoughtworks.xstream.core.AbstractReferenceMarshaller) -> access$000
    com.thoughtworks.xstream.io.path.PathTracker access$100(com.thoughtworks.xstream.core.AbstractReferenceMarshaller) -> access$100
    com.thoughtworks.xstream.core.util.ObjectIdDictionary access$200(com.thoughtworks.xstream.core.AbstractReferenceMarshaller) -> access$200
com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1 -> com.thoughtworks.xstream.core.AbstractReferenceMarshaller$1:
    java.lang.Object val$newReferenceKey -> val$newReferenceKey
    com.thoughtworks.xstream.io.path.Path val$currentPath -> val$currentPath
    com.thoughtworks.xstream.core.AbstractReferenceMarshaller this$0 -> this$0
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
    java.lang.Object get(java.lang.Object) -> get
    void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convertAnother
    void convertAnother(java.lang.Object) -> convertAnother
    void replace(java.lang.Object,java.lang.Object) -> replace
    java.lang.Object lookupReference(java.lang.Object) -> lookupReference
    com.thoughtworks.xstream.io.path.Path currentPath() -> currentPath
    void registerImplicit(java.lang.Object) -> registerImplicit
com.thoughtworks.xstream.core.AbstractReferenceMarshaller$Id -> com.thoughtworks.xstream.core.AbstractReferenceMarshaller$Id:
    java.lang.Object item -> item
    com.thoughtworks.xstream.io.path.Path path -> path
    java.lang.Object getItem() -> getItem
    com.thoughtworks.xstream.io.path.Path getPath() -> getPath
com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException -> com.thoughtworks.xstream.core.AbstractReferenceMarshaller$ReferencedImplicitElementException:
com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller -> com.thoughtworks.xstream.core.AbstractReferenceUnmarshaller:
    java.lang.Object NULL -> NULL
    java.util.Map values -> values
    com.thoughtworks.xstream.core.util.FastStack parentStack -> parentStack
    java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter) -> convert
    java.lang.Object getReferenceKey(java.lang.String) -> getReferenceKey
    java.lang.Object getCurrentReferenceKey() -> getCurrentReferenceKey
com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy -> com.thoughtworks.xstream.core.AbstractTreeMarshallingStrategy:
    java.lang.Object unmarshal(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> unmarshal
    void marshal(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.Object,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper,com.thoughtworks.xstream.converters.DataHolder) -> marshal
    com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createUnmarshallingContext
    com.thoughtworks.xstream.core.TreeMarshaller createMarshallingContext(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createMarshallingContext
com.thoughtworks.xstream.core.BaseException -> com.thoughtworks.xstream.core.BaseException:
    java.lang.Throwable getCause() -> getCause
com.thoughtworks.xstream.core.Caching -> com.thoughtworks.xstream.core.Caching:
    void flushCache() -> flushCache
com.thoughtworks.xstream.core.DefaultConverterLookup -> com.thoughtworks.xstream.core.DefaultConverterLookup:
    com.thoughtworks.xstream.core.util.PrioritizedList converters -> converters
    java.util.Map typeToConverterMap -> typeToConverterMap
    com.thoughtworks.xstream.converters.Converter lookupConverterForType(java.lang.Class) -> lookupConverterForType
    void registerConverter(com.thoughtworks.xstream.converters.Converter,int) -> registerConverter
    void flushCache() -> flushCache
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.core.JVM -> com.thoughtworks.xstream.core.JVM:
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    java.util.Map loaderCache -> loaderCache
    boolean supportsAWT -> supportsAWT
    boolean supportsSwing -> supportsSwing
    boolean supportsSQL -> supportsSQL
    boolean optimizedTreeSetAddAll -> optimizedTreeSetAddAll
    boolean optimizedTreeMapPutAll -> optimizedTreeMapPutAll
    boolean canParseUTCDateFormat -> canParseUTCDateFormat
    java.lang.String vendor -> vendor
    float majorJavaVersion -> majorJavaVersion
    boolean reverseFieldOrder -> reverseFieldOrder
    float DEFAULT_JAVA_VERSION -> DEFAULT_JAVA_VERSION
    float getMajorJavaVersion() -> getMajorJavaVersion
    boolean is14() -> is14
    boolean is15() -> is15
    boolean is16() -> is16
    boolean is17() -> is17
    boolean is18() -> is18
    boolean isSun() -> isSun
    boolean isOracle() -> isOracle
    boolean isApple() -> isApple
    boolean isHPUX() -> isHPUX
    boolean isIBM() -> isIBM
    boolean isBlackdown() -> isBlackdown
    boolean isDiablo() -> isDiablo
    boolean isHarmony() -> isHarmony
    boolean isAndroid() -> isAndroid
    boolean isBEAWithUnsafeSupport() -> isBEAWithUnsafeSupport
    boolean isHitachi() -> isHitachi
    boolean isSAP() -> isSAP
    java.lang.Class loadClass(java.lang.String) -> loadClass
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider bestReflectionProvider() -> bestReflectionProvider
    boolean canUseSun14ReflectionProvider() -> canUseSun14ReflectionProvider
    boolean canUseHarmonyReflectionProvider() -> canUseHarmonyReflectionProvider
    boolean reverseFieldDefinition() -> reverseFieldDefinition
    boolean supportsAWT() -> supportsAWT
    boolean supportsSwing() -> supportsSwing
    boolean supportsSQL() -> supportsSQL
    boolean hasOptimizedTreeSetAddAll() -> hasOptimizedTreeSetAddAll
    boolean hasOptimizedTreeMapPutAll() -> hasOptimizedTreeMapPutAll
    boolean canParseUTCDateFormat() -> canParseUTCDateFormat
    void flushCache() -> flushCache
    java.lang.Object readResolve() -> readResolve
    void main(java.lang.String[]) -> main
com.thoughtworks.xstream.core.JVM$1 -> com.thoughtworks.xstream.core.JVM$1:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.core.MapBackedDataHolder -> com.thoughtworks.xstream.core.MapBackedDataHolder:
    java.util.Map map -> map
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
com.thoughtworks.xstream.core.ReferenceByIdMarshaller -> com.thoughtworks.xstream.core.ReferenceByIdMarshaller:
    com.thoughtworks.xstream.core.ReferenceByIdMarshaller$IDGenerator idGenerator -> idGenerator
    java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReference
    java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReferenceKey
    void fireValidReference(java.lang.Object) -> fireValidReference
com.thoughtworks.xstream.core.ReferenceByIdMarshaller$IDGenerator -> com.thoughtworks.xstream.core.ReferenceByIdMarshaller$IDGenerator:
    java.lang.String next(java.lang.Object) -> next
com.thoughtworks.xstream.core.ReferenceByIdMarshallingStrategy -> com.thoughtworks.xstream.core.ReferenceByIdMarshallingStrategy:
    com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createUnmarshallingContext
    com.thoughtworks.xstream.core.TreeMarshaller createMarshallingContext(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createMarshallingContext
com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller -> com.thoughtworks.xstream.core.ReferenceByIdUnmarshaller:
    java.lang.Object getReferenceKey(java.lang.String) -> getReferenceKey
    java.lang.Object getCurrentReferenceKey() -> getCurrentReferenceKey
com.thoughtworks.xstream.core.ReferenceByXPathMarshaller -> com.thoughtworks.xstream.core.ReferenceByXPathMarshaller:
    int mode -> mode
    java.lang.String createReference(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReference
    java.lang.Object createReferenceKey(com.thoughtworks.xstream.io.path.Path,java.lang.Object) -> createReferenceKey
    void fireValidReference(java.lang.Object) -> fireValidReference
com.thoughtworks.xstream.core.ReferenceByXPathMarshallingStrategy -> com.thoughtworks.xstream.core.ReferenceByXPathMarshallingStrategy:
    int RELATIVE -> RELATIVE
    int ABSOLUTE -> ABSOLUTE
    int SINGLE_NODE -> SINGLE_NODE
    int mode -> mode
    com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createUnmarshallingContext
    com.thoughtworks.xstream.core.TreeMarshaller createMarshallingContext(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createMarshallingContext
com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller -> com.thoughtworks.xstream.core.ReferenceByXPathUnmarshaller:
    com.thoughtworks.xstream.io.path.PathTracker pathTracker -> pathTracker
    boolean isNameEncoding -> isNameEncoding
    java.lang.Object getReferenceKey(java.lang.String) -> getReferenceKey
    java.lang.Object getCurrentReferenceKey() -> getCurrentReferenceKey
com.thoughtworks.xstream.core.ReferencingMarshallingContext -> com.thoughtworks.xstream.core.ReferencingMarshallingContext:
    com.thoughtworks.xstream.io.path.Path currentPath() -> currentPath
    java.lang.Object lookupReference(java.lang.Object) -> lookupReference
    void replace(java.lang.Object,java.lang.Object) -> replace
    void registerImplicit(java.lang.Object) -> registerImplicit
com.thoughtworks.xstream.core.SequenceGenerator -> com.thoughtworks.xstream.core.SequenceGenerator:
    int counter -> counter
    java.lang.String next(java.lang.Object) -> next
com.thoughtworks.xstream.core.TreeMarshaller -> com.thoughtworks.xstream.core.TreeMarshaller:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter writer -> writer
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.core.util.ObjectIdDictionary parentObjects -> parentObjects
    com.thoughtworks.xstream.converters.DataHolder dataHolder -> dataHolder
    void convertAnother(java.lang.Object) -> convertAnother
    void convertAnother(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convertAnother
    void convert(java.lang.Object,com.thoughtworks.xstream.converters.Converter) -> convert
    void start(java.lang.Object,com.thoughtworks.xstream.converters.DataHolder) -> start
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
    void lazilyCreateDataHolder() -> lazilyCreateDataHolder
    com.thoughtworks.xstream.mapper.Mapper getMapper() -> getMapper
com.thoughtworks.xstream.core.TreeMarshaller$CircularReferenceException -> com.thoughtworks.xstream.core.TreeMarshaller$CircularReferenceException:
com.thoughtworks.xstream.core.TreeMarshallingStrategy -> com.thoughtworks.xstream.core.TreeMarshallingStrategy:
    com.thoughtworks.xstream.core.TreeUnmarshaller createUnmarshallingContext(java.lang.Object,com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createUnmarshallingContext
    com.thoughtworks.xstream.core.TreeMarshaller createMarshallingContext(com.thoughtworks.xstream.io.HierarchicalStreamWriter,com.thoughtworks.xstream.converters.ConverterLookup,com.thoughtworks.xstream.mapper.Mapper) -> createMarshallingContext
com.thoughtworks.xstream.core.TreeUnmarshaller -> com.thoughtworks.xstream.core.TreeUnmarshaller:
    java.lang.Object root -> root
    com.thoughtworks.xstream.io.HierarchicalStreamReader reader -> reader
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    com.thoughtworks.xstream.mapper.Mapper mapper -> mapper
    com.thoughtworks.xstream.core.util.FastStack types -> types
    com.thoughtworks.xstream.converters.DataHolder dataHolder -> dataHolder
    com.thoughtworks.xstream.core.util.PrioritizedList validationList -> validationList
    java.lang.Object convertAnother(java.lang.Object,java.lang.Class) -> convertAnother
    java.lang.Object convertAnother(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter) -> convertAnother
    java.lang.Object convert(java.lang.Object,java.lang.Class,com.thoughtworks.xstream.converters.Converter) -> convert
    void addInformationTo(com.thoughtworks.xstream.converters.ErrorWriter,java.lang.Class,com.thoughtworks.xstream.converters.Converter,java.lang.Object) -> addInformationTo
    void addCompletionCallback(java.lang.Runnable,int) -> addCompletionCallback
    java.lang.Object currentObject() -> currentObject
    java.lang.Class getRequiredType() -> getRequiredType
    java.lang.Object get(java.lang.Object) -> get
    void put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator keys() -> keys
    void lazilyCreateDataHolder() -> lazilyCreateDataHolder
    java.lang.Object start(com.thoughtworks.xstream.converters.DataHolder) -> start
    com.thoughtworks.xstream.mapper.Mapper getMapper() -> getMapper
com.thoughtworks.xstream.core.util.ArrayIterator -> com.thoughtworks.xstream.core.util.ArrayIterator:
    java.lang.Object array -> array
    int idx -> idx
    int length -> length
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.thoughtworks.xstream.core.util.Base64Encoder -> com.thoughtworks.xstream.core.util.Base64Encoder:
    char[] SIXTY_FOUR_CHARS -> SIXTY_FOUR_CHARS
    int[] REVERSE_MAPPING -> REVERSE_MAPPING
    java.lang.String encode(byte[]) -> encode
    byte[] decode(java.lang.String) -> decode
    int mapCharToInt(java.io.Reader) -> mapCharToInt
com.thoughtworks.xstream.core.util.ClassLoaderReference -> com.thoughtworks.xstream.core.util.ClassLoaderReference:
    java.lang.ClassLoader reference -> reference
    java.lang.Class loadClass(java.lang.String) -> loadClass
    java.lang.ClassLoader getReference() -> getReference
    void setReference(java.lang.ClassLoader) -> setReference
    java.lang.Object writeReplace() -> writeReplace
com.thoughtworks.xstream.core.util.ClassLoaderReference$Replacement -> com.thoughtworks.xstream.core.util.ClassLoaderReference$Replacement:
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.core.util.Cloneables -> com.thoughtworks.xstream.core.util.Cloneables:
    java.lang.Object clone(java.lang.Object) -> clone
    java.lang.Object cloneIfPossible(java.lang.Object) -> cloneIfPossible
com.thoughtworks.xstream.core.util.CompositeClassLoader -> com.thoughtworks.xstream.core.util.CompositeClassLoader:
    java.lang.ref.ReferenceQueue queue -> queue
    java.util.List classLoaders -> classLoaders
    void add(java.lang.ClassLoader) -> add
    void addInternal(java.lang.ClassLoader) -> addInternal
    java.lang.Class loadClass(java.lang.String) -> loadClass
    void cleanup() -> cleanup
com.thoughtworks.xstream.core.util.CompositeClassLoader$1 -> com.thoughtworks.xstream.core.util.CompositeClassLoader$1:
    com.thoughtworks.xstream.core.util.CompositeClassLoader this$0 -> this$0
    boolean addAll(java.util.Collection) -> addAll
    boolean add(java.lang.Object) -> add
com.thoughtworks.xstream.core.util.CustomObjectInputStream -> com.thoughtworks.xstream.core.util.CustomObjectInputStream:
    com.thoughtworks.xstream.core.util.FastStack callbacks -> callbacks
    java.lang.ClassLoader classLoader -> classLoader
    java.lang.String DATA_HOLDER_KEY -> DATA_HOLDER_KEY
    com.thoughtworks.xstream.core.util.CustomObjectInputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback,java.lang.ClassLoader) -> getInstance
    void pushCallback(com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback) -> pushCallback
    com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback popCallback() -> popCallback
    com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback peekCallback() -> peekCallback
    java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
    void defaultReadObject() -> defaultReadObject
    java.lang.Object readObjectOverride() -> readObjectOverride
    java.lang.Object readUnshared() -> readUnshared
    boolean readBoolean() -> readBoolean
    byte readByte() -> readByte
    int readUnsignedByte() -> readUnsignedByte
    int readInt() -> readInt
    char readChar() -> readChar
    float readFloat() -> readFloat
    double readDouble() -> readDouble
    long readLong() -> readLong
    short readShort() -> readShort
    int readUnsignedShort() -> readUnsignedShort
    java.lang.String readUTF() -> readUTF
    void readFully(byte[]) -> readFully
    void readFully(byte[],int,int) -> readFully
    int read() -> read
    int read(byte[],int,int) -> read
    int read(byte[]) -> read
    java.io.ObjectInputStream$GetField readFields() -> readFields
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
    int available() -> available
    java.lang.String readLine() -> readLine
    int skipBytes(int) -> skipBytes
    long skip(long) -> skip
    void mark(int) -> mark
    void reset() -> reset
    boolean markSupported() -> markSupported
com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField -> com.thoughtworks.xstream.core.util.CustomObjectInputStream$CustomGetField:
    java.util.Map fields -> fields
    com.thoughtworks.xstream.core.util.CustomObjectInputStream this$0 -> this$0
    java.io.ObjectStreamClass getObjectStreamClass() -> getObjectStreamClass
    java.lang.Object get(java.lang.String) -> get
    boolean defaulted(java.lang.String) -> defaulted
    byte get(java.lang.String,byte) -> get
    char get(java.lang.String,char) -> get
    double get(java.lang.String,double) -> get
    float get(java.lang.String,float) -> get
    int get(java.lang.String,int) -> get
    long get(java.lang.String,long) -> get
    short get(java.lang.String,short) -> get
    boolean get(java.lang.String,boolean) -> get
    java.lang.Object get(java.lang.String,java.lang.Object) -> get
com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback -> com.thoughtworks.xstream.core.util.CustomObjectInputStream$StreamCallback:
    java.lang.Object readFromStream() -> readFromStream
    java.util.Map readFieldsFromStream() -> readFieldsFromStream
    void defaultReadObject() -> defaultReadObject
    void registerValidation(java.io.ObjectInputValidation,int) -> registerValidation
    void close() -> close
com.thoughtworks.xstream.core.util.CustomObjectOutputStream -> com.thoughtworks.xstream.core.util.CustomObjectOutputStream:
    com.thoughtworks.xstream.core.util.FastStack callbacks -> callbacks
    com.thoughtworks.xstream.core.util.FastStack customFields -> customFields
    java.lang.String DATA_HOLDER_KEY -> DATA_HOLDER_KEY
    com.thoughtworks.xstream.core.util.CustomObjectOutputStream getInstance(com.thoughtworks.xstream.converters.DataHolder,com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback) -> getInstance
    void pushCallback(com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback) -> pushCallback
    com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback popCallback() -> popCallback
    com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback peekCallback() -> peekCallback
    void defaultWriteObject() -> defaultWriteObject
    void writeObjectOverride(java.lang.Object) -> writeObjectOverride
    void writeBoolean(boolean) -> writeBoolean
    void writeByte(int) -> writeByte
    void writeInt(int) -> writeInt
    void writeChar(int) -> writeChar
    void writeDouble(double) -> writeDouble
    void writeFloat(float) -> writeFloat
    void writeLong(long) -> writeLong
    void writeShort(int) -> writeShort
    void write(byte[]) -> write
    void writeChars(java.lang.String) -> writeChars
    void writeUTF(java.lang.String) -> writeUTF
    void write(int) -> write
    void write(byte[],int,int) -> write
    void flush() -> flush
    void close() -> close
    java.io.ObjectOutputStream$PutField putFields() -> putFields
    void writeFields() -> writeFields
    void reset() -> reset
    void useProtocolVersion(int) -> useProtocolVersion
    void writeBytes(java.lang.String) -> writeBytes
    void writeUnshared(java.lang.Object) -> writeUnshared
com.thoughtworks.xstream.core.util.CustomObjectOutputStream$1 -> com.thoughtworks.xstream.core.util.CustomObjectOutputStream$1:
com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField -> com.thoughtworks.xstream.core.util.CustomObjectOutputStream$CustomPutField:
    java.util.Map fields -> fields
    com.thoughtworks.xstream.core.util.CustomObjectOutputStream this$0 -> this$0
    java.util.Map asMap() -> asMap
    void write(java.io.ObjectOutput) -> write
    void put(java.lang.String,java.lang.Object) -> put
    void put(java.lang.String,byte) -> put
    void put(java.lang.String,char) -> put
    void put(java.lang.String,double) -> put
    void put(java.lang.String,float) -> put
    void put(java.lang.String,int) -> put
    void put(java.lang.String,long) -> put
    void put(java.lang.String,short) -> put
    void put(java.lang.String,boolean) -> put
com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback -> com.thoughtworks.xstream.core.util.CustomObjectOutputStream$StreamCallback:
    void writeToStream(java.lang.Object) -> writeToStream
    void writeFieldsToStream(java.util.Map) -> writeFieldsToStream
    void defaultWriteObject() -> defaultWriteObject
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.core.util.DependencyInjectionFactory -> com.thoughtworks.xstream.core.util.DependencyInjectionFactory:
    java.lang.Object newInstance(java.lang.Class,java.lang.Object[]) -> newInstance
    java.lang.Object newInstance(java.lang.Class,java.lang.Object[],java.util.BitSet) -> newInstance
com.thoughtworks.xstream.core.util.DependencyInjectionFactory$1 -> com.thoughtworks.xstream.core.util.DependencyInjectionFactory$1:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.core.util.DependencyInjectionFactory$TypedValue -> com.thoughtworks.xstream.core.util.DependencyInjectionFactory$TypedValue:
    java.lang.Class type -> type
    java.lang.Object value -> value
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.FastField -> com.thoughtworks.xstream.core.util.FastField:
    java.lang.String name -> name
    java.lang.String declaringClass -> declaringClass
    java.lang.String getName() -> getName
    java.lang.String getDeclaringClass() -> getDeclaringClass
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.FastStack -> com.thoughtworks.xstream.core.util.FastStack:
    java.lang.Object[] stack -> stack
    int pointer -> pointer
    java.lang.Object push(java.lang.Object) -> push
    void popSilently() -> popSilently
    java.lang.Object pop() -> pop
    java.lang.Object peek() -> peek
    java.lang.Object replace(java.lang.Object) -> replace
    void replaceSilently(java.lang.Object) -> replaceSilently
    int size() -> size
    boolean hasStuff() -> hasStuff
    java.lang.Object get(int) -> get
    void resizeStack(int) -> resizeStack
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.Fields -> com.thoughtworks.xstream.core.util.Fields:
    java.lang.reflect.Field find(java.lang.Class,java.lang.String) -> find
    void write(java.lang.reflect.Field,java.lang.Object,java.lang.Object) -> write
    java.lang.Object read(java.lang.reflect.Field,java.lang.Object) -> read
com.thoughtworks.xstream.core.util.HierarchicalStreams -> com.thoughtworks.xstream.core.util.HierarchicalStreams:
    java.lang.Class readClassType(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper) -> readClassType
    java.lang.String readClassAttribute(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.mapper.Mapper) -> readClassAttribute
com.thoughtworks.xstream.core.util.ObjectIdDictionary -> com.thoughtworks.xstream.core.util.ObjectIdDictionary:
    java.util.Map map -> map
    java.lang.ref.ReferenceQueue queue -> queue
    void associateId(java.lang.Object,java.lang.Object) -> associateId
    java.lang.Object lookupId(java.lang.Object) -> lookupId
    boolean containsId(java.lang.Object) -> containsId
    void removeId(java.lang.Object) -> removeId
    int size() -> size
    void cleanup() -> cleanup
    java.lang.ref.ReferenceQueue access$000(com.thoughtworks.xstream.core.util.ObjectIdDictionary) -> access$000
com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper -> com.thoughtworks.xstream.core.util.ObjectIdDictionary$IdWrapper:
    java.lang.Object obj -> obj
    int hashCode -> hashCode
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.Object get() -> get
com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper -> com.thoughtworks.xstream.core.util.ObjectIdDictionary$WeakIdWrapper:
    int hashCode -> hashCode
    com.thoughtworks.xstream.core.util.ObjectIdDictionary this$0 -> this$0
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.ObjectIdDictionary$Wrapper -> com.thoughtworks.xstream.core.util.ObjectIdDictionary$Wrapper:
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    java.lang.Object get() -> get
com.thoughtworks.xstream.core.util.OrderRetainingMap -> com.thoughtworks.xstream.core.util.OrderRetainingMap:
    com.thoughtworks.xstream.core.util.OrderRetainingMap$ArraySet keyOrder -> keyOrder
    java.util.List valueOrder -> valueOrder
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Collection values() -> values
    java.util.Set keySet() -> keySet
    java.util.Set entrySet() -> entrySet
com.thoughtworks.xstream.core.util.OrderRetainingMap$1 -> com.thoughtworks.xstream.core.util.OrderRetainingMap$1:
com.thoughtworks.xstream.core.util.OrderRetainingMap$ArraySet -> com.thoughtworks.xstream.core.util.OrderRetainingMap$ArraySet:
com.thoughtworks.xstream.core.util.Pool -> com.thoughtworks.xstream.core.util.Pool:
    int initialPoolSize -> initialPoolSize
    int maxPoolSize -> maxPoolSize
    com.thoughtworks.xstream.core.util.Pool$Factory factory -> factory
    java.lang.Object[] pool -> pool
    int nextAvailable -> nextAvailable
    java.lang.Object mutex -> mutex
    java.lang.Object fetchFromPool() -> fetchFromPool
    void putInPool(java.lang.Object) -> putInPool
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.core.util.Pool$Factory -> com.thoughtworks.xstream.core.util.Pool$Factory:
    java.lang.Object newInstance() -> newInstance
com.thoughtworks.xstream.core.util.PresortedMap -> com.thoughtworks.xstream.core.util.PresortedMap:
    com.thoughtworks.xstream.core.util.PresortedMap$ArraySet set -> set
    java.util.Comparator comparator -> comparator
    java.util.Comparator comparator() -> comparator
    java.util.Set entrySet() -> entrySet
    java.lang.Object firstKey() -> firstKey
    java.util.SortedMap headMap(java.lang.Object) -> headMap
    java.util.Set keySet() -> keySet
    java.lang.Object lastKey() -> lastKey
    java.util.SortedMap subMap(java.lang.Object,java.lang.Object) -> subMap
    java.util.SortedMap tailMap(java.lang.Object) -> tailMap
    java.util.Collection values() -> values
    void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    boolean isEmpty() -> isEmpty
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    void putAll(java.util.Map) -> putAll
    java.lang.Object remove(java.lang.Object) -> remove
    int size() -> size
com.thoughtworks.xstream.core.util.PresortedMap$1 -> com.thoughtworks.xstream.core.util.PresortedMap$1:
    java.lang.Object val$key -> val$key
    java.lang.Object val$value -> val$value
    com.thoughtworks.xstream.core.util.PresortedMap this$0 -> this$0
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.thoughtworks.xstream.core.util.PresortedMap$ArraySet -> com.thoughtworks.xstream.core.util.PresortedMap$ArraySet:
com.thoughtworks.xstream.core.util.PresortedMap$ArraySetComparator -> com.thoughtworks.xstream.core.util.PresortedMap$ArraySetComparator:
    java.util.ArrayList list -> list
    java.util.Map$Entry[] array -> array
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.core.util.PresortedSet -> com.thoughtworks.xstream.core.util.PresortedSet:
    java.util.List list -> list
    java.util.Comparator comparator -> comparator
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.util.List subList(int,int) -> subList
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    java.util.Comparator comparator() -> comparator
    java.lang.Object first() -> first
    java.util.SortedSet headSet(java.lang.Object) -> headSet
    java.lang.Object last() -> last
    java.util.SortedSet subSet(java.lang.Object,java.lang.Object) -> subSet
    java.util.SortedSet tailSet(java.lang.Object) -> tailSet
com.thoughtworks.xstream.core.util.Primitives -> com.thoughtworks.xstream.core.util.Primitives:
    java.util.Map BOX -> BOX
    java.util.Map UNBOX -> UNBOX
    java.util.Map NAMED_PRIMITIVE -> NAMED_PRIMITIVE
    java.util.Map REPRESENTING_CHAR -> REPRESENTING_CHAR
    java.lang.Class box(java.lang.Class) -> box
    java.lang.Class unbox(java.lang.Class) -> unbox
    boolean isBoxed(java.lang.Class) -> isBoxed
    java.lang.Class primitiveType(java.lang.String) -> primitiveType
    char representingChar(java.lang.Class) -> representingChar
com.thoughtworks.xstream.core.util.PrioritizedList -> com.thoughtworks.xstream.core.util.PrioritizedList:
    java.util.Set set -> set
    int lowestPriority -> lowestPriority
    int lastId -> lastId
    void add(java.lang.Object,int) -> add
    java.util.Iterator iterator() -> iterator
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem -> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItem:
    java.lang.Object value -> value
    int priority -> priority
    int id -> id
    int compareTo(java.lang.Object) -> compareTo
    boolean equals(java.lang.Object) -> equals
com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator -> com.thoughtworks.xstream.core.util.PrioritizedList$PrioritizedItemIterator:
    java.util.Iterator iterator -> iterator
    void remove() -> remove
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
com.thoughtworks.xstream.core.util.QuickWriter -> com.thoughtworks.xstream.core.util.QuickWriter:
    java.io.Writer writer -> writer
    char[] buffer -> buffer
    int pointer -> pointer
    void write(java.lang.String) -> write
    void write(char) -> write
    void write(char[]) -> write
    void flush() -> flush
    void close() -> close
    void raw(char[]) -> raw
    void raw(char) -> raw
com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor -> com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor:
    java.lang.Class editorType -> editorType
    com.thoughtworks.xstream.core.util.Pool pool -> pool
    java.lang.String getAsText(java.lang.Object) -> getAsText
    java.lang.Object setAsText(java.lang.String) -> setAsText
    java.beans.PropertyEditor fetchFromPool() -> fetchFromPool
    java.lang.Class access$000(com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor) -> access$000
com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor$1 -> com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor$1:
    com.thoughtworks.xstream.core.util.ThreadSafePropertyEditor this$0 -> this$0
    java.lang.Object newInstance() -> newInstance
com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat -> com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat:
    java.lang.String formatString -> formatString
    com.thoughtworks.xstream.core.util.Pool pool -> pool
    java.util.TimeZone timeZone -> timeZone
    java.lang.String format(java.util.Date) -> format
    java.util.Date parse(java.lang.String) -> parse
    java.text.DateFormat fetchFromPool() -> fetchFromPool
    java.lang.String toString() -> toString
    java.lang.String access$000(com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat) -> access$000
com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat$1 -> com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat$1:
    boolean val$lenient -> val$lenient
    com.thoughtworks.xstream.core.util.ThreadSafeSimpleDateFormat this$0 -> this$0
    java.lang.Object newInstance() -> newInstance
com.thoughtworks.xstream.core.util.TypedNull -> com.thoughtworks.xstream.core.util.TypedNull:
    java.lang.Class type -> type
    java.lang.Class getType() -> getType
com.thoughtworks.xstream.core.util.WeakCache -> com.thoughtworks.xstream.core.util.WeakCache:
    java.util.Map map -> map
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.ref.Reference createReference(java.lang.Object) -> createReference
    boolean containsValue(java.lang.Object) -> containsValue
    int size() -> size
    java.util.Collection values() -> values
    java.util.Set entrySet() -> entrySet
    java.lang.Object iterate(com.thoughtworks.xstream.core.util.WeakCache$Visitor,int) -> iterate
    boolean containsKey(java.lang.Object) -> containsKey
    void clear() -> clear
    java.util.Set keySet() -> keySet
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.thoughtworks.xstream.core.util.WeakCache$1 -> com.thoughtworks.xstream.core.util.WeakCache$1:
    java.lang.Object val$value -> val$value
    com.thoughtworks.xstream.core.util.WeakCache this$0 -> this$0
    java.lang.Object visit(java.lang.Object) -> visit
com.thoughtworks.xstream.core.util.WeakCache$2 -> com.thoughtworks.xstream.core.util.WeakCache$2:
    int[] val$i -> val$i
    com.thoughtworks.xstream.core.util.WeakCache this$0 -> this$0
    java.lang.Object visit(java.lang.Object) -> visit
com.thoughtworks.xstream.core.util.WeakCache$3 -> com.thoughtworks.xstream.core.util.WeakCache$3:
    java.util.Collection val$collection -> val$collection
    com.thoughtworks.xstream.core.util.WeakCache this$0 -> this$0
    java.lang.Object visit(java.lang.Object) -> visit
com.thoughtworks.xstream.core.util.WeakCache$4 -> com.thoughtworks.xstream.core.util.WeakCache$4:
    java.util.Set val$set -> val$set
    com.thoughtworks.xstream.core.util.WeakCache this$0 -> this$0
    java.lang.Object visit(java.lang.Object) -> visit
com.thoughtworks.xstream.core.util.WeakCache$4$1 -> com.thoughtworks.xstream.core.util.WeakCache$4$1:
    java.util.Map$Entry val$entry -> val$entry
    com.thoughtworks.xstream.core.util.WeakCache$4 this$1 -> this$1
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
com.thoughtworks.xstream.core.util.WeakCache$Visitor -> com.thoughtworks.xstream.core.util.WeakCache$Visitor:
    java.lang.Object visit(java.lang.Object) -> visit
com.thoughtworks.xstream.core.util.XmlHeaderAwareReader -> com.thoughtworks.xstream.core.util.XmlHeaderAwareReader:
    java.io.InputStreamReader reader -> reader
    double version -> version
    java.lang.String KEY_ENCODING -> KEY_ENCODING
    java.lang.String KEY_VERSION -> KEY_VERSION
    java.lang.String XML_TOKEN -> XML_TOKEN
    int STATE_BOM -> STATE_BOM
    int STATE_START -> STATE_START
    int STATE_AWAIT_XML_HEADER -> STATE_AWAIT_XML_HEADER
    int STATE_ATTR_NAME -> STATE_ATTR_NAME
    int STATE_ATTR_VALUE -> STATE_ATTR_VALUE
    java.util.Map getHeader(java.io.PushbackInputStream[]) -> getHeader
    java.lang.String getEncoding() -> getEncoding
    double getVersion() -> getVersion
    void mark(int) -> mark
    boolean markSupported() -> markSupported
    int read() -> read
    int read(char[],int,int) -> read
    int read(char[]) -> read
    boolean ready() -> ready
    void reset() -> reset
    long skip(long) -> skip
    void close() -> close
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.thoughtworks.xstream.io.AbstractDriver -> com.thoughtworks.xstream.io.AbstractDriver:
    com.thoughtworks.xstream.io.naming.NameCoder replacer -> replacer
    com.thoughtworks.xstream.io.naming.NameCoder getNameCoder() -> getNameCoder
com.thoughtworks.xstream.io.AbstractReader -> com.thoughtworks.xstream.io.AbstractReader:
    com.thoughtworks.xstream.io.naming.NameCoder nameCoder -> nameCoder
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String encodeNode(java.lang.String) -> encodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
com.thoughtworks.xstream.io.AbstractWriter -> com.thoughtworks.xstream.io.AbstractWriter:
    com.thoughtworks.xstream.io.naming.NameCoder nameCoder -> nameCoder
    void startNode(java.lang.String,java.lang.Class) -> startNode
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
    java.lang.String encodeNode(java.lang.String) -> encodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
com.thoughtworks.xstream.io.AttributeNameIterator -> com.thoughtworks.xstream.io.AttributeNameIterator:
    int current -> current
    int count -> count
    com.thoughtworks.xstream.io.HierarchicalStreamReader reader -> reader
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriter -> com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriter:
    void startNode(java.lang.String,java.lang.Class) -> startNode
com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper -> com.thoughtworks.xstream.io.ExtendedHierarchicalStreamWriterHelper:
    void startNode(com.thoughtworks.xstream.io.HierarchicalStreamWriter,java.lang.String,java.lang.Class) -> startNode
com.thoughtworks.xstream.io.HierarchicalStreamDriver -> com.thoughtworks.xstream.io.HierarchicalStreamDriver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.HierarchicalStreamReader -> com.thoughtworks.xstream.io.HierarchicalStreamReader:
    boolean hasMoreChildren() -> hasMoreChildren
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.util.Iterator getAttributeNames() -> getAttributeNames
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
com.thoughtworks.xstream.io.HierarchicalStreamWriter -> com.thoughtworks.xstream.io.HierarchicalStreamWriter:
    void startNode(java.lang.String) -> startNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void flush() -> flush
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
com.thoughtworks.xstream.io.ReaderWrapper -> com.thoughtworks.xstream.io.ReaderWrapper:
    com.thoughtworks.xstream.io.HierarchicalStreamReader wrapped -> wrapped
    boolean hasMoreChildren() -> hasMoreChildren
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.util.Iterator getAttributeNames() -> getAttributeNames
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
com.thoughtworks.xstream.io.StatefulWriter -> com.thoughtworks.xstream.io.StatefulWriter:
    int STATE_OPEN -> STATE_OPEN
    int STATE_NODE_START -> STATE_NODE_START
    int STATE_VALUE -> STATE_VALUE
    int STATE_NODE_END -> STATE_NODE_END
    int STATE_CLOSED -> STATE_CLOSED
    int state -> state
    int balance -> balance
    com.thoughtworks.xstream.core.util.FastStack attributes -> attributes
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void startNodeCommon() -> startNodeCommon
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void flush() -> flush
    void close() -> close
    void checkClosed() -> checkClosed
    int state() -> state
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.io.StreamException -> com.thoughtworks.xstream.io.StreamException:
com.thoughtworks.xstream.io.WriterWrapper -> com.thoughtworks.xstream.io.WriterWrapper:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter wrapped -> wrapped
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void endNode() -> endNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void flush() -> flush
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
com.thoughtworks.xstream.io.binary.BinaryStreamReader -> com.thoughtworks.xstream.io.binary.BinaryStreamReader:
    java.io.DataInputStream in -> in
    com.thoughtworks.xstream.io.binary.ReaderDepthState depthState -> depthState
    com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry idRegistry -> idRegistry
    com.thoughtworks.xstream.io.binary.Token pushback -> pushback
    com.thoughtworks.xstream.io.binary.Token$Formatter tokenFormatter -> tokenFormatter
    boolean hasMoreChildren() -> hasMoreChildren
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.util.Iterator getAttributeNames() -> getAttributeNames
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    com.thoughtworks.xstream.io.binary.Token readToken() -> readToken
    void pushBack(com.thoughtworks.xstream.io.binary.Token) -> pushBack
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamReader underlyingReader() -> underlyingReader
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.io.binary.BinaryStreamReader$1 -> com.thoughtworks.xstream.io.binary.BinaryStreamReader$1:
com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry -> com.thoughtworks.xstream.io.binary.BinaryStreamReader$IdRegistry:
    java.util.Map map -> map
    void put(long,java.lang.String) -> put
    java.lang.String get(long) -> get
com.thoughtworks.xstream.io.binary.BinaryStreamWriter -> com.thoughtworks.xstream.io.binary.BinaryStreamWriter:
    com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry idRegistry -> idRegistry
    java.io.DataOutputStream out -> out
    com.thoughtworks.xstream.io.binary.Token$Formatter tokenFormatter -> tokenFormatter
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void flush() -> flush
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
    void write(com.thoughtworks.xstream.io.binary.Token) -> write
    void access$100(com.thoughtworks.xstream.io.binary.BinaryStreamWriter,com.thoughtworks.xstream.io.binary.Token) -> access$100
com.thoughtworks.xstream.io.binary.BinaryStreamWriter$1 -> com.thoughtworks.xstream.io.binary.BinaryStreamWriter$1:
com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry -> com.thoughtworks.xstream.io.binary.BinaryStreamWriter$IdRegistry:
    long nextId -> nextId
    java.util.Map ids -> ids
    com.thoughtworks.xstream.io.binary.BinaryStreamWriter this$0 -> this$0
    long getId(java.lang.String) -> getId
com.thoughtworks.xstream.io.binary.ReaderDepthState -> com.thoughtworks.xstream.io.binary.ReaderDepthState:
    java.lang.String EMPTY_STRING -> EMPTY_STRING
    com.thoughtworks.xstream.io.binary.ReaderDepthState$State current -> current
    void push() -> push
    void pop() -> pop
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    boolean hasMoreChildren() -> hasMoreChildren
    void setHasMoreChildren(boolean) -> setHasMoreChildren
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    java.lang.String getAttributeName(int) -> getAttributeName
    int getAttributeCount() -> getAttributeCount
    java.util.Iterator getAttributeNames() -> getAttributeNames
com.thoughtworks.xstream.io.binary.ReaderDepthState$1 -> com.thoughtworks.xstream.io.binary.ReaderDepthState$1:
    java.util.Iterator val$attributeIterator -> val$attributeIterator
    com.thoughtworks.xstream.io.binary.ReaderDepthState this$0 -> this$0
    boolean hasNext() -> hasNext
    java.lang.Object next() -> next
    void remove() -> remove
com.thoughtworks.xstream.io.binary.ReaderDepthState$Attribute -> com.thoughtworks.xstream.io.binary.ReaderDepthState$Attribute:
    java.lang.String name -> name
    java.lang.String value -> value
com.thoughtworks.xstream.io.binary.ReaderDepthState$State -> com.thoughtworks.xstream.io.binary.ReaderDepthState$State:
    java.lang.String name -> name
    java.lang.String value -> value
    java.util.List attributes -> attributes
    boolean hasMoreChildren -> hasMoreChildren
    com.thoughtworks.xstream.io.binary.ReaderDepthState$State parent -> parent
com.thoughtworks.xstream.io.binary.Token -> com.thoughtworks.xstream.io.binary.Token:
    byte TYPE_MASK -> TYPE_MASK
    byte TYPE_VERSION -> TYPE_VERSION
    byte TYPE_MAP_ID_TO_VALUE -> TYPE_MAP_ID_TO_VALUE
    byte TYPE_START_NODE -> TYPE_START_NODE
    byte TYPE_END_NODE -> TYPE_END_NODE
    byte TYPE_ATTRIBUTE -> TYPE_ATTRIBUTE
    byte TYPE_VALUE -> TYPE_VALUE
    byte ID_MASK -> ID_MASK
    byte ID_ONE_BYTE -> ID_ONE_BYTE
    byte ID_TWO_BYTES -> ID_TWO_BYTES
    byte ID_FOUR_BYTES -> ID_FOUR_BYTES
    byte ID_EIGHT_BYTES -> ID_EIGHT_BYTES
    java.lang.String ID_SPLITTED -> ID_SPLITTED
    int MAX_UTF8_LENGTH -> MAX_UTF8_LENGTH
    byte type -> type
    long id -> id
    java.lang.String value -> value
    byte getType() -> getType
    long getId() -> getId
    java.lang.String getValue() -> getValue
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
    void writeId(java.io.DataOutput,long,byte) -> writeId
    void writeString(java.io.DataOutput,java.lang.String) -> writeString
    long readId(java.io.DataInput,byte) -> readId
    java.lang.String readString(java.io.DataInput) -> readString
com.thoughtworks.xstream.io.binary.Token$Attribute -> com.thoughtworks.xstream.io.binary.Token$Attribute:
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.binary.Token$EndNode -> com.thoughtworks.xstream.io.binary.Token$EndNode:
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.binary.Token$Formatter -> com.thoughtworks.xstream.io.binary.Token$Formatter:
    void write(java.io.DataOutput,com.thoughtworks.xstream.io.binary.Token) -> write
    com.thoughtworks.xstream.io.binary.Token read(java.io.DataInput) -> read
    com.thoughtworks.xstream.io.binary.Token contructToken(byte) -> contructToken
com.thoughtworks.xstream.io.binary.Token$MapIdToValue -> com.thoughtworks.xstream.io.binary.Token$MapIdToValue:
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.binary.Token$StartNode -> com.thoughtworks.xstream.io.binary.Token$StartNode:
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.binary.Token$Value -> com.thoughtworks.xstream.io.binary.Token$Value:
    void writeTo(java.io.DataOutput,byte) -> writeTo
    void readFrom(java.io.DataInput,byte) -> readFrom
com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier -> com.thoughtworks.xstream.io.copy.HierarchicalStreamCopier:
    void copy(com.thoughtworks.xstream.io.HierarchicalStreamReader,com.thoughtworks.xstream.io.HierarchicalStreamWriter) -> copy
com.thoughtworks.xstream.io.json.AbstractJsonWriter -> com.thoughtworks.xstream.io.json.AbstractJsonWriter:
    int DROP_ROOT_MODE -> DROP_ROOT_MODE
    int STRICT_MODE -> STRICT_MODE
    int EXPLICIT_MODE -> EXPLICIT_MODE
    int STATE_ROOT -> STATE_ROOT
    int STATE_END_OBJECT -> STATE_END_OBJECT
    int STATE_START_OBJECT -> STATE_START_OBJECT
    int STATE_START_ATTRIBUTES -> STATE_START_ATTRIBUTES
    int STATE_NEXT_ATTRIBUTE -> STATE_NEXT_ATTRIBUTE
    int STATE_END_ATTRIBUTES -> STATE_END_ATTRIBUTES
    int STATE_START_ELEMENTS -> STATE_START_ELEMENTS
    int STATE_NEXT_ELEMENT -> STATE_NEXT_ELEMENT
    int STATE_END_ELEMENTS -> STATE_END_ELEMENTS
    int STATE_SET_VALUE -> STATE_SET_VALUE
    java.util.List NUMBER_TYPES -> NUMBER_TYPES
    int mode -> mode
    com.thoughtworks.xstream.core.util.FastStack stack -> stack
    int expectedStates -> expectedStates
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void startNode(java.lang.String) -> startNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void handleCheckedStateTransition(int,java.lang.String,java.lang.String) -> handleCheckedStateTransition
    int handleStateTransition(int,int,java.lang.String,java.lang.String) -> handleStateTransition
    com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type getType(java.lang.Class) -> getType
    boolean isArray(java.lang.Class) -> isArray
    void startObject() -> startObject
    void addLabel(java.lang.String) -> addLabel
    void addValue(java.lang.String,com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type) -> addValue
    void startArray() -> startArray
    void nextElement() -> nextElement
    void endArray() -> endArray
    void endObject() -> endObject
com.thoughtworks.xstream.io.json.AbstractJsonWriter$IllegalWriterStateException -> com.thoughtworks.xstream.io.json.AbstractJsonWriter$IllegalWriterStateException:
    java.lang.String getState(int) -> getState
com.thoughtworks.xstream.io.json.AbstractJsonWriter$StackElement -> com.thoughtworks.xstream.io.json.AbstractJsonWriter$StackElement:
    java.lang.Class type -> type
    int status -> status
com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type -> com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type:
    com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type NULL -> NULL
    com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type STRING -> STRING
    com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type NUMBER -> NUMBER
    com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type BOOLEAN -> BOOLEAN
com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver -> com.thoughtworks.xstream.io.json.JettisonMappedXmlDriver:
    org.codehaus.jettison.mapped.MappedXMLOutputFactory mof -> mof
    org.codehaus.jettison.mapped.MappedXMLInputFactory mif -> mif
    org.codehaus.jettison.mapped.MappedNamespaceConvention convention -> convention
    boolean useSerializeAsArray -> useSerializeAsArray
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.json.JettisonStaxWriter -> com.thoughtworks.xstream.io.json.JettisonStaxWriter:
    org.codehaus.jettison.mapped.MappedNamespaceConvention convention -> convention
    void startNode(java.lang.String,java.lang.Class) -> startNode
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamDriver -> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamDriver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter -> com.thoughtworks.xstream.io.json.JsonHierarchicalStreamWriter:
com.thoughtworks.xstream.io.json.JsonWriter -> com.thoughtworks.xstream.io.json.JsonWriter:
    com.thoughtworks.xstream.core.util.QuickWriter writer -> writer
    com.thoughtworks.xstream.io.json.JsonWriter$Format format -> format
    int depth -> depth
    boolean newLineProposed -> newLineProposed
    void flush() -> flush
    void close() -> close
    com.thoughtworks.xstream.io.HierarchicalStreamWriter underlyingWriter() -> underlyingWriter
    void startObject() -> startObject
    void addLabel(java.lang.String) -> addLabel
    void addValue(java.lang.String,com.thoughtworks.xstream.io.json.AbstractJsonWriter$Type) -> addValue
    void startArray() -> startArray
    void nextElement() -> nextElement
    void endArray() -> endArray
    void endObject() -> endObject
    void startNewLine() -> startNewLine
    void endNewLine() -> endNewLine
    void writeNewLine() -> writeNewLine
    void writeText(java.lang.String) -> writeText
com.thoughtworks.xstream.io.json.JsonWriter$Format -> com.thoughtworks.xstream.io.json.JsonWriter$Format:
    int SPACE_AFTER_LABEL -> SPACE_AFTER_LABEL
    int COMPACT_EMPTY_ELEMENT -> COMPACT_EMPTY_ELEMENT
    char[] lineIndenter -> lineIndenter
    char[] newLine -> newLine
    int mode -> mode
    char[] getLineIndenter() -> getLineIndenter
    char[] getNewLine() -> getNewLine
    int mode() -> mode
com.thoughtworks.xstream.io.naming.NameCoder -> com.thoughtworks.xstream.io.naming.NameCoder:
    java.lang.String encodeNode(java.lang.String) -> encodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
com.thoughtworks.xstream.io.naming.NameCoderWrapper -> com.thoughtworks.xstream.io.naming.NameCoderWrapper:
    com.thoughtworks.xstream.io.naming.NameCoder wrapped -> wrapped
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String encodeNode(java.lang.String) -> encodeNode
com.thoughtworks.xstream.io.naming.NoNameCoder -> com.thoughtworks.xstream.io.naming.NoNameCoder:
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String encodeNode(java.lang.String) -> encodeNode
com.thoughtworks.xstream.io.naming.StaticNameCoder -> com.thoughtworks.xstream.io.naming.StaticNameCoder:
    java.util.Map java2Node -> java2Node
    java.util.Map java2Attribute -> java2Attribute
    java.util.Map node2Java -> node2Java
    java.util.Map attribute2Java -> attribute2Java
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String encodeNode(java.lang.String) -> encodeNode
    java.lang.Object readResolve() -> readResolve
    java.util.Map invertMap(java.util.Map) -> invertMap
com.thoughtworks.xstream.io.path.Path -> com.thoughtworks.xstream.io.path.Path:
    java.lang.String[] chunks -> chunks
    java.lang.String pathAsString -> pathAsString
    java.lang.String pathExplicit -> pathExplicit
    com.thoughtworks.xstream.io.path.Path DOT -> DOT
    java.lang.String normalize(java.lang.String,int,int) -> normalize
    java.lang.String toString() -> toString
    java.lang.String explicit() -> explicit
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.thoughtworks.xstream.io.path.Path relativeTo(com.thoughtworks.xstream.io.path.Path) -> relativeTo
    int depthOfPathDivergence(java.lang.String[],java.lang.String[]) -> depthOfPathDivergence
    com.thoughtworks.xstream.io.path.Path apply(com.thoughtworks.xstream.io.path.Path) -> apply
    boolean isAncestor(com.thoughtworks.xstream.io.path.Path) -> isAncestor
com.thoughtworks.xstream.io.path.PathTracker -> com.thoughtworks.xstream.io.path.PathTracker:
    int pointer -> pointer
    int capacity -> capacity
    java.lang.String[] pathStack -> pathStack
    java.util.Map[] indexMapStack -> indexMapStack
    com.thoughtworks.xstream.io.path.Path currentPath -> currentPath
    void pushElement(java.lang.String) -> pushElement
    void popElement() -> popElement
    void resizeStacks(int) -> resizeStacks
    com.thoughtworks.xstream.io.path.Path getPath() -> getPath
com.thoughtworks.xstream.io.path.PathTrackingReader -> com.thoughtworks.xstream.io.path.PathTrackingReader:
    com.thoughtworks.xstream.io.path.PathTracker pathTracker -> pathTracker
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.io.path.PathTrackingWriter -> com.thoughtworks.xstream.io.path.PathTrackingWriter:
    com.thoughtworks.xstream.io.path.PathTracker pathTracker -> pathTracker
    boolean isXmlFriendly -> isXmlFriendly
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void endNode() -> endNode
com.thoughtworks.xstream.io.xml.AbstractDocumentReader -> com.thoughtworks.xstream.io.xml.AbstractDocumentReader:
    com.thoughtworks.xstream.core.util.FastStack pointers -> pointers
    java.lang.Object current -> current
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    boolean hasMoreChildren() -> hasMoreChildren
    void moveUp() -> moveUp
    void moveDown() -> moveDown
    java.util.Iterator getAttributeNames() -> getAttributeNames
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    java.lang.Object getCurrent() -> getCurrent
    void close() -> close
com.thoughtworks.xstream.io.xml.AbstractDocumentReader$1 -> com.thoughtworks.xstream.io.xml.AbstractDocumentReader$1:
com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer -> com.thoughtworks.xstream.io.xml.AbstractDocumentReader$Pointer:
    int v -> v
com.thoughtworks.xstream.io.xml.AbstractDocumentWriter -> com.thoughtworks.xstream.io.xml.AbstractDocumentWriter:
    java.util.List result -> result
    com.thoughtworks.xstream.core.util.FastStack nodeStack -> nodeStack
    void startNode(java.lang.String) -> startNode
    java.lang.Object createNode(java.lang.String) -> createNode
    void endNode() -> endNode
    void endNodeInternally() -> endNodeInternally
    java.lang.Object getCurrent() -> getCurrent
    java.util.List getTopLevelNodes() -> getTopLevelNodes
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.io.xml.AbstractPullReader -> com.thoughtworks.xstream.io.xml.AbstractPullReader:
    int START_NODE -> START_NODE
    int END_NODE -> END_NODE
    int TEXT -> TEXT
    int COMMENT -> COMMENT
    int OTHER -> OTHER
    com.thoughtworks.xstream.core.util.FastStack elementStack -> elementStack
    com.thoughtworks.xstream.core.util.FastStack pool -> pool
    com.thoughtworks.xstream.core.util.FastStack lookahead -> lookahead
    com.thoughtworks.xstream.core.util.FastStack lookback -> lookback
    boolean marked -> marked
    int pullNextEvent() -> pullNextEvent
    java.lang.String pullElementName() -> pullElementName
    java.lang.String pullText() -> pullText
    boolean hasMoreChildren() -> hasMoreChildren
    void moveDown() -> moveDown
    void moveUp() -> moveUp
    void move() -> move
    com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readEvent() -> readEvent
    com.thoughtworks.xstream.io.xml.AbstractPullReader$Event readRealEvent() -> readRealEvent
    void mark() -> mark
    void reset() -> reset
    java.lang.String getValue() -> getValue
    java.util.Iterator getAttributeNames() -> getAttributeNames
    java.lang.String getNodeName() -> getNodeName
com.thoughtworks.xstream.io.xml.AbstractPullReader$1 -> com.thoughtworks.xstream.io.xml.AbstractPullReader$1:
com.thoughtworks.xstream.io.xml.AbstractPullReader$Event -> com.thoughtworks.xstream.io.xml.AbstractPullReader$Event:
    int type -> type
    java.lang.String value -> value
com.thoughtworks.xstream.io.xml.AbstractXmlDriver -> com.thoughtworks.xstream.io.xml.AbstractXmlDriver:
    com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer xmlFriendlyReplacer() -> xmlFriendlyReplacer
com.thoughtworks.xstream.io.xml.AbstractXmlReader -> com.thoughtworks.xstream.io.xml.AbstractXmlReader:
    java.lang.String unescapeXmlName(java.lang.String) -> unescapeXmlName
    java.lang.String escapeXmlName(java.lang.String) -> escapeXmlName
com.thoughtworks.xstream.io.xml.AbstractXmlWriter -> com.thoughtworks.xstream.io.xml.AbstractXmlWriter:
    java.lang.String escapeXmlName(java.lang.String) -> escapeXmlName
com.thoughtworks.xstream.io.xml.AbstractXppDomDriver -> com.thoughtworks.xstream.io.xml.AbstractXppDomDriver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.AbstractXppDriver -> com.thoughtworks.xstream.io.xml.AbstractXppDriver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.BEAStaxDriver -> com.thoughtworks.xstream.io.xml.BEAStaxDriver:
    javax.xml.stream.XMLInputFactory createInputFactory() -> createInputFactory
    javax.xml.stream.XMLOutputFactory createOutputFactory() -> createOutputFactory
com.thoughtworks.xstream.io.xml.CompactWriter -> com.thoughtworks.xstream.io.xml.CompactWriter:
    void endOfLine() -> endOfLine
com.thoughtworks.xstream.io.xml.DocumentReader -> com.thoughtworks.xstream.io.xml.DocumentReader:
    java.lang.Object getCurrent() -> getCurrent
com.thoughtworks.xstream.io.xml.DocumentWriter -> com.thoughtworks.xstream.io.xml.DocumentWriter:
    java.util.List getTopLevelNodes() -> getTopLevelNodes
com.thoughtworks.xstream.io.xml.Dom4JDriver -> com.thoughtworks.xstream.io.xml.Dom4JDriver:
    org.dom4j.DocumentFactory documentFactory -> documentFactory
    org.dom4j.io.OutputFormat outputFormat -> outputFormat
    org.dom4j.DocumentFactory getDocumentFactory() -> getDocumentFactory
    void setDocumentFactory(org.dom4j.DocumentFactory) -> setDocumentFactory
    org.dom4j.io.OutputFormat getOutputFormat() -> getOutputFormat
    void setOutputFormat(org.dom4j.io.OutputFormat) -> setOutputFormat
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.Dom4JDriver$1 -> com.thoughtworks.xstream.io.xml.Dom4JDriver$1:
    com.thoughtworks.xstream.io.HierarchicalStreamWriter[] val$writer -> val$writer
    com.thoughtworks.xstream.io.xml.Dom4JDriver this$0 -> this$0
    void close() -> close
com.thoughtworks.xstream.io.xml.Dom4JReader -> com.thoughtworks.xstream.io.xml.Dom4JReader:
    org.dom4j.Element currentElement -> currentElement
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
com.thoughtworks.xstream.io.xml.Dom4JWriter -> com.thoughtworks.xstream.io.xml.Dom4JWriter:
    org.dom4j.DocumentFactory documentFactory -> documentFactory
    java.lang.Object createNode(java.lang.String) -> createNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    org.dom4j.Branch top() -> top
com.thoughtworks.xstream.io.xml.Dom4JXmlWriter -> com.thoughtworks.xstream.io.xml.Dom4JXmlWriter:
    org.dom4j.io.XMLWriter writer -> writer
    com.thoughtworks.xstream.core.util.FastStack elementStack -> elementStack
    org.xml.sax.helpers.AttributesImpl attributes -> attributes
    boolean started -> started
    boolean children -> children
    void startNode(java.lang.String) -> startNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void endNode() -> endNode
    void flush() -> flush
    void close() -> close
    void startElement() -> startElement
com.thoughtworks.xstream.io.xml.DomDriver -> com.thoughtworks.xstream.io.xml.DomDriver:
    java.lang.String encoding -> encoding
    javax.xml.parsers.DocumentBuilderFactory documentBuilderFactory -> documentBuilderFactory
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(org.xml.sax.InputSource) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.DomReader -> com.thoughtworks.xstream.io.xml.DomReader:
    org.w3c.dom.Element currentElement -> currentElement
    java.lang.StringBuffer textBuffer -> textBuffer
    java.util.List childElements -> childElements
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
com.thoughtworks.xstream.io.xml.DomWriter -> com.thoughtworks.xstream.io.xml.DomWriter:
    org.w3c.dom.Document document -> document
    boolean hasRootElement -> hasRootElement
    java.lang.Object createNode(java.lang.String) -> createNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    org.w3c.dom.Element top() -> top
com.thoughtworks.xstream.io.xml.JDomDriver -> com.thoughtworks.xstream.io.xml.JDomDriver:
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.JDomReader -> com.thoughtworks.xstream.io.xml.JDomReader:
    org.jdom.Element currentElement -> currentElement
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
com.thoughtworks.xstream.io.xml.JDomWriter -> com.thoughtworks.xstream.io.xml.JDomWriter:
    org.jdom.JDOMFactory documentFactory -> documentFactory
    java.lang.Object createNode(java.lang.String) -> createNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    org.jdom.Element top() -> top
com.thoughtworks.xstream.io.xml.KXml2DomDriver -> com.thoughtworks.xstream.io.xml.KXml2DomDriver:
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.KXml2Driver -> com.thoughtworks.xstream.io.xml.KXml2Driver:
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.PrettyPrintWriter -> com.thoughtworks.xstream.io.xml.PrettyPrintWriter:
    int XML_QUIRKS -> XML_QUIRKS
    int XML_1_0 -> XML_1_0
    int XML_1_1 -> XML_1_1
    com.thoughtworks.xstream.core.util.QuickWriter writer -> writer
    com.thoughtworks.xstream.core.util.FastStack elementStack -> elementStack
    char[] lineIndenter -> lineIndenter
    int mode -> mode
    boolean tagInProgress -> tagInProgress
    int depth -> depth
    boolean readyForNewLine -> readyForNewLine
    boolean tagIsEmpty -> tagIsEmpty
    java.lang.String newLine -> newLine
    char[] NULL -> NULL
    char[] AMP -> AMP
    char[] LT -> LT
    char[] GT -> GT
    char[] CR -> CR
    char[] QUOT -> QUOT
    char[] APOS -> APOS
    char[] CLOSE -> CLOSE
    void startNode(java.lang.String) -> startNode
    void startNode(java.lang.String,java.lang.Class) -> startNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void writeAttributeValue(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String) -> writeAttributeValue
    void writeText(com.thoughtworks.xstream.core.util.QuickWriter,java.lang.String) -> writeText
    void writeText(java.lang.String) -> writeText
    void endNode() -> endNode
    void finishTag() -> finishTag
    void endOfLine() -> endOfLine
    void flush() -> flush
    void close() -> close
    java.lang.String getNewLine() -> getNewLine
com.thoughtworks.xstream.io.xml.QNameMap -> com.thoughtworks.xstream.io.xml.QNameMap:
    java.util.Map qnameToJava -> qnameToJava
    java.util.Map javaToQName -> javaToQName
    java.lang.String defaultPrefix -> defaultPrefix
    java.lang.String defaultNamespace -> defaultNamespace
    java.lang.String getJavaClassName(javax.xml.namespace.QName) -> getJavaClassName
    javax.xml.namespace.QName getQName(java.lang.String) -> getQName
    void registerMapping(javax.xml.namespace.QName,java.lang.String) -> registerMapping
    void registerMapping(javax.xml.namespace.QName,java.lang.Class) -> registerMapping
    java.lang.String getDefaultNamespace() -> getDefaultNamespace
    void setDefaultNamespace(java.lang.String) -> setDefaultNamespace
    java.lang.String getDefaultPrefix() -> getDefaultPrefix
    void setDefaultPrefix(java.lang.String) -> setDefaultPrefix
com.thoughtworks.xstream.io.xml.SaxWriter -> com.thoughtworks.xstream.io.xml.SaxWriter:
    java.lang.String CONFIGURED_XSTREAM_PROPERTY -> CONFIGURED_XSTREAM_PROPERTY
    java.lang.String SOURCE_OBJECT_LIST_PROPERTY -> SOURCE_OBJECT_LIST_PROPERTY
    org.xml.sax.EntityResolver entityResolver -> entityResolver
    org.xml.sax.DTDHandler dtdHandler -> dtdHandler
    org.xml.sax.ContentHandler contentHandler -> contentHandler
    org.xml.sax.ErrorHandler errorHandler -> errorHandler
    java.util.Map features -> features
    java.util.Map properties -> properties
    boolean includeEnclosingDocument -> includeEnclosingDocument
    int depth -> depth
    java.util.List elementStack -> elementStack
    char[] buffer -> buffer
    boolean startTagInProgress -> startTagInProgress
    org.xml.sax.helpers.AttributesImpl attributeList -> attributeList
    void setFeature(java.lang.String,boolean) -> setFeature
    boolean getFeature(java.lang.String) -> getFeature
    void setProperty(java.lang.String,java.lang.Object) -> setProperty
    java.lang.Object getProperty(java.lang.String) -> getProperty
    void setEntityResolver(org.xml.sax.EntityResolver) -> setEntityResolver
    org.xml.sax.EntityResolver getEntityResolver() -> getEntityResolver
    void setDTDHandler(org.xml.sax.DTDHandler) -> setDTDHandler
    org.xml.sax.DTDHandler getDTDHandler() -> getDTDHandler
    void setContentHandler(org.xml.sax.ContentHandler) -> setContentHandler
    org.xml.sax.ContentHandler getContentHandler() -> getContentHandler
    void setErrorHandler(org.xml.sax.ErrorHandler) -> setErrorHandler
    org.xml.sax.ErrorHandler getErrorHandler() -> getErrorHandler
    void parse(java.lang.String) -> parse
    void parse(org.xml.sax.InputSource) -> parse
    void parse() -> parse
    void startNode(java.lang.String) -> startNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    void endNode() -> endNode
    void startDocument(boolean) -> startDocument
    void endDocument(boolean) -> endDocument
    void flushStartTag() -> flushStartTag
    void flush() -> flush
    void close() -> close
com.thoughtworks.xstream.io.xml.SjsxpDriver -> com.thoughtworks.xstream.io.xml.SjsxpDriver:
    javax.xml.stream.XMLInputFactory createInputFactory() -> createInputFactory
    javax.xml.stream.XMLOutputFactory createOutputFactory() -> createOutputFactory
com.thoughtworks.xstream.io.xml.StaxDriver -> com.thoughtworks.xstream.io.xml.StaxDriver:
    com.thoughtworks.xstream.io.xml.QNameMap qnameMap -> qnameMap
    javax.xml.stream.XMLInputFactory inputFactory -> inputFactory
    javax.xml.stream.XMLOutputFactory outputFactory -> outputFactory
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
    com.thoughtworks.xstream.io.xml.AbstractPullReader createStaxReader(javax.xml.stream.XMLStreamReader) -> createStaxReader
    com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter,boolean) -> createStaxWriter
    com.thoughtworks.xstream.io.xml.StaxWriter createStaxWriter(javax.xml.stream.XMLStreamWriter) -> createStaxWriter
    com.thoughtworks.xstream.io.xml.QNameMap getQnameMap() -> getQnameMap
    void setQnameMap(com.thoughtworks.xstream.io.xml.QNameMap) -> setQnameMap
    javax.xml.stream.XMLInputFactory getInputFactory() -> getInputFactory
    javax.xml.stream.XMLOutputFactory getOutputFactory() -> getOutputFactory
    boolean isRepairingNamespace() -> isRepairingNamespace
    void setRepairingNamespace(boolean) -> setRepairingNamespace
    javax.xml.stream.XMLStreamReader createParser(java.io.Reader) -> createParser
    javax.xml.stream.XMLStreamReader createParser(java.io.InputStream) -> createParser
    javax.xml.stream.XMLStreamReader createParser(javax.xml.transform.Source) -> createParser
    javax.xml.stream.XMLInputFactory createInputFactory() -> createInputFactory
    javax.xml.stream.XMLOutputFactory createOutputFactory() -> createOutputFactory
com.thoughtworks.xstream.io.xml.StaxReader -> com.thoughtworks.xstream.io.xml.StaxReader:
    com.thoughtworks.xstream.io.xml.QNameMap qnameMap -> qnameMap
    javax.xml.stream.XMLStreamReader in -> in
    int pullNextEvent() -> pullNextEvent
    java.lang.String pullElementName() -> pullElementName
    java.lang.String pullText() -> pullText
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void close() -> close
com.thoughtworks.xstream.io.xml.StaxWriter -> com.thoughtworks.xstream.io.xml.StaxWriter:
    com.thoughtworks.xstream.io.xml.QNameMap qnameMap -> qnameMap
    javax.xml.stream.XMLStreamWriter out -> out
    boolean writeEnclosingDocument -> writeEnclosingDocument
    boolean namespaceRepairingMode -> namespaceRepairingMode
    int tagDepth -> tagDepth
    void flush() -> flush
    void close() -> close
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void endNode() -> endNode
    void setValue(java.lang.String) -> setValue
    void startNode(java.lang.String) -> startNode
    boolean isNamespaceRepairingMode() -> isNamespaceRepairingMode
    com.thoughtworks.xstream.io.xml.QNameMap getQNameMap() -> getQNameMap
    javax.xml.stream.XMLStreamWriter getXMLStreamWriter() -> getXMLStreamWriter
com.thoughtworks.xstream.io.xml.TraxSource -> com.thoughtworks.xstream.io.xml.TraxSource:
    java.lang.String XSTREAM_FEATURE -> XSTREAM_FEATURE
    org.xml.sax.XMLReader xmlReader -> xmlReader
    com.thoughtworks.xstream.XStream xstream -> xstream
    java.util.List source -> source
    void setInputSource(org.xml.sax.InputSource) -> setInputSource
    void setXMLReader(org.xml.sax.XMLReader) -> setXMLReader
    org.xml.sax.XMLReader getXMLReader() -> getXMLReader
    void setXStream(com.thoughtworks.xstream.XStream) -> setXStream
    void setSource(java.lang.Object) -> setSource
    void setSourceAsList(java.util.List) -> setSourceAsList
    void createXMLReader(org.xml.sax.XMLReader) -> createXMLReader
    void configureXMLReader() -> configureXMLReader
com.thoughtworks.xstream.io.xml.WstxDriver -> com.thoughtworks.xstream.io.xml.WstxDriver:
    javax.xml.stream.XMLInputFactory createInputFactory() -> createInputFactory
    javax.xml.stream.XMLOutputFactory createOutputFactory() -> createOutputFactory
com.thoughtworks.xstream.io.xml.XStream11NameCoder -> com.thoughtworks.xstream.io.xml.XStream11NameCoder:
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer -> com.thoughtworks.xstream.io.xml.XStream11XmlFriendlyReplacer:
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String unescapeName(java.lang.String) -> unescapeName
com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder -> com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder:
    com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$IntPair[] XML_NAME_START_CHAR_BOUNDS -> XML_NAME_START_CHAR_BOUNDS
    com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$IntPair[] XML_NAME_CHAR_EXTRA_BOUNDS -> XML_NAME_CHAR_EXTRA_BOUNDS
    java.lang.String dollarReplacement -> dollarReplacement
    java.lang.String escapeCharReplacement -> escapeCharReplacement
    java.util.Map escapeCache -> escapeCache
    java.util.Map unescapeCache -> unescapeCache
    java.lang.String hexPrefix -> hexPrefix
    java.lang.String decodeAttribute(java.lang.String) -> decodeAttribute
    java.lang.String decodeNode(java.lang.String) -> decodeNode
    java.lang.String encodeAttribute(java.lang.String) -> encodeAttribute
    java.lang.String encodeNode(java.lang.String) -> encodeNode
    java.lang.String encodeName(java.lang.String) -> encodeName
    java.lang.String decodeName(java.lang.String) -> decodeName
    java.lang.Object clone() -> clone
    java.lang.Object readResolve() -> readResolve
    boolean isXmlNameStartChar(int) -> isXmlNameStartChar
    boolean isXmlNameChar(int) -> isXmlNameChar
    boolean isInNameCharBounds(int,com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$IntPair[]) -> isInNameCharBounds
com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$1IntPairList -> com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$1IntPairList:
    void add(int,int) -> add
    void add(char) -> add
com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$IntPair -> com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$IntPair:
    int min -> min
    int max -> max
com.thoughtworks.xstream.io.xml.XmlFriendlyReader -> com.thoughtworks.xstream.io.xml.XmlFriendlyReader:
    java.lang.String unescapeXmlName(java.lang.String) -> unescapeXmlName
com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer -> com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer:
    java.lang.String escapeName(java.lang.String) -> escapeName
    java.lang.String unescapeName(java.lang.String) -> unescapeName
com.thoughtworks.xstream.io.xml.XmlFriendlyWriter -> com.thoughtworks.xstream.io.xml.XmlFriendlyWriter:
    java.lang.String escapeXmlName(java.lang.String) -> escapeXmlName
com.thoughtworks.xstream.io.xml.XomDriver -> com.thoughtworks.xstream.io.xml.XomDriver:
    nu.xom.Builder builder -> builder
    nu.xom.Builder getBuilder() -> getBuilder
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.Reader) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.InputStream) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.net.URL) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamReader createReader(java.io.File) -> createReader
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.Writer) -> createWriter
    com.thoughtworks.xstream.io.HierarchicalStreamWriter createWriter(java.io.OutputStream) -> createWriter
com.thoughtworks.xstream.io.xml.XomReader -> com.thoughtworks.xstream.io.xml.XomReader:
    nu.xom.Element currentElement -> currentElement
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    int getChildCount() -> getChildCount
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
com.thoughtworks.xstream.io.xml.XomWriter -> com.thoughtworks.xstream.io.xml.XomWriter:
    java.lang.Object createNode(java.lang.String) -> createNode
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    void setValue(java.lang.String) -> setValue
    nu.xom.Element top() -> top
com.thoughtworks.xstream.io.xml.Xpp3DomDriver -> com.thoughtworks.xstream.io.xml.Xpp3DomDriver:
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.Xpp3Driver -> com.thoughtworks.xstream.io.xml.Xpp3Driver:
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.XppDomDriver -> com.thoughtworks.xstream.io.xml.XppDomDriver:
    org.xmlpull.v1.XmlPullParserFactory factory -> factory
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.XppDomReader -> com.thoughtworks.xstream.io.xml.XppDomReader:
    com.thoughtworks.xstream.io.xml.xppdom.XppDom currentElement -> currentElement
    java.lang.String getNodeName() -> getNodeName
    java.lang.String getValue() -> getValue
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    java.lang.Object getParent() -> getParent
    java.lang.Object getChild(int) -> getChild
    int getChildCount() -> getChildCount
    void reassignCurrentElement(java.lang.Object) -> reassignCurrentElement
com.thoughtworks.xstream.io.xml.XppDomWriter -> com.thoughtworks.xstream.io.xml.XppDomWriter:
    com.thoughtworks.xstream.io.xml.xppdom.XppDom getConfiguration() -> getConfiguration
    java.lang.Object createNode(java.lang.String) -> createNode
    void setValue(java.lang.String) -> setValue
    void addAttribute(java.lang.String,java.lang.String) -> addAttribute
    com.thoughtworks.xstream.io.xml.xppdom.XppDom top() -> top
com.thoughtworks.xstream.io.xml.XppDriver -> com.thoughtworks.xstream.io.xml.XppDriver:
    org.xmlpull.v1.XmlPullParserFactory factory -> factory
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
com.thoughtworks.xstream.io.xml.XppReader -> com.thoughtworks.xstream.io.xml.XppReader:
    org.xmlpull.v1.XmlPullParser parser -> parser
    java.io.Reader reader -> reader
    org.xmlpull.v1.XmlPullParser createParser() -> createParser
    int pullNextEvent() -> pullNextEvent
    java.lang.String pullElementName() -> pullElementName
    java.lang.String pullText() -> pullText
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    java.lang.String getAttribute(int) -> getAttribute
    int getAttributeCount() -> getAttributeCount
    java.lang.String getAttributeName(int) -> getAttributeName
    void appendErrors(com.thoughtworks.xstream.converters.ErrorWriter) -> appendErrors
    void close() -> close
com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom -> com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom:
com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder -> com.thoughtworks.xstream.io.xml.xppdom.Xpp3DomBuilder:
    com.thoughtworks.xstream.io.xml.xppdom.Xpp3Dom build(java.io.Reader) -> build
com.thoughtworks.xstream.io.xml.xppdom.XppDom -> com.thoughtworks.xstream.io.xml.xppdom.XppDom:
    long serialVersionUID -> serialVersionUID
    java.lang.String name -> name
    java.lang.String value -> value
    java.util.Map attributes -> attributes
    java.util.List childList -> childList
    java.util.Map childMap -> childMap
    com.thoughtworks.xstream.io.xml.xppdom.XppDom parent -> parent
    java.lang.String getName() -> getName
    java.lang.String getValue() -> getValue
    void setValue(java.lang.String) -> setValue
    java.lang.String[] getAttributeNames() -> getAttributeNames
    java.lang.String getAttribute(java.lang.String) -> getAttribute
    void setAttribute(java.lang.String,java.lang.String) -> setAttribute
    com.thoughtworks.xstream.io.xml.xppdom.XppDom getChild(int) -> getChild
    com.thoughtworks.xstream.io.xml.xppdom.XppDom getChild(java.lang.String) -> getChild
    void addChild(com.thoughtworks.xstream.io.xml.xppdom.XppDom) -> addChild
    com.thoughtworks.xstream.io.xml.xppdom.XppDom[] getChildren() -> getChildren
    com.thoughtworks.xstream.io.xml.xppdom.XppDom[] getChildren(java.lang.String) -> getChildren
    int getChildCount() -> getChildCount
    com.thoughtworks.xstream.io.xml.xppdom.XppDom getParent() -> getParent
    void setParent(com.thoughtworks.xstream.io.xml.xppdom.XppDom) -> setParent
    java.lang.Object readResolve() -> readResolve
    com.thoughtworks.xstream.io.xml.xppdom.XppDom build(org.xmlpull.v1.XmlPullParser) -> build
com.thoughtworks.xstream.io.xml.xppdom.XppDomComparator -> com.thoughtworks.xstream.io.xml.xppdom.XppDomComparator:
    java.lang.ThreadLocal xpath -> xpath
    int compare(java.lang.Object,java.lang.Object) -> compare
    int compareInternal(com.thoughtworks.xstream.io.xml.xppdom.XppDom,com.thoughtworks.xstream.io.xml.xppdom.XppDom,java.lang.StringBuffer,int) -> compareInternal
com.thoughtworks.xstream.io.xml.xppdom.XppFactory -> com.thoughtworks.xstream.io.xml.xppdom.XppFactory:
    org.xmlpull.v1.XmlPullParser createDefaultParser() -> createDefaultParser
    com.thoughtworks.xstream.io.xml.xppdom.XppDom buildDom(java.lang.String) -> buildDom
    com.thoughtworks.xstream.io.xml.xppdom.XppDom buildDom(java.io.Reader) -> buildDom
    com.thoughtworks.xstream.io.xml.xppdom.XppDom buildDom(java.io.InputStream,java.lang.String) -> buildDom
com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper -> com.thoughtworks.xstream.mapper.AbstractAttributeAliasingMapper:
    java.util.Map aliasToName -> aliasToName
    java.util.Map nameToAlias -> nameToAlias
    void addAliasFor(java.lang.String,java.lang.String) -> addAliasFor
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper -> com.thoughtworks.xstream.mapper.AbstractXmlFriendlyMapper:
    char dollarReplacementInClass -> dollarReplacementInClass
    java.lang.String dollarReplacementInField -> dollarReplacementInField
    java.lang.String underscoreReplacementInField -> underscoreReplacementInField
    java.lang.String noPackagePrefix -> noPackagePrefix
    java.lang.String escapeClassName(java.lang.String) -> escapeClassName
    java.lang.String unescapeClassName(java.lang.String) -> unescapeClassName
    java.lang.String escapeFieldName(java.lang.String) -> escapeFieldName
    java.lang.String unescapeFieldName(java.lang.String) -> unescapeFieldName
    boolean stringFoundAt(java.lang.String,int,java.lang.String) -> stringFoundAt
com.thoughtworks.xstream.mapper.AnnotationConfiguration -> com.thoughtworks.xstream.mapper.AnnotationConfiguration:
    void autodetectAnnotations(boolean) -> autodetectAnnotations
    void processAnnotations(java.lang.Class[]) -> processAnnotations
com.thoughtworks.xstream.mapper.AnnotationMapper -> com.thoughtworks.xstream.mapper.AnnotationMapper:
    boolean locked -> locked
    java.lang.Object[] arguments -> arguments
    com.thoughtworks.xstream.converters.ConverterRegistry converterRegistry -> converterRegistry
    com.thoughtworks.xstream.mapper.ClassAliasingMapper classAliasingMapper -> classAliasingMapper
    com.thoughtworks.xstream.mapper.DefaultImplementationsMapper defaultImplementationsMapper -> defaultImplementationsMapper
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper implicitCollectionMapper -> implicitCollectionMapper
    com.thoughtworks.xstream.mapper.FieldAliasingMapper fieldAliasingMapper -> fieldAliasingMapper
    com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper -> attributeMapper
    com.thoughtworks.xstream.mapper.LocalConversionMapper localConversionMapper -> localConversionMapper
    java.util.Map converterCache -> converterCache
    java.util.Set annotatedTypes -> annotatedTypes
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    void autodetectAnnotations(boolean) -> autodetectAnnotations
    void processAnnotations(java.lang.Class[]) -> processAnnotations
    void processAnnotations(java.lang.Class) -> processAnnotations
    void processTypes(java.util.Set) -> processTypes
    void addParametrizedTypes(java.lang.reflect.Type,java.util.Set) -> addParametrizedTypes
    void processConverterAnnotations(java.lang.Class) -> processConverterAnnotations
    void processAliasAnnotation(java.lang.Class,java.util.Set) -> processAliasAnnotation
    void processImplicitCollectionAnnotation(java.lang.Class) -> processImplicitCollectionAnnotation
    void processFieldAliasAnnotation(java.lang.reflect.Field) -> processFieldAliasAnnotation
    void processAsAttributeAnnotation(java.lang.reflect.Field) -> processAsAttributeAnnotation
    void processImplicitAnnotation(java.lang.reflect.Field) -> processImplicitAnnotation
    void processOmitFieldAnnotation(java.lang.reflect.Field) -> processOmitFieldAnnotation
    void processLocalConverterAnnotation(java.lang.reflect.Field) -> processLocalConverterAnnotation
    com.thoughtworks.xstream.converters.Converter cacheConverter(java.lang.Class,java.lang.Class) -> cacheConverter
    java.lang.Class getClass(java.lang.reflect.Type) -> getClass
    java.util.Set access$200(com.thoughtworks.xstream.mapper.AnnotationMapper) -> access$200
com.thoughtworks.xstream.mapper.AnnotationMapper$1 -> com.thoughtworks.xstream.mapper.AnnotationMapper$1:
    java.util.Set val$types -> val$types
    java.util.Set val$processedTypes -> val$processedTypes
    com.thoughtworks.xstream.mapper.AnnotationMapper this$0 -> this$0
    boolean add(java.lang.reflect.Type) -> add
    boolean add(java.lang.Object) -> add
com.thoughtworks.xstream.mapper.AnnotationMapper$UnprocessedTypesSet -> com.thoughtworks.xstream.mapper.AnnotationMapper$UnprocessedTypesSet:
    com.thoughtworks.xstream.mapper.AnnotationMapper this$0 -> this$0
    boolean add(java.lang.Class) -> add
    boolean add(java.lang.Object) -> add
com.thoughtworks.xstream.mapper.AnnotationMapper$WeakHashSet -> com.thoughtworks.xstream.mapper.AnnotationMapper$WeakHashSet:
    java.lang.Object NULL -> NULL
    java.util.WeakHashMap map -> map
    boolean add(java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    void clear() -> clear
    boolean contains(java.lang.Object) -> contains
    boolean containsAll(java.util.Collection) -> containsAll
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
    boolean remove(java.lang.Object) -> remove
    boolean removeAll(java.util.Collection) -> removeAll
    boolean retainAll(java.util.Collection) -> retainAll
    int size() -> size
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.thoughtworks.xstream.mapper.ArrayMapper -> com.thoughtworks.xstream.mapper.ArrayMapper:
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String arrayType(int,java.lang.Class) -> arrayType
    java.lang.String boxedTypeName(java.lang.Class) -> boxedTypeName
com.thoughtworks.xstream.mapper.AttributeAliasingMapper -> com.thoughtworks.xstream.mapper.AttributeAliasingMapper:
    java.lang.String aliasForAttribute(java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.String) -> attributeForAlias
com.thoughtworks.xstream.mapper.AttributeMapper -> com.thoughtworks.xstream.mapper.AttributeMapper:
    java.util.Map fieldNameToTypeMap -> fieldNameToTypeMap
    java.util.Set typeSet -> typeSet
    com.thoughtworks.xstream.converters.ConverterLookup converterLookup -> converterLookup
    com.thoughtworks.xstream.converters.reflection.ReflectionProvider reflectionProvider -> reflectionProvider
    java.util.Set fieldToUseAsAttribute -> fieldToUseAsAttribute
    void setConverterLookup(com.thoughtworks.xstream.converters.ConverterLookup) -> setConverterLookup
    void addAttributeFor(java.lang.String,java.lang.Class) -> addAttributeFor
    void addAttributeFor(java.lang.Class) -> addAttributeFor
    com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverterFromItemType(java.lang.Class) -> getLocalConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    boolean shouldLookForSingleValueConverter(java.lang.String,java.lang.Class,java.lang.Class) -> shouldLookForSingleValueConverter
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
    void addAttributeFor(java.lang.reflect.Field) -> addAttributeFor
    void addAttributeFor(java.lang.Class,java.lang.String) -> addAttributeFor
com.thoughtworks.xstream.mapper.CGLIBMapper -> com.thoughtworks.xstream.mapper.CGLIBMapper:
    java.lang.String DEFAULT_NAMING_MARKER -> DEFAULT_NAMING_MARKER
    java.lang.String alias -> alias
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
com.thoughtworks.xstream.mapper.CGLIBMapper$Marker -> com.thoughtworks.xstream.mapper.CGLIBMapper$Marker:
com.thoughtworks.xstream.mapper.CachingMapper -> com.thoughtworks.xstream.mapper.CachingMapper:
    java.util.Map realClassCache -> realClassCache
    java.lang.Class realClass(java.lang.String) -> realClass
    void flushCache() -> flushCache
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.CannotResolveClassException -> com.thoughtworks.xstream.mapper.CannotResolveClassException:
com.thoughtworks.xstream.mapper.ClassAliasingMapper -> com.thoughtworks.xstream.mapper.ClassAliasingMapper:
    java.util.Map typeToName -> typeToName
    java.util.Map classToName -> classToName
    java.util.Map nameToType -> nameToType
    void addClassAlias(java.lang.String,java.lang.Class) -> addClassAlias
    void addClassAttributeAlias(java.lang.String,java.lang.Class) -> addClassAttributeAlias
    void addTypeAlias(java.lang.String,java.lang.Class) -> addTypeAlias
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    boolean itemTypeAsAttribute(java.lang.Class) -> itemTypeAsAttribute
    boolean aliasIsAttribute(java.lang.String) -> aliasIsAttribute
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.DefaultImplementationsMapper -> com.thoughtworks.xstream.mapper.DefaultImplementationsMapper:
    java.util.Map typeToImpl -> typeToImpl
    java.util.Map implToType -> implToType
    void addDefaults() -> addDefaults
    void addDefaultImplementation(java.lang.Class,java.lang.Class) -> addDefaultImplementation
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.DefaultMapper -> com.thoughtworks.xstream.mapper.DefaultMapper:
    java.lang.String XSTREAM_PACKAGE_ROOT -> XSTREAM_PACKAGE_ROOT
    java.lang.ClassLoader classLoader -> classLoader
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    java.lang.String aliasForAttribute(java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.String) -> attributeForAlias
    java.lang.String aliasForSystemAttribute(java.lang.String) -> aliasForSystemAttribute
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String) -> getImplicitCollectionDefForFieldName
    boolean shouldSerializeMember(java.lang.Class,java.lang.String) -> shouldSerializeMember
    java.lang.String lookupName(java.lang.Class) -> lookupName
    java.lang.Class lookupType(java.lang.String) -> lookupType
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    com.thoughtworks.xstream.mapper.Mapper lookupMapperOfType(java.lang.Class) -> lookupMapperOfType
    java.lang.String aliasForAttribute(java.lang.Class,java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.Class,java.lang.String) -> attributeForAlias
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
com.thoughtworks.xstream.mapper.DynamicProxyMapper -> com.thoughtworks.xstream.mapper.DynamicProxyMapper:
    java.lang.String alias -> alias
    java.lang.String getAlias() -> getAlias
    void setAlias(java.lang.String) -> setAlias
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
com.thoughtworks.xstream.mapper.DynamicProxyMapper$DynamicProxy -> com.thoughtworks.xstream.mapper.DynamicProxyMapper$DynamicProxy:
com.thoughtworks.xstream.mapper.EnumMapper -> com.thoughtworks.xstream.mapper.EnumMapper:
    com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper -> attributeMapper
    java.util.Map enumConverterMap -> enumConverterMap
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getLocalConverter(java.lang.String,java.lang.Class,java.lang.Class) -> getLocalConverter
    void flushCache() -> flushCache
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.FieldAliasingMapper -> com.thoughtworks.xstream.mapper.FieldAliasingMapper:
    java.util.Map fieldToAliasMap -> fieldToAliasMap
    java.util.Map aliasToFieldMap -> aliasToFieldMap
    java.util.Set fieldsToOmit -> fieldsToOmit
    void addFieldAlias(java.lang.String,java.lang.Class,java.lang.String) -> addFieldAlias
    java.lang.Object key(java.lang.Class,java.lang.String) -> key
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    java.lang.String getMember(java.lang.Class,java.lang.String,java.util.Map) -> getMember
    boolean shouldSerializeMember(java.lang.Class,java.lang.String) -> shouldSerializeMember
    void omitField(java.lang.Class,java.lang.String) -> omitField
com.thoughtworks.xstream.mapper.ImmutableTypesMapper -> com.thoughtworks.xstream.mapper.ImmutableTypesMapper:
    java.util.Set immutableTypes -> immutableTypes
    void addImmutableType(java.lang.Class) -> addImmutableType
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper -> com.thoughtworks.xstream.mapper.ImplicitCollectionMapper:
    java.util.Map classNameToMapper -> classNameToMapper
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getMapper(java.lang.Class) -> getMapper
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass getOrCreateMapper(java.lang.Class) -> getOrCreateMapper
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String) -> getImplicitCollectionDefForFieldName
    void add(java.lang.Class,java.lang.String,java.lang.Class) -> add
    void add(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class) -> add
    void add(java.lang.Class,java.lang.String,java.lang.String,java.lang.Class,java.lang.String) -> add
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$1 -> com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$1:
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass -> com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMapperForClass:
    java.util.Map namedItemTypeToDef -> namedItemTypeToDef
    java.util.Map itemFieldNameToDef -> itemFieldNameToDef
    java.util.Map fieldNameToDef -> fieldNameToDef
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl getImplicitCollectionDefByItemFieldName(java.lang.String) -> getImplicitCollectionDefByItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.String) -> getImplicitCollectionDefForFieldName
    void add(com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl) -> add
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl -> com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$ImplicitCollectionMappingImpl:
    java.lang.String fieldName -> fieldName
    java.lang.String itemFieldName -> itemFieldName
    java.lang.Class itemType -> itemType
    java.lang.String keyFieldName -> keyFieldName
    boolean equals(java.lang.Object) -> equals
    com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$NamedItemType createNamedItemType() -> createNamedItemType
    boolean isEquals(java.lang.Object,java.lang.Object) -> isEquals
    int hashCode() -> hashCode
    java.lang.String getFieldName() -> getFieldName
    java.lang.String getItemFieldName() -> getItemFieldName
    java.lang.Class getItemType() -> getItemType
    java.lang.String getKeyFieldName() -> getKeyFieldName
com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$NamedItemType -> com.thoughtworks.xstream.mapper.ImplicitCollectionMapper$NamedItemType:
    java.lang.Class itemType -> itemType
    java.lang.String itemFieldName -> itemFieldName
    boolean equals(java.lang.Object) -> equals
    boolean isEquals(java.lang.Object,java.lang.Object) -> isEquals
    int hashCode() -> hashCode
com.thoughtworks.xstream.mapper.LocalConversionMapper -> com.thoughtworks.xstream.mapper.LocalConversionMapper:
    java.util.Map localConverters -> localConverters
    com.thoughtworks.xstream.mapper.AttributeMapper attributeMapper -> attributeMapper
    void registerLocalConverter(java.lang.Class,java.lang.String,com.thoughtworks.xstream.converters.Converter) -> registerLocalConverter
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getLocalSingleValueConverter(java.lang.Class,java.lang.String,java.lang.Class) -> getLocalSingleValueConverter
    java.lang.Object readResolve() -> readResolve
com.thoughtworks.xstream.mapper.Mapper -> com.thoughtworks.xstream.mapper.Mapper:
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    java.lang.String aliasForAttribute(java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.String) -> attributeForAlias
    java.lang.String aliasForSystemAttribute(java.lang.String) -> aliasForSystemAttribute
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String) -> getImplicitCollectionDefForFieldName
    boolean shouldSerializeMember(java.lang.Class,java.lang.String) -> shouldSerializeMember
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    com.thoughtworks.xstream.mapper.Mapper lookupMapperOfType(java.lang.Class) -> lookupMapperOfType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    java.lang.String aliasForAttribute(java.lang.Class,java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.Class,java.lang.String) -> attributeForAlias
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping -> com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping:
    java.lang.String getFieldName() -> getFieldName
    java.lang.String getItemFieldName() -> getItemFieldName
    java.lang.Class getItemType() -> getItemType
    java.lang.String getKeyFieldName() -> getKeyFieldName
com.thoughtworks.xstream.mapper.Mapper$Null -> com.thoughtworks.xstream.mapper.Mapper$Null:
com.thoughtworks.xstream.mapper.MapperWrapper -> com.thoughtworks.xstream.mapper.MapperWrapper:
    com.thoughtworks.xstream.mapper.Mapper wrapped -> wrapped
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    boolean isImmutableValueType(java.lang.Class) -> isImmutableValueType
    java.lang.Class defaultImplementationOf(java.lang.Class) -> defaultImplementationOf
    java.lang.String aliasForAttribute(java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.String) -> attributeForAlias
    java.lang.String aliasForSystemAttribute(java.lang.String) -> aliasForSystemAttribute
    java.lang.String getFieldNameForItemTypeAndName(java.lang.Class,java.lang.Class,java.lang.String) -> getFieldNameForItemTypeAndName
    java.lang.Class getItemTypeForItemFieldName(java.lang.Class,java.lang.String) -> getItemTypeForItemFieldName
    com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping getImplicitCollectionDefForFieldName(java.lang.Class,java.lang.String) -> getImplicitCollectionDefForFieldName
    boolean shouldSerializeMember(java.lang.Class,java.lang.String) -> shouldSerializeMember
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.Class) -> getConverterFromItemType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.Converter getLocalConverter(java.lang.Class,java.lang.String) -> getLocalConverter
    com.thoughtworks.xstream.mapper.Mapper lookupMapperOfType(java.lang.Class) -> lookupMapperOfType
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromItemType(java.lang.String,java.lang.Class,java.lang.Class) -> getConverterFromItemType
    java.lang.String aliasForAttribute(java.lang.Class,java.lang.String) -> aliasForAttribute
    java.lang.String attributeForAlias(java.lang.Class,java.lang.String) -> attributeForAlias
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String) -> getConverterFromAttribute
    com.thoughtworks.xstream.converters.SingleValueConverter getConverterFromAttribute(java.lang.Class,java.lang.String,java.lang.Class) -> getConverterFromAttribute
com.thoughtworks.xstream.mapper.OuterClassMapper -> com.thoughtworks.xstream.mapper.OuterClassMapper:
    java.lang.String alias -> alias
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
com.thoughtworks.xstream.mapper.PackageAliasingMapper -> com.thoughtworks.xstream.mapper.PackageAliasingMapper:
    java.util.Comparator REVERSE -> REVERSE
    java.util.Map packageToName -> packageToName
    java.util.Map nameToPackage -> nameToPackage
    void addPackageAlias(java.lang.String,java.lang.String) -> addPackageAlias
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    void writeObject(java.io.ObjectOutputStream) -> writeObject
    void readObject(java.io.ObjectInputStream) -> readObject
com.thoughtworks.xstream.mapper.PackageAliasingMapper$1 -> com.thoughtworks.xstream.mapper.PackageAliasingMapper$1:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper -> com.thoughtworks.xstream.mapper.SystemAttributeAliasingMapper:
    java.lang.String aliasForSystemAttribute(java.lang.String) -> aliasForSystemAttribute
com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper -> com.thoughtworks.xstream.mapper.XStream11XmlFriendlyMapper:
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    java.lang.String mapNameFromXML(java.lang.String) -> mapNameFromXML
com.thoughtworks.xstream.mapper.XmlFriendlyMapper -> com.thoughtworks.xstream.mapper.XmlFriendlyMapper:
    java.lang.String serializedClass(java.lang.Class) -> serializedClass
    java.lang.Class realClass(java.lang.String) -> realClass
    java.lang.String serializedMember(java.lang.Class,java.lang.String) -> serializedMember
    java.lang.String realMember(java.lang.Class,java.lang.String) -> realMember
    java.lang.String mapNameToXML(java.lang.String) -> mapNameToXML
    java.lang.String mapNameFromXML(java.lang.String) -> mapNameFromXML
com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy -> com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy:
    java.io.FilenameFilter filter -> filter
    java.io.File baseDirectory -> baseDirectory
    java.lang.String encoding -> encoding
    com.thoughtworks.xstream.XStream xstream -> xstream
    com.thoughtworks.xstream.converters.ConverterLookup getConverterLookup() -> getConverterLookup
    com.thoughtworks.xstream.mapper.Mapper getMapper() -> getMapper
    boolean isValid(java.io.File,java.lang.String) -> isValid
    java.lang.Object extractKey(java.lang.String) -> extractKey
    java.lang.String getName(java.lang.Object) -> getName
    void writeFile(java.io.File,java.lang.Object) -> writeFile
    java.io.File getFile(java.lang.String) -> getFile
    java.lang.Object readFile(java.io.File) -> readFile
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.io.FilenameFilter access$000(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy) -> access$000
    java.io.File access$100(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy) -> access$100
    java.lang.Object access$500(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy,java.io.File) -> access$500
com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$ValidFilenameFilter -> com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$ValidFilenameFilter:
    com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy this$0 -> this$0
    boolean accept(java.io.File,java.lang.String) -> accept
com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator -> com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator:
    java.io.File[] files -> files
    int position -> position
    java.io.File current -> current
    com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy this$0 -> this$0
    boolean hasNext() -> hasNext
    void remove() -> remove
    java.lang.Object next() -> next
    java.io.File access$202(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator,java.io.File) -> access$202
    java.io.File[] access$300(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator) -> access$300
    int access$404(com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator) -> access$404
com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1 -> com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator$1:
    java.io.File file -> file
    java.lang.Object key -> key
    com.thoughtworks.xstream.persistence.AbstractFilePersistenceStrategy$XmlMapEntriesIterator this$1 -> this$1
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    java.lang.Object setValue(java.lang.Object) -> setValue
    boolean equals(java.lang.Object) -> equals
com.thoughtworks.xstream.persistence.FilePersistenceStrategy -> com.thoughtworks.xstream.persistence.FilePersistenceStrategy:
    java.lang.String illegalChars -> illegalChars
    boolean isValid(java.io.File,java.lang.String) -> isValid
    java.lang.Object extractKey(java.lang.String) -> extractKey
    java.lang.String unescape(java.lang.String) -> unescape
    java.lang.String getName(java.lang.Object) -> getName
    java.lang.String escape(java.lang.String) -> escape
com.thoughtworks.xstream.persistence.FileStreamStrategy -> com.thoughtworks.xstream.persistence.FileStreamStrategy:
    java.lang.Object extractKey(java.lang.String) -> extractKey
    java.lang.String unescape(java.lang.String) -> unescape
    java.lang.String getName(java.lang.Object) -> getName
    java.lang.String escape(java.lang.String) -> escape
com.thoughtworks.xstream.persistence.PersistenceStrategy -> com.thoughtworks.xstream.persistence.PersistenceStrategy:
    java.util.Iterator iterator() -> iterator
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
com.thoughtworks.xstream.persistence.StreamStrategy -> com.thoughtworks.xstream.persistence.StreamStrategy:
com.thoughtworks.xstream.persistence.XmlArrayList -> com.thoughtworks.xstream.persistence.XmlArrayList:
    com.thoughtworks.xstream.persistence.XmlMap map -> map
    int size() -> size
    java.lang.Object set(int,java.lang.Object) -> set
    void add(int,java.lang.Object) -> add
    void rangeCheck(int) -> rangeCheck
    java.lang.Object get(int) -> get
    java.lang.Object remove(int) -> remove
com.thoughtworks.xstream.persistence.XmlMap -> com.thoughtworks.xstream.persistence.XmlMap:
    com.thoughtworks.xstream.persistence.PersistenceStrategy persistenceStrategy -> persistenceStrategy
    int size() -> size
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    java.lang.Object remove(java.lang.Object) -> remove
    java.util.Set entrySet() -> entrySet
    com.thoughtworks.xstream.persistence.PersistenceStrategy access$000(com.thoughtworks.xstream.persistence.XmlMap) -> access$000
com.thoughtworks.xstream.persistence.XmlMap$XmlMapEntries -> com.thoughtworks.xstream.persistence.XmlMap$XmlMapEntries:
    com.thoughtworks.xstream.persistence.XmlMap this$0 -> this$0
    int size() -> size
    boolean isEmpty() -> isEmpty
    java.util.Iterator iterator() -> iterator
com.thoughtworks.xstream.persistence.XmlSet -> com.thoughtworks.xstream.persistence.XmlSet:
    com.thoughtworks.xstream.persistence.XmlMap map -> map
    java.util.Iterator iterator() -> iterator
    int size() -> size
    boolean add(java.lang.Object) -> add
    java.lang.Long findEmptyKey() -> findEmptyKey
com.vsmjsc.rdgt.FragmentChuyenMuc -> com.vsmjsc.rdgt.a:
    com.vsmjsc.rdgt.widget.PagingListView lvCategory -> a
    com.vsmjsc.rdgt.SimpleAdapter adapterCategory -> b
    java.util.List dataCategory -> c
    android.view.View llLoading -> d
    boolean isRefresh -> e
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onRefresh() -> a
    void onLoadMore() -> b
    boolean access$0(com.vsmjsc.rdgt.FragmentChuyenMuc) -> a
    void access$1(com.vsmjsc.rdgt.FragmentChuyenMuc,boolean) -> a
    java.util.List access$2() -> c
    android.view.View access$3(com.vsmjsc.rdgt.FragmentChuyenMuc) -> b
    com.vsmjsc.rdgt.widget.PagingListView access$4(com.vsmjsc.rdgt.FragmentChuyenMuc) -> c
    com.vsmjsc.rdgt.SimpleAdapter access$5(com.vsmjsc.rdgt.FragmentChuyenMuc) -> d
com.vsmjsc.rdgt.FragmentChuyenMuc$1 -> com.vsmjsc.rdgt.FragmentChuyenMuc$1:
    com.vsmjsc.rdgt.FragmentChuyenMuc this$0 -> a
    void onClick(android.view.View) -> onClick
com.vsmjsc.rdgt.FragmentChuyenMuc$CategoryDataLoader -> com.vsmjsc.rdgt.a$a:
    com.vsmjsc.rdgt.FragmentChuyenMuc this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.vsmjsc.rdgt.FragmentChuyenMuc access$2(com.vsmjsc.rdgt.FragmentChuyenMuc$CategoryDataLoader) -> a
com.vsmjsc.rdgt.FragmentChuyenMuc$CategoryDataLoader$1 -> com.vsmjsc.rdgt.FragmentChuyenMuc$CategoryDataLoader$1:
    com.vsmjsc.rdgt.FragmentChuyenMuc$CategoryDataLoader this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.vsmjsc.rdgt.FragmentChuyenMuc$CategoryDataLoader$2 -> com.vsmjsc.rdgt.a$a$1:
    com.vsmjsc.rdgt.FragmentChuyenMuc$CategoryDataLoader this$1 -> a
    void run() -> run
com.vsmjsc.rdgt.FragmentChuyenMuc$CategoryDataLoader$3 -> com.vsmjsc.rdgt.FragmentChuyenMuc$CategoryDataLoader$3:
    com.vsmjsc.rdgt.FragmentChuyenMuc$CategoryDataLoader this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.vsmjsc.rdgt.FragmentChuyenMuc$CategoryDataLoader$4 -> com.vsmjsc.rdgt.FragmentChuyenMuc$CategoryDataLoader$4:
    com.vsmjsc.rdgt.FragmentChuyenMuc$CategoryDataLoader this$1 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.vsmjsc.rdgt.FragmentDaMua -> com.vsmjsc.rdgt.b:
    com.vsmjsc.rdgt.widget.PagingListView lvDaMua -> a
    com.vsmjsc.rdgt.SimpleAdapter adapter -> b
    java.util.List data -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    java.util.List access$0(com.vsmjsc.rdgt.FragmentDaMua) -> a
    com.vsmjsc.rdgt.widget.PagingListView access$1(com.vsmjsc.rdgt.FragmentDaMua) -> b
    com.vsmjsc.rdgt.SimpleAdapter access$2(com.vsmjsc.rdgt.FragmentDaMua) -> c
com.vsmjsc.rdgt.FragmentDaMua$MyRadioLoader -> com.vsmjsc.rdgt.b$a:
    com.vsmjsc.rdgt.FragmentDaMua this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Integer doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Integer) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.vsmjsc.rdgt.FragmentDaMua access$3(com.vsmjsc.rdgt.FragmentDaMua$MyRadioLoader) -> a
com.vsmjsc.rdgt.FragmentDaMua$MyRadioLoader$1 -> com.vsmjsc.rdgt.b$a$1:
    com.vsmjsc.rdgt.FragmentDaMua$MyRadioLoader this$1 -> a
    java.lang.Integer val$result -> b
    void run() -> run
com.vsmjsc.rdgt.FragmentDangNghe -> com.vsmjsc.rdgt.c:
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
com.vsmjsc.rdgt.FragmentRadioTrack -> com.vsmjsc.rdgt.d:
    com.vsmjsc.rdgt.widget.PagingListView lvRadioTrack -> c
    com.vsmjsc.rdgt.SimpleAdapter adapter -> d
    java.util.List data -> e
    java.lang.String[] subcategory_from -> a
    int[] subcategory_to -> b
    int totalTrack -> f
    java.lang.String mCatName -> g
    android.view.View llLoading -> h
    int catId -> i
    java.lang.String getCategoryName() -> c
    void setCatId(int) -> a
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onRefresh() -> a
    void onLoadMore() -> b
    void access$0(int) -> b
    java.util.List access$1(com.vsmjsc.rdgt.FragmentRadioTrack) -> a
    int access$2() -> d
    com.vsmjsc.rdgt.widget.PagingListView access$3(com.vsmjsc.rdgt.FragmentRadioTrack) -> b
    android.view.View access$4(com.vsmjsc.rdgt.FragmentRadioTrack) -> c
    com.vsmjsc.rdgt.SimpleAdapter access$5(com.vsmjsc.rdgt.FragmentRadioTrack) -> d
com.vsmjsc.rdgt.FragmentRadioTrack$1 -> com.vsmjsc.rdgt.FragmentRadioTrack$1:
    com.vsmjsc.rdgt.FragmentRadioTrack this$0 -> a
    void onClick(android.view.View) -> onClick
com.vsmjsc.rdgt.FragmentRadioTrack$2 -> com.vsmjsc.rdgt.d$1:
    com.vsmjsc.rdgt.FragmentRadioTrack this$0 -> a
    void onPostExecute(com.vsmjsc.rdgt.model.RadioTrack) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    com.vsmjsc.rdgt.FragmentRadioTrack access$1(com.vsmjsc.rdgt.FragmentRadioTrack$2) -> a
com.vsmjsc.rdgt.FragmentRadioTrack$2$1 -> com.vsmjsc.rdgt.d$1$1:
    com.vsmjsc.rdgt.FragmentRadioTrack$2 this$1 -> a
    com.vsmjsc.rdgt.model.RadioTrack val$result -> b
    void run() -> run
com.vsmjsc.rdgt.FragmentRadioTrack$SubCategoryLoader -> com.vsmjsc.rdgt.d$a:
    java.lang.String catId -> b
    com.vsmjsc.rdgt.FragmentRadioTrack this$0 -> a
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    com.vsmjsc.rdgt.FragmentRadioTrack access$2(com.vsmjsc.rdgt.FragmentRadioTrack$SubCategoryLoader) -> a
com.vsmjsc.rdgt.FragmentRadioTrack$SubCategoryLoader$1 -> com.vsmjsc.rdgt.d$a$1:
    com.vsmjsc.rdgt.FragmentRadioTrack$SubCategoryLoader this$1 -> a
    void run() -> run
com.vsmjsc.rdgt.ScreenHomeActivity -> com.vsmjsc.rdgt.ScreenHomeActivity:
    android.support.v4.app.Fragment currentFragmentTabRadioShop -> a
    android.support.v4.app.Fragment currentFragmentTabDangNghe -> b
    com.vsmjsc.rdgt.model.RadioTrack currentPlaying -> c
    android.media.MediaPlayer mPlayer -> d
    void setRadioPlaying(com.vsmjsc.rdgt.model.RadioTrack) -> a
    com.vsmjsc.rdgt.model.RadioTrack getCurrentPlaying() -> a
    void setCurrentFragmentTabRadioShop(android.support.v4.app.Fragment) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onClick_Back(android.view.View) -> onClick_Back
    void onClick_Play(android.view.View) -> onClick_Play
    void onClick_RadioShop(android.view.View) -> onClick_RadioShop
    void onClick_DangNghe(android.view.View) -> onClick_DangNghe
    void onClick_DaMua(android.view.View) -> onClick_DaMua
    void playRadioTrack(com.vsmjsc.rdgt.model.RadioTrack) -> b
    android.media.MediaPlayer access$0(com.vsmjsc.rdgt.ScreenHomeActivity) -> a
    void access$1(com.vsmjsc.rdgt.ScreenHomeActivity,android.media.MediaPlayer) -> a
com.vsmjsc.rdgt.ScreenHomeActivity$1 -> com.vsmjsc.rdgt.ScreenHomeActivity$1:
    com.vsmjsc.rdgt.ScreenHomeActivity this$0 -> a
    com.vsmjsc.rdgt.model.RadioTrack val$radio -> b
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onProgressUpdate(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void access$3(com.vsmjsc.rdgt.ScreenHomeActivity$1,java.lang.Object[]) -> a
    com.vsmjsc.rdgt.ScreenHomeActivity access$4(com.vsmjsc.rdgt.ScreenHomeActivity$1) -> a
com.vsmjsc.rdgt.ScreenHomeActivity$1$1 -> com.vsmjsc.rdgt.ScreenHomeActivity$1$1:
    com.vsmjsc.rdgt.ScreenHomeActivity$1 this$1 -> a
    com.vsmjsc.rdgt.model.RadioTrack val$radio -> b
    void run() -> run
com.vsmjsc.rdgt.ScreenHomeActivity$1$2 -> com.vsmjsc.rdgt.ScreenHomeActivity$1$2:
    com.vsmjsc.rdgt.ScreenHomeActivity$1 this$1 -> a
    void onBufferingUpdate(android.media.MediaPlayer,int) -> onBufferingUpdate
com.vsmjsc.rdgt.ScreenHomeActivity$1$3 -> com.vsmjsc.rdgt.ScreenHomeActivity$1$3:
    com.vsmjsc.rdgt.ScreenHomeActivity$1 this$1 -> a
    void run() -> run
com.vsmjsc.rdgt.SimpleAdapter -> com.vsmjsc.rdgt.e:
    int[] mTo -> a
    java.lang.String[] mFrom -> b
    com.vsmjsc.rdgt.SimpleAdapter$ViewBinder mViewBinder -> c
    int[] mToSeparator -> d
    java.lang.String[] mFromSeparator -> e
    java.util.List mData -> f
    int mResource -> g
    int mDropDownResource -> h
    android.view.LayoutInflater mInflater -> i
    int mSeparatorResource -> j
    com.vsmjsc.rdgt.SimpleAdapter$SimpleFilter mFilter -> k
    java.util.ArrayList mUnfilteredData -> l
    java.lang.String ITEM_TYPE -> m
    java.lang.String TYPE_SEPARATOR -> n
    int[] ids -> o
    android.widget.LinearLayout$LayoutParams[] layoutParams -> p
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View createViewFromResource(int,android.view.View,android.view.ViewGroup,int) -> a
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    void bindViewSeparator(int,android.view.View) -> a
    void bindView(int,android.view.View) -> b
    void setViewImage(android.widget.ImageView,int) -> a
    void setViewImage(android.widget.ImageView,java.lang.String) -> a
    void setViewText(android.widget.TextView,java.lang.String) -> a
    android.widget.Filter getFilter() -> getFilter
    java.util.ArrayList access$0(com.vsmjsc.rdgt.SimpleAdapter) -> a
    java.util.List access$1(com.vsmjsc.rdgt.SimpleAdapter) -> b
    void access$2(com.vsmjsc.rdgt.SimpleAdapter,java.util.ArrayList) -> a
    int[] access$3(com.vsmjsc.rdgt.SimpleAdapter) -> c
    java.lang.String[] access$4(com.vsmjsc.rdgt.SimpleAdapter) -> d
    void access$5(com.vsmjsc.rdgt.SimpleAdapter,java.util.List) -> a
com.vsmjsc.rdgt.SimpleAdapter$SimpleFilter -> com.vsmjsc.rdgt.e$a:
    com.vsmjsc.rdgt.SimpleAdapter this$0 -> a
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
com.vsmjsc.rdgt.SimpleAdapter$ViewBinder -> com.vsmjsc.rdgt.e$b:
    boolean setViewValue(android.view.View,java.lang.Object,java.lang.String) -> a
com.vsmjsc.rdgt.SimpleAdapter$ViewVisibility -> com.vsmjsc.rdgt.e$c:
    int viewVisibility -> a
    boolean isVisible() -> a
com.vsmjsc.rdgt.cloudservice.HttpGet -> com.vsmjsc.rdgt.a.a:
    java.lang.String HTTP_PROXY_HOST -> a
    int HTTP_PROXY_PORT -> b
    com.vsmjsc.rdgt.cloudservice.HttpResponse getDataInputStreamFromUrl(java.lang.String) -> a
    boolean isProxyEnabled() -> a
com.vsmjsc.rdgt.cloudservice.HttpResponse -> com.vsmjsc.rdgt.a.b:
    int contentLength -> a
    int httpCode -> b
    java.io.InputStream inputStream -> c
    void setContentLength(int) -> a
    int getHttpCode() -> a
    void setHttpCode(int) -> b
    void setInputStream(java.io.InputStream) -> a
    java.lang.String getContent() -> b
com.vsmjsc.rdgt.configs.Defines -> com.vsmjsc.rdgt.b.a:
    int[] IGNORE_CATEGORY -> a
    int[] FREE_TRACK -> b
com.vsmjsc.rdgt.model.RadioTrack -> com.vsmjsc.rdgt.model.RadioTrack:
    int trackId -> a
    int views -> b
    int likes -> c
    java.lang.String date -> d
    java.lang.String name -> e
    java.lang.String description -> f
    java.lang.String audioUrl -> g
    java.lang.String imageUrl -> h
    java.lang.String length -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void setId(int) -> a
    void setViews(int) -> b
    void setLikes(int) -> c
    void setDate(java.lang.String) -> a
    java.lang.String getName() -> a
    void setName(java.lang.String) -> b
    java.lang.String getAudioUrl() -> b
    void setAudioUrl(java.lang.String) -> c
    java.lang.String getImageUrl() -> c
    void setImageUrl(java.lang.String) -> d
    java.lang.String getDescription() -> d
    void setDescription(java.lang.String) -> e
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    void readFromParcel(android.os.Parcel) -> a
    void setLength(java.lang.String) -> f
com.vsmjsc.rdgt.model.RadioTrack$1 -> com.vsmjsc.rdgt.model.RadioTrack$1:
    com.vsmjsc.rdgt.model.RadioTrack createFromParcel(android.os.Parcel) -> a
    com.vsmjsc.rdgt.model.RadioTrack[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.vsmjsc.rdgt.sqlite.CacheManager -> com.vsmjsc.rdgt.c.a:
    android.database.sqlite.SQLiteDatabase sqldb -> a
    android.content.Context mContext -> b
    void open() -> a
    void close() -> b
com.vsmjsc.rdgt.task.RadioTrackLoader -> com.vsmjsc.rdgt.d.a:
    java.lang.String radioTrackId -> b
    com.vsmjsc.rdgt.model.RadioTrack doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.vsmjsc.rdgt.utils.UtilFuntions -> com.vsmjsc.rdgt.e.a:
    java.lang.String getRealUrl(java.lang.String) -> a
    java.lang.String getTimeString(int) -> a
com.vsmjsc.rdgt.widget.PagingListFooterView -> com.vsmjsc.rdgt.widget.PagingListFooterView:
    android.content.Context mContext -> a
    android.view.View mContentView -> b
    android.view.View mProgressBar -> c
    android.widget.TextView mHintView -> d
    void setState(int) -> setState
    void setBottomMargin(int) -> setBottomMargin
    int getBottomMargin() -> getBottomMargin
    void hide() -> a
    void show() -> b
    void initView(android.content.Context) -> a
com.vsmjsc.rdgt.widget.PagingListHeaderView -> com.vsmjsc.rdgt.widget.PagingListHeaderView:
    android.widget.LinearLayout mContainer -> a
    android.widget.ImageView mArrowImageView -> b
    android.widget.ProgressBar mProgressBar -> c
    android.widget.TextView mHintTextView -> d
    android.widget.TextView mHeaderTimePrefixView -> e
    android.widget.TextView mHeaderTimeView -> f
    int mState -> g
    android.view.animation.Animation mRotateUpAnim -> h
    android.view.animation.Animation mRotateDownAnim -> i
    int ROTATE_ANIM_DURATION -> j
    void initView(android.content.Context) -> a
    void setState(int) -> setState
    void setVisiableHeight(int) -> setVisiableHeight
    int getVisiableHeight() -> getVisiableHeight
com.vsmjsc.rdgt.widget.PagingListView -> com.vsmjsc.rdgt.widget.PagingListView:
    float mLastY -> a
    android.widget.Scroller mScroller -> b
    android.widget.AbsListView$OnScrollListener mScrollListener -> c
    com.vsmjsc.rdgt.widget.PagingListView$PagingListViewListener mListViewListener -> d
    com.vsmjsc.rdgt.widget.PagingListHeaderView mHeaderView -> e
    android.widget.RelativeLayout mHeaderViewContent -> f
    android.widget.TextView mHeaderTimeView -> g
    int mHeaderViewHeight -> h
    boolean mEnablePullRefresh -> i
    boolean mPullRefreshing -> j
    com.vsmjsc.rdgt.widget.PagingListFooterView mFooterView -> k
    boolean mEnablePullLoad -> l
    boolean mPullLoading -> m
    boolean mIsFooterReady -> n
    int mTotalItemCount -> o
    int mScrollBack -> p
    void initWithContext(android.content.Context) -> a
    void setAdapter(android.widget.ListAdapter) -> setAdapter
    void setPullRefreshEnable(boolean) -> setPullRefreshEnable
    void setPullLoadEnable(boolean) -> setPullLoadEnable
    void stopRefresh() -> a
    void stopLoadMore() -> b
    void setRefreshTime(java.lang.String) -> setRefreshTime
    void invokeOnScrolling() -> c
    void updateHeaderHeight(float) -> a
    void resetHeaderHeight() -> d
    void updateFooterHeight(float) -> b
    void resetFooterHeight() -> e
    void startLoadMore() -> f
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void computeScroll() -> computeScroll
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void setPagingListViewListener(com.vsmjsc.rdgt.widget.PagingListView$PagingListViewListener) -> setPagingListViewListener
    android.widget.RelativeLayout access$0(com.vsmjsc.rdgt.widget.PagingListView) -> a
    void access$1(com.vsmjsc.rdgt.widget.PagingListView,int) -> a
    void access$2(com.vsmjsc.rdgt.widget.PagingListView) -> b
com.vsmjsc.rdgt.widget.PagingListView$1 -> com.vsmjsc.rdgt.widget.PagingListView$1:
    com.vsmjsc.rdgt.widget.PagingListView this$0 -> a
    void onGlobalLayout() -> onGlobalLayout
com.vsmjsc.rdgt.widget.PagingListView$2 -> com.vsmjsc.rdgt.widget.PagingListView$2:
    com.vsmjsc.rdgt.widget.PagingListView this$0 -> a
    void onClick(android.view.View) -> onClick
com.vsmjsc.rdgt.widget.PagingListView$OnXScrollListener -> com.vsmjsc.rdgt.widget.PagingListView$a:
    void onXScrolling(android.view.View) -> a
com.vsmjsc.rdgt.widget.PagingListView$PagingListViewListener -> com.vsmjsc.rdgt.widget.PagingListView$b:
    void onRefresh() -> a
    void onLoadMore() -> b
